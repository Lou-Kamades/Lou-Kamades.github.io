<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="486" onload="init(evt)" viewBox="0 0 1200 486" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="486" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="469.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="469.00"> </text><svg id="frames" x="10" width="1180" total_samples="134"><g><title>free_unref_page_list (1 samples, 0.75%)</title><rect x="0.7463%" y="197" width="0.7463%" height="15" fill="rgb(227,0,7)" fg:x="1" fg:w="1"/><text x="0.9963%" y="207.50"></text></g><g><title>free_unref_page_commit (1 samples, 0.75%)</title><rect x="0.7463%" y="181" width="0.7463%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="1"/><text x="0.9963%" y="191.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.75%)</title><rect x="1.4925%" y="165" width="0.7463%" height="15" fill="rgb(221,193,54)" fg:x="2" fg:w="1"/><text x="1.7425%" y="175.50"></text></g><g><title>tlb_finish_mmu (4 samples, 2.99%)</title><rect x="0.0000%" y="261" width="2.9851%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="4"/><text x="0.2500%" y="271.50">tlb..</text></g><g><title>tlb_batch_pages_flush (3 samples, 2.24%)</title><rect x="0.7463%" y="245" width="2.2388%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="3"/><text x="0.9963%" y="255.50">t..</text></g><g><title>free_pages_and_swap_cache (3 samples, 2.24%)</title><rect x="0.7463%" y="229" width="2.2388%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="3"/><text x="0.9963%" y="239.50">f..</text></g><g><title>release_pages (3 samples, 2.24%)</title><rect x="0.7463%" y="213" width="2.2388%" height="15" fill="rgb(207,160,47)" fg:x="1" fg:w="3"/><text x="0.9963%" y="223.50">r..</text></g><g><title>lru_gen_del_folio.constprop.0 (2 samples, 1.49%)</title><rect x="1.4925%" y="197" width="1.4925%" height="15" fill="rgb(228,23,34)" fg:x="2" fg:w="2"/><text x="1.7425%" y="207.50"></text></g><g><title>__mod_lruvec_state (2 samples, 1.49%)</title><rect x="1.4925%" y="181" width="1.4925%" height="15" fill="rgb(218,30,26)" fg:x="2" fg:w="2"/><text x="1.7425%" y="191.50"></text></g><g><title>__mod_node_page_state (1 samples, 0.75%)</title><rect x="2.2388%" y="165" width="0.7463%" height="15" fill="rgb(220,122,19)" fg:x="3" fg:w="1"/><text x="2.4888%" y="175.50"></text></g><g><title>_compound_head (1 samples, 0.75%)</title><rect x="2.9851%" y="197" width="0.7463%" height="15" fill="rgb(250,228,42)" fg:x="4" fg:w="1"/><text x="3.2351%" y="207.50"></text></g><g><title>__munmap (8 samples, 5.97%)</title><rect x="0.0000%" y="405" width="5.9701%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="8"/><text x="0.2500%" y="415.50">__munmap</text></g><g><title>entry_SYSCALL_64_after_hwframe (8 samples, 5.97%)</title><rect x="0.0000%" y="389" width="5.9701%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="8"/><text x="0.2500%" y="399.50">entry_SY..</text></g><g><title>do_syscall_64 (8 samples, 5.97%)</title><rect x="0.0000%" y="373" width="5.9701%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="8"/><text x="0.2500%" y="383.50">do_sysca..</text></g><g><title>x64_sys_call (8 samples, 5.97%)</title><rect x="0.0000%" y="357" width="5.9701%" height="15" fill="rgb(217,207,13)" fg:x="0" fg:w="8"/><text x="0.2500%" y="367.50">x64_sys_..</text></g><g><title>__x64_sys_munmap (8 samples, 5.97%)</title><rect x="0.0000%" y="341" width="5.9701%" height="15" fill="rgb(231,73,38)" fg:x="0" fg:w="8"/><text x="0.2500%" y="351.50">__x64_sy..</text></g><g><title>__vm_munmap (8 samples, 5.97%)</title><rect x="0.0000%" y="325" width="5.9701%" height="15" fill="rgb(225,20,46)" fg:x="0" fg:w="8"/><text x="0.2500%" y="335.50">__vm_mun..</text></g><g><title>do_vmi_munmap (8 samples, 5.97%)</title><rect x="0.0000%" y="309" width="5.9701%" height="15" fill="rgb(210,31,41)" fg:x="0" fg:w="8"/><text x="0.2500%" y="319.50">do_vmi_m..</text></g><g><title>do_vmi_align_munmap (8 samples, 5.97%)</title><rect x="0.0000%" y="293" width="5.9701%" height="15" fill="rgb(221,200,47)" fg:x="0" fg:w="8"/><text x="0.2500%" y="303.50">do_vmi_a..</text></g><g><title>unmap_region (8 samples, 5.97%)</title><rect x="0.0000%" y="277" width="5.9701%" height="15" fill="rgb(226,26,5)" fg:x="0" fg:w="8"/><text x="0.2500%" y="287.50">unmap_re..</text></g><g><title>unmap_vmas (4 samples, 2.99%)</title><rect x="2.9851%" y="261" width="2.9851%" height="15" fill="rgb(249,33,26)" fg:x="4" fg:w="4"/><text x="3.2351%" y="271.50">unm..</text></g><g><title>unmap_single_vma (4 samples, 2.99%)</title><rect x="2.9851%" y="245" width="2.9851%" height="15" fill="rgb(235,183,28)" fg:x="4" fg:w="4"/><text x="3.2351%" y="255.50">unm..</text></g><g><title>unmap_page_range (4 samples, 2.99%)</title><rect x="2.9851%" y="229" width="2.9851%" height="15" fill="rgb(221,5,38)" fg:x="4" fg:w="4"/><text x="3.2351%" y="239.50">unm..</text></g><g><title>zap_pmd_range.isra.0 (4 samples, 2.99%)</title><rect x="2.9851%" y="213" width="2.9851%" height="15" fill="rgb(247,18,42)" fg:x="4" fg:w="4"/><text x="3.2351%" y="223.50">zap..</text></g><g><title>zap_pte_range (3 samples, 2.24%)</title><rect x="3.7313%" y="197" width="2.2388%" height="15" fill="rgb(241,131,45)" fg:x="5" fg:w="3"/><text x="3.9813%" y="207.50">z..</text></g><g><title>__perf_event_task_sched_in (1 samples, 0.75%)</title><rect x="16.4179%" y="277" width="0.7463%" height="15" fill="rgb(249,31,29)" fg:x="22" fg:w="1"/><text x="16.6679%" y="287.50"></text></g><g><title>perf_ctx_sched_task_cb (1 samples, 0.75%)</title><rect x="16.4179%" y="261" width="0.7463%" height="15" fill="rgb(225,111,53)" fg:x="22" fg:w="1"/><text x="16.6679%" y="271.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.75%)</title><rect x="17.1642%" y="277" width="0.7463%" height="15" fill="rgb(238,160,17)" fg:x="23" fg:w="1"/><text x="17.4142%" y="287.50"></text></g><g><title>solana_bucket_map::bucket::Bucket&lt;T&gt;::batch_insert_non_duplicates (18 samples, 13.43%)</title><rect x="5.9701%" y="405" width="13.4328%" height="15" fill="rgb(214,148,48)" fg:x="8" fg:w="18"/><text x="6.2201%" y="415.50">solana_bucket_map::b..</text></g><g><title>asm_sysvec_apic_timer_interrupt (5 samples, 3.73%)</title><rect x="15.6716%" y="389" width="3.7313%" height="15" fill="rgb(232,36,49)" fg:x="21" fg:w="5"/><text x="15.9216%" y="399.50">asm_..</text></g><g><title>sysvec_apic_timer_interrupt (5 samples, 3.73%)</title><rect x="15.6716%" y="373" width="3.7313%" height="15" fill="rgb(209,103,24)" fg:x="21" fg:w="5"/><text x="15.9216%" y="383.50">sysv..</text></g><g><title>irqentry_exit (5 samples, 3.73%)</title><rect x="15.6716%" y="357" width="3.7313%" height="15" fill="rgb(229,88,8)" fg:x="21" fg:w="5"/><text x="15.9216%" y="367.50">irqe..</text></g><g><title>irqentry_exit_to_user_mode (5 samples, 3.73%)</title><rect x="15.6716%" y="341" width="3.7313%" height="15" fill="rgb(213,181,19)" fg:x="21" fg:w="5"/><text x="15.9216%" y="351.50">irqe..</text></g><g><title>schedule (4 samples, 2.99%)</title><rect x="16.4179%" y="325" width="2.9851%" height="15" fill="rgb(254,191,54)" fg:x="22" fg:w="4"/><text x="16.6679%" y="335.50">sch..</text></g><g><title>__schedule (4 samples, 2.99%)</title><rect x="16.4179%" y="309" width="2.9851%" height="15" fill="rgb(241,83,37)" fg:x="22" fg:w="4"/><text x="16.6679%" y="319.50">__s..</text></g><g><title>finish_task_switch.isra.0 (4 samples, 2.99%)</title><rect x="16.4179%" y="293" width="2.9851%" height="15" fill="rgb(233,36,39)" fg:x="22" fg:w="4"/><text x="16.6679%" y="303.50">fin..</text></g><g><title>asm_sysvec_call_function_single (2 samples, 1.49%)</title><rect x="17.9104%" y="277" width="1.4925%" height="15" fill="rgb(226,3,54)" fg:x="24" fg:w="2"/><text x="18.1604%" y="287.50"></text></g><g><title>sysvec_call_function_single (2 samples, 1.49%)</title><rect x="17.9104%" y="261" width="1.4925%" height="15" fill="rgb(245,192,40)" fg:x="24" fg:w="2"/><text x="18.1604%" y="271.50"></text></g><g><title>__sysvec_call_function_single (1 samples, 0.75%)</title><rect x="18.6567%" y="245" width="0.7463%" height="15" fill="rgb(238,167,29)" fg:x="25" fg:w="1"/><text x="18.9067%" y="255.50"></text></g><g><title>generic_smp_call_function_single_interrupt (1 samples, 0.75%)</title><rect x="18.6567%" y="229" width="0.7463%" height="15" fill="rgb(232,182,51)" fg:x="25" fg:w="1"/><text x="18.9067%" y="239.50"></text></g><g><title>__flush_smp_call_function_queue (1 samples, 0.75%)</title><rect x="18.6567%" y="213" width="0.7463%" height="15" fill="rgb(231,60,39)" fg:x="25" fg:w="1"/><text x="18.9067%" y="223.50"></text></g><g><title>remote_function (1 samples, 0.75%)</title><rect x="18.6567%" y="197" width="0.7463%" height="15" fill="rgb(208,69,12)" fg:x="25" fg:w="1"/><text x="18.9067%" y="207.50"></text></g><g><title>event_function (1 samples, 0.75%)</title><rect x="18.6567%" y="181" width="0.7463%" height="15" fill="rgb(235,93,37)" fg:x="25" fg:w="1"/><text x="18.9067%" y="191.50"></text></g><g><title>__perf_event_enable (1 samples, 0.75%)</title><rect x="18.6567%" y="165" width="0.7463%" height="15" fill="rgb(213,116,39)" fg:x="25" fg:w="1"/><text x="18.9067%" y="175.50"></text></g><g><title>ctx_sched_out (1 samples, 0.75%)</title><rect x="18.6567%" y="149" width="0.7463%" height="15" fill="rgb(222,207,29)" fg:x="25" fg:w="1"/><text x="18.9067%" y="159.50"></text></g><g><title>__filemap_add_folio (1 samples, 0.75%)</title><rect x="26.8657%" y="165" width="0.7463%" height="15" fill="rgb(206,96,30)" fg:x="36" fg:w="1"/><text x="27.1157%" y="175.50"></text></g><g><title>xas_find_conflict (1 samples, 0.75%)</title><rect x="26.8657%" y="149" width="0.7463%" height="15" fill="rgb(218,138,4)" fg:x="36" fg:w="1"/><text x="27.1157%" y="159.50"></text></g><g><title>filemap_add_folio (2 samples, 1.49%)</title><rect x="26.8657%" y="181" width="1.4925%" height="15" fill="rgb(250,191,14)" fg:x="36" fg:w="2"/><text x="27.1157%" y="191.50"></text></g><g><title>folio_add_lru (1 samples, 0.75%)</title><rect x="27.6119%" y="165" width="0.7463%" height="15" fill="rgb(239,60,40)" fg:x="37" fg:w="1"/><text x="27.8619%" y="175.50"></text></g><g><title>folio_batch_move_lru (1 samples, 0.75%)</title><rect x="27.6119%" y="149" width="0.7463%" height="15" fill="rgb(206,27,48)" fg:x="37" fg:w="1"/><text x="27.8619%" y="159.50"></text></g><g><title>lru_add_fn (1 samples, 0.75%)</title><rect x="27.6119%" y="133" width="0.7463%" height="15" fill="rgb(225,35,8)" fg:x="37" fg:w="1"/><text x="27.8619%" y="143.50"></text></g><g><title>lru_gen_add_folio (1 samples, 0.75%)</title><rect x="27.6119%" y="117" width="0.7463%" height="15" fill="rgb(250,213,24)" fg:x="37" fg:w="1"/><text x="27.8619%" y="127.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.75%)</title><rect x="27.6119%" y="101" width="0.7463%" height="15" fill="rgb(247,123,22)" fg:x="37" fg:w="1"/><text x="27.8619%" y="111.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.75%)</title><rect x="27.6119%" y="85" width="0.7463%" height="15" fill="rgb(231,138,38)" fg:x="37" fg:w="1"/><text x="27.8619%" y="95.50"></text></g><g><title>__do_fault (4 samples, 2.99%)</title><rect x="26.8657%" y="277" width="2.9851%" height="15" fill="rgb(231,145,46)" fg:x="36" fg:w="4"/><text x="27.1157%" y="287.50">__d..</text></g><g><title>filemap_fault (4 samples, 2.99%)</title><rect x="26.8657%" y="261" width="2.9851%" height="15" fill="rgb(251,118,11)" fg:x="36" fg:w="4"/><text x="27.1157%" y="271.50">fil..</text></g><g><title>page_cache_async_ra (4 samples, 2.99%)</title><rect x="26.8657%" y="245" width="2.9851%" height="15" fill="rgb(217,147,25)" fg:x="36" fg:w="4"/><text x="27.1157%" y="255.50">pag..</text></g><g><title>ondemand_readahead (4 samples, 2.99%)</title><rect x="26.8657%" y="229" width="2.9851%" height="15" fill="rgb(247,81,37)" fg:x="36" fg:w="4"/><text x="27.1157%" y="239.50">ond..</text></g><g><title>page_cache_ra_order (4 samples, 2.99%)</title><rect x="26.8657%" y="213" width="2.9851%" height="15" fill="rgb(209,12,38)" fg:x="36" fg:w="4"/><text x="27.1157%" y="223.50">pag..</text></g><g><title>page_cache_ra_unbounded (4 samples, 2.99%)</title><rect x="26.8657%" y="197" width="2.9851%" height="15" fill="rgb(227,1,9)" fg:x="36" fg:w="4"/><text x="27.1157%" y="207.50">pag..</text></g><g><title>filemap_alloc_folio (2 samples, 1.49%)</title><rect x="28.3582%" y="181" width="1.4925%" height="15" fill="rgb(248,47,43)" fg:x="38" fg:w="2"/><text x="28.6082%" y="191.50"></text></g><g><title>folio_alloc (2 samples, 1.49%)</title><rect x="28.3582%" y="165" width="1.4925%" height="15" fill="rgb(221,10,30)" fg:x="38" fg:w="2"/><text x="28.6082%" y="175.50"></text></g><g><title>alloc_pages_mpol (2 samples, 1.49%)</title><rect x="28.3582%" y="149" width="1.4925%" height="15" fill="rgb(210,229,1)" fg:x="38" fg:w="2"/><text x="28.6082%" y="159.50"></text></g><g><title>__alloc_pages (2 samples, 1.49%)</title><rect x="28.3582%" y="133" width="1.4925%" height="15" fill="rgb(222,148,37)" fg:x="38" fg:w="2"/><text x="28.6082%" y="143.50"></text></g><g><title>get_page_from_freelist (2 samples, 1.49%)</title><rect x="28.3582%" y="117" width="1.4925%" height="15" fill="rgb(234,67,33)" fg:x="38" fg:w="2"/><text x="28.6082%" y="127.50"></text></g><g><title>clear_page_rep (2 samples, 1.49%)</title><rect x="28.3582%" y="101" width="1.4925%" height="15" fill="rgb(247,98,35)" fg:x="38" fg:w="2"/><text x="28.6082%" y="111.50"></text></g><g><title>ext4_da_get_block_prep (1 samples, 0.75%)</title><rect x="29.8507%" y="213" width="0.7463%" height="15" fill="rgb(247,138,52)" fg:x="40" fg:w="1"/><text x="30.1007%" y="223.50"></text></g><g><title>ext4_da_map_blocks.constprop.0 (1 samples, 0.75%)</title><rect x="29.8507%" y="197" width="0.7463%" height="15" fill="rgb(213,79,30)" fg:x="40" fg:w="1"/><text x="30.1007%" y="207.50"></text></g><g><title>ext4_es_insert_delayed_block (1 samples, 0.75%)</title><rect x="29.8507%" y="181" width="0.7463%" height="15" fill="rgb(246,177,23)" fg:x="40" fg:w="1"/><text x="30.1007%" y="191.50"></text></g><g><title>__es_insert_extent (1 samples, 0.75%)</title><rect x="29.8507%" y="165" width="0.7463%" height="15" fill="rgb(230,62,27)" fg:x="40" fg:w="1"/><text x="30.1007%" y="175.50"></text></g><g><title>folio_create_buffers (1 samples, 0.75%)</title><rect x="30.5970%" y="213" width="0.7463%" height="15" fill="rgb(216,154,8)" fg:x="41" fg:w="1"/><text x="30.8470%" y="223.50"></text></g><g><title>create_empty_buffers (1 samples, 0.75%)</title><rect x="30.5970%" y="197" width="0.7463%" height="15" fill="rgb(244,35,45)" fg:x="41" fg:w="1"/><text x="30.8470%" y="207.50"></text></g><g><title>folio_alloc_buffers (1 samples, 0.75%)</title><rect x="30.5970%" y="181" width="0.7463%" height="15" fill="rgb(251,115,12)" fg:x="41" fg:w="1"/><text x="30.8470%" y="191.50"></text></g><g><title>alloc_buffer_head (1 samples, 0.75%)</title><rect x="30.5970%" y="165" width="0.7463%" height="15" fill="rgb(240,54,50)" fg:x="41" fg:w="1"/><text x="30.8470%" y="175.50"></text></g><g><title>kmem_cache_alloc (1 samples, 0.75%)</title><rect x="30.5970%" y="149" width="0.7463%" height="15" fill="rgb(233,84,52)" fg:x="41" fg:w="1"/><text x="30.8470%" y="159.50"></text></g><g><title>__memcg_slab_post_alloc_hook (1 samples, 0.75%)</title><rect x="30.5970%" y="133" width="0.7463%" height="15" fill="rgb(207,117,47)" fg:x="41" fg:w="1"/><text x="30.8470%" y="143.50"></text></g><g><title>__lruvec_stat_mod_folio (1 samples, 0.75%)</title><rect x="34.3284%" y="165" width="0.7463%" height="15" fill="rgb(249,43,39)" fg:x="46" fg:w="1"/><text x="34.5784%" y="175.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.75%)</title><rect x="34.3284%" y="149" width="0.7463%" height="15" fill="rgb(209,38,44)" fg:x="46" fg:w="1"/><text x="34.5784%" y="159.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.75%)</title><rect x="34.3284%" y="133" width="0.7463%" height="15" fill="rgb(236,212,23)" fg:x="46" fg:w="1"/><text x="34.5784%" y="143.50"></text></g><g><title>__block_write_begin_int (8 samples, 5.97%)</title><rect x="29.8507%" y="229" width="5.9701%" height="15" fill="rgb(242,79,21)" fg:x="40" fg:w="8"/><text x="30.1007%" y="239.50">__block_..</text></g><g><title>mark_buffer_dirty (6 samples, 4.48%)</title><rect x="31.3433%" y="213" width="4.4776%" height="15" fill="rgb(211,96,35)" fg:x="42" fg:w="6"/><text x="31.5933%" y="223.50">mark_..</text></g><g><title>__folio_mark_dirty (3 samples, 2.24%)</title><rect x="33.5821%" y="197" width="2.2388%" height="15" fill="rgb(253,215,40)" fg:x="45" fg:w="3"/><text x="33.8321%" y="207.50">_..</text></g><g><title>folio_account_dirtied (3 samples, 2.24%)</title><rect x="33.5821%" y="181" width="2.2388%" height="15" fill="rgb(211,81,21)" fg:x="45" fg:w="3"/><text x="33.8321%" y="191.50">f..</text></g><g><title>percpu_counter_add_batch (1 samples, 0.75%)</title><rect x="35.0746%" y="165" width="0.7463%" height="15" fill="rgb(208,190,38)" fg:x="47" fg:w="1"/><text x="35.3246%" y="175.50"></text></g><g><title>block_page_mkwrite (9 samples, 6.72%)</title><rect x="29.8507%" y="245" width="6.7164%" height="15" fill="rgb(235,213,38)" fg:x="40" fg:w="9"/><text x="30.1007%" y="255.50">block_pag..</text></g><g><title>folio_mapping (1 samples, 0.75%)</title><rect x="35.8209%" y="229" width="0.7463%" height="15" fill="rgb(237,122,38)" fg:x="48" fg:w="1"/><text x="36.0709%" y="239.50"></text></g><g><title>do_page_mkwrite (10 samples, 7.46%)</title><rect x="29.8507%" y="277" width="7.4627%" height="15" fill="rgb(244,218,35)" fg:x="40" fg:w="10"/><text x="30.1007%" y="287.50">do_page_mk..</text></g><g><title>ext4_page_mkwrite (10 samples, 7.46%)</title><rect x="29.8507%" y="261" width="7.4627%" height="15" fill="rgb(240,68,47)" fg:x="40" fg:w="10"/><text x="30.1007%" y="271.50">ext4_page_..</text></g><g><title>file_update_time (1 samples, 0.75%)</title><rect x="36.5672%" y="245" width="0.7463%" height="15" fill="rgb(210,16,53)" fg:x="49" fg:w="1"/><text x="36.8172%" y="255.50"></text></g><g><title>balance_dirty_pages_ratelimited (1 samples, 0.75%)</title><rect x="37.3134%" y="261" width="0.7463%" height="15" fill="rgb(235,124,12)" fg:x="50" fg:w="1"/><text x="37.5634%" y="271.50"></text></g><g><title>balance_dirty_pages_ratelimited_flags (1 samples, 0.75%)</title><rect x="37.3134%" y="245" width="0.7463%" height="15" fill="rgb(224,169,11)" fg:x="50" fg:w="1"/><text x="37.5634%" y="255.50"></text></g><g><title>fault_dirty_shared_page (2 samples, 1.49%)</title><rect x="37.3134%" y="277" width="1.4925%" height="15" fill="rgb(250,166,2)" fg:x="50" fg:w="2"/><text x="37.5634%" y="287.50"></text></g><g><title>folio_mark_dirty (1 samples, 0.75%)</title><rect x="38.0597%" y="261" width="0.7463%" height="15" fill="rgb(242,216,29)" fg:x="51" fg:w="1"/><text x="38.3097%" y="271.50"></text></g><g><title>ext4_dirty_folio (1 samples, 0.75%)</title><rect x="38.0597%" y="245" width="0.7463%" height="15" fill="rgb(230,116,27)" fg:x="51" fg:w="1"/><text x="38.3097%" y="255.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.75%)</title><rect x="38.0597%" y="229" width="0.7463%" height="15" fill="rgb(228,99,48)" fg:x="51" fg:w="1"/><text x="38.3097%" y="239.50"></text></g><g><title>solana_bucket_map::index_entry::IndexEntryPlaceInBucket&lt;T&gt;::init (27 samples, 20.15%)</title><rect x="19.4030%" y="405" width="20.1493%" height="15" fill="rgb(253,11,6)" fg:x="26" fg:w="27"/><text x="19.6530%" y="415.50">solana_bucket_map::index_entry::..</text></g><g><title>asm_exc_page_fault (20 samples, 14.93%)</title><rect x="24.6269%" y="389" width="14.9254%" height="15" fill="rgb(247,143,39)" fg:x="33" fg:w="20"/><text x="24.8769%" y="399.50">asm_exc_page_fault</text></g><g><title>exc_page_fault (20 samples, 14.93%)</title><rect x="24.6269%" y="373" width="14.9254%" height="15" fill="rgb(236,97,10)" fg:x="33" fg:w="20"/><text x="24.8769%" y="383.50">exc_page_fault</text></g><g><title>do_user_addr_fault (20 samples, 14.93%)</title><rect x="24.6269%" y="357" width="14.9254%" height="15" fill="rgb(233,208,19)" fg:x="33" fg:w="20"/><text x="24.8769%" y="367.50">do_user_addr_fault</text></g><g><title>handle_mm_fault (20 samples, 14.93%)</title><rect x="24.6269%" y="341" width="14.9254%" height="15" fill="rgb(216,164,2)" fg:x="33" fg:w="20"/><text x="24.8769%" y="351.50">handle_mm_fault</text></g><g><title>__handle_mm_fault (20 samples, 14.93%)</title><rect x="24.6269%" y="325" width="14.9254%" height="15" fill="rgb(220,129,5)" fg:x="33" fg:w="20"/><text x="24.8769%" y="335.50">__handle_mm_fault</text></g><g><title>handle_pte_fault (19 samples, 14.18%)</title><rect x="25.3731%" y="309" width="14.1791%" height="15" fill="rgb(242,17,10)" fg:x="34" fg:w="19"/><text x="25.6231%" y="319.50">handle_pte_fault</text></g><g><title>do_fault (18 samples, 13.43%)</title><rect x="26.1194%" y="293" width="13.4328%" height="15" fill="rgb(242,107,0)" fg:x="35" fg:w="18"/><text x="26.3694%" y="303.50">do_fault</text></g><g><title>finish_fault (1 samples, 0.75%)</title><rect x="38.8060%" y="277" width="0.7463%" height="15" fill="rgb(251,28,31)" fg:x="52" fg:w="1"/><text x="39.0560%" y="287.50"></text></g><g><title>set_pte_range (1 samples, 0.75%)</title><rect x="38.8060%" y="261" width="0.7463%" height="15" fill="rgb(233,223,10)" fg:x="52" fg:w="1"/><text x="39.0560%" y="271.50"></text></g><g><title>set_ptes.constprop.0 (1 samples, 0.75%)</title><rect x="38.8060%" y="245" width="0.7463%" height="15" fill="rgb(215,21,27)" fg:x="52" fg:w="1"/><text x="39.0560%" y="255.50"></text></g><g><title>ext4_da_reserve_space (1 samples, 0.75%)</title><rect x="40.2985%" y="181" width="0.7463%" height="15" fill="rgb(232,23,21)" fg:x="54" fg:w="1"/><text x="40.5485%" y="191.50"></text></g><g><title>accountsdb-micr (56 samples, 41.79%)</title><rect x="0.0000%" y="421" width="41.7910%" height="15" fill="rgb(244,5,23)" fg:x="0" fg:w="56"/><text x="0.2500%" y="431.50">accountsdb-micr</text></g><g><title>solana_bucket_map::index_entry::IndexEntryPlaceInBucket&lt;T&gt;::set_slot_count_enum_value (3 samples, 2.24%)</title><rect x="39.5522%" y="405" width="2.2388%" height="15" fill="rgb(226,81,46)" fg:x="53" fg:w="3"/><text x="39.8022%" y="415.50">s..</text></g><g><title>asm_exc_page_fault (2 samples, 1.49%)</title><rect x="40.2985%" y="389" width="1.4925%" height="15" fill="rgb(247,70,30)" fg:x="54" fg:w="2"/><text x="40.5485%" y="399.50"></text></g><g><title>exc_page_fault (2 samples, 1.49%)</title><rect x="40.2985%" y="373" width="1.4925%" height="15" fill="rgb(212,68,19)" fg:x="54" fg:w="2"/><text x="40.5485%" y="383.50"></text></g><g><title>do_user_addr_fault (2 samples, 1.49%)</title><rect x="40.2985%" y="357" width="1.4925%" height="15" fill="rgb(240,187,13)" fg:x="54" fg:w="2"/><text x="40.5485%" y="367.50"></text></g><g><title>handle_mm_fault (2 samples, 1.49%)</title><rect x="40.2985%" y="341" width="1.4925%" height="15" fill="rgb(223,113,26)" fg:x="54" fg:w="2"/><text x="40.5485%" y="351.50"></text></g><g><title>__handle_mm_fault (2 samples, 1.49%)</title><rect x="40.2985%" y="325" width="1.4925%" height="15" fill="rgb(206,192,2)" fg:x="54" fg:w="2"/><text x="40.5485%" y="335.50"></text></g><g><title>handle_pte_fault (2 samples, 1.49%)</title><rect x="40.2985%" y="309" width="1.4925%" height="15" fill="rgb(241,108,4)" fg:x="54" fg:w="2"/><text x="40.5485%" y="319.50"></text></g><g><title>do_fault (2 samples, 1.49%)</title><rect x="40.2985%" y="293" width="1.4925%" height="15" fill="rgb(247,173,49)" fg:x="54" fg:w="2"/><text x="40.5485%" y="303.50"></text></g><g><title>do_page_mkwrite (2 samples, 1.49%)</title><rect x="40.2985%" y="277" width="1.4925%" height="15" fill="rgb(224,114,35)" fg:x="54" fg:w="2"/><text x="40.5485%" y="287.50"></text></g><g><title>ext4_page_mkwrite (2 samples, 1.49%)</title><rect x="40.2985%" y="261" width="1.4925%" height="15" fill="rgb(245,159,27)" fg:x="54" fg:w="2"/><text x="40.5485%" y="271.50"></text></g><g><title>block_page_mkwrite (2 samples, 1.49%)</title><rect x="40.2985%" y="245" width="1.4925%" height="15" fill="rgb(245,172,44)" fg:x="54" fg:w="2"/><text x="40.5485%" y="255.50"></text></g><g><title>__block_write_begin_int (2 samples, 1.49%)</title><rect x="40.2985%" y="229" width="1.4925%" height="15" fill="rgb(236,23,11)" fg:x="54" fg:w="2"/><text x="40.5485%" y="239.50"></text></g><g><title>ext4_da_get_block_prep (2 samples, 1.49%)</title><rect x="40.2985%" y="213" width="1.4925%" height="15" fill="rgb(205,117,38)" fg:x="54" fg:w="2"/><text x="40.5485%" y="223.50"></text></g><g><title>ext4_da_map_blocks.constprop.0 (2 samples, 1.49%)</title><rect x="40.2985%" y="197" width="1.4925%" height="15" fill="rgb(237,72,25)" fg:x="54" fg:w="2"/><text x="40.5485%" y="207.50"></text></g><g><title>ext4_es_insert_delayed_block (1 samples, 0.75%)</title><rect x="41.0448%" y="181" width="0.7463%" height="15" fill="rgb(244,70,9)" fg:x="55" fg:w="1"/><text x="41.2948%" y="191.50"></text></g><g><title>__es_insert_extent (1 samples, 0.75%)</title><rect x="41.0448%" y="165" width="0.7463%" height="15" fill="rgb(217,125,39)" fg:x="55" fg:w="1"/><text x="41.2948%" y="175.50"></text></g><g><title>__rseq_handle_notify_resume (1 samples, 0.75%)</title><rect x="44.7761%" y="309" width="0.7463%" height="15" fill="rgb(235,36,10)" fg:x="60" fg:w="1"/><text x="45.0261%" y="319.50"></text></g><g><title>rseq_ip_fixup (1 samples, 0.75%)</title><rect x="44.7761%" y="293" width="0.7463%" height="15" fill="rgb(251,123,47)" fg:x="60" fg:w="1"/><text x="45.0261%" y="303.50"></text></g><g><title>__get_user_8 (1 samples, 0.75%)</title><rect x="44.7761%" y="277" width="0.7463%" height="15" fill="rgb(221,13,13)" fg:x="60" fg:w="1"/><text x="45.0261%" y="287.50"></text></g><g><title>asm_sysvec_reschedule_ipi (4 samples, 2.99%)</title><rect x="44.7761%" y="373" width="2.9851%" height="15" fill="rgb(238,131,9)" fg:x="60" fg:w="4"/><text x="45.0261%" y="383.50">asm..</text></g><g><title>sysvec_reschedule_ipi (4 samples, 2.99%)</title><rect x="44.7761%" y="357" width="2.9851%" height="15" fill="rgb(211,50,8)" fg:x="60" fg:w="4"/><text x="45.0261%" y="367.50">sys..</text></g><g><title>irqentry_exit (4 samples, 2.99%)</title><rect x="44.7761%" y="341" width="2.9851%" height="15" fill="rgb(245,182,24)" fg:x="60" fg:w="4"/><text x="45.0261%" y="351.50">irq..</text></g><g><title>irqentry_exit_to_user_mode (4 samples, 2.99%)</title><rect x="44.7761%" y="325" width="2.9851%" height="15" fill="rgb(242,14,37)" fg:x="60" fg:w="4"/><text x="45.0261%" y="335.50">irq..</text></g><g><title>schedule (3 samples, 2.24%)</title><rect x="45.5224%" y="309" width="2.2388%" height="15" fill="rgb(246,228,12)" fg:x="61" fg:w="3"/><text x="45.7724%" y="319.50">s..</text></g><g><title>__schedule (3 samples, 2.24%)</title><rect x="45.5224%" y="293" width="2.2388%" height="15" fill="rgb(213,55,15)" fg:x="61" fg:w="3"/><text x="45.7724%" y="303.50">_..</text></g><g><title>finish_task_switch.isra.0 (3 samples, 2.24%)</title><rect x="45.5224%" y="277" width="2.2388%" height="15" fill="rgb(209,9,3)" fg:x="61" fg:w="3"/><text x="45.7724%" y="287.50">f..</text></g><g><title>asm_sysvec_call_function_single (2 samples, 1.49%)</title><rect x="46.2687%" y="261" width="1.4925%" height="15" fill="rgb(230,59,30)" fg:x="62" fg:w="2"/><text x="46.5187%" y="271.50"></text></g><g><title>sysvec_call_function_single (2 samples, 1.49%)</title><rect x="46.2687%" y="245" width="1.4925%" height="15" fill="rgb(209,121,21)" fg:x="62" fg:w="2"/><text x="46.5187%" y="255.50"></text></g><g><title>__sysvec_call_function_single (1 samples, 0.75%)</title><rect x="47.0149%" y="229" width="0.7463%" height="15" fill="rgb(220,109,13)" fg:x="63" fg:w="1"/><text x="47.2649%" y="239.50"></text></g><g><title>generic_smp_call_function_single_interrupt (1 samples, 0.75%)</title><rect x="47.0149%" y="213" width="0.7463%" height="15" fill="rgb(232,18,1)" fg:x="63" fg:w="1"/><text x="47.2649%" y="223.50"></text></g><g><title>__flush_smp_call_function_queue (1 samples, 0.75%)</title><rect x="47.0149%" y="197" width="0.7463%" height="15" fill="rgb(215,41,42)" fg:x="63" fg:w="1"/><text x="47.2649%" y="207.50"></text></g><g><title>remote_function (1 samples, 0.75%)</title><rect x="47.0149%" y="181" width="0.7463%" height="15" fill="rgb(224,123,36)" fg:x="63" fg:w="1"/><text x="47.2649%" y="191.50"></text></g><g><title>event_function (1 samples, 0.75%)</title><rect x="47.0149%" y="165" width="0.7463%" height="15" fill="rgb(240,125,3)" fg:x="63" fg:w="1"/><text x="47.2649%" y="175.50"></text></g><g><title>__perf_event_enable (1 samples, 0.75%)</title><rect x="47.0149%" y="149" width="0.7463%" height="15" fill="rgb(205,98,50)" fg:x="63" fg:w="1"/><text x="47.2649%" y="159.50"></text></g><g><title>ctx_sched_out (1 samples, 0.75%)</title><rect x="47.0149%" y="133" width="0.7463%" height="15" fill="rgb(205,185,37)" fg:x="63" fg:w="1"/><text x="47.2649%" y="143.50"></text></g><g><title>local_clock_noinstr (1 samples, 0.75%)</title><rect x="47.0149%" y="117" width="0.7463%" height="15" fill="rgb(238,207,15)" fg:x="63" fg:w="1"/><text x="47.2649%" y="127.50"></text></g><g><title>core::slice::sort::unstable::quicksort::quicksort (9 samples, 6.72%)</title><rect x="41.7910%" y="389" width="6.7164%" height="15" fill="rgb(213,199,42)" fg:x="56" fg:w="9"/><text x="42.0410%" y="399.50">core::sli..</text></g><g><title>sysvec_call_function_single (1 samples, 0.75%)</title><rect x="47.7612%" y="373" width="0.7463%" height="15" fill="rgb(235,201,11)" fg:x="64" fg:w="1"/><text x="48.0112%" y="383.50"></text></g><g><title>solana_bucket_map::bucket_api::BucketApi&lt;T&gt;::batch_insert_non_duplicates (29 samples, 21.64%)</title><rect x="48.5075%" y="389" width="21.6418%" height="15" fill="rgb(207,46,11)" fg:x="65" fg:w="29"/><text x="48.7575%" y="399.50">solana_bucket_map::bucket_api::Buc..</text></g><g><title>__rcu_read_unlock (1 samples, 0.75%)</title><rect x="77.6119%" y="133" width="0.7463%" height="15" fill="rgb(241,35,35)" fg:x="104" fg:w="1"/><text x="77.8619%" y="143.50"></text></g><g><title>filemap_add_folio (2 samples, 1.49%)</title><rect x="77.6119%" y="165" width="1.4925%" height="15" fill="rgb(243,32,47)" fg:x="104" fg:w="2"/><text x="77.8619%" y="175.50"></text></g><g><title>__filemap_add_folio (2 samples, 1.49%)</title><rect x="77.6119%" y="149" width="1.4925%" height="15" fill="rgb(247,202,23)" fg:x="104" fg:w="2"/><text x="77.8619%" y="159.50"></text></g><g><title>xa_get_order (1 samples, 0.75%)</title><rect x="78.3582%" y="133" width="0.7463%" height="15" fill="rgb(219,102,11)" fg:x="105" fg:w="1"/><text x="78.6082%" y="143.50"></text></g><g><title>xas_load (1 samples, 0.75%)</title><rect x="78.3582%" y="117" width="0.7463%" height="15" fill="rgb(243,110,44)" fg:x="105" fg:w="1"/><text x="78.6082%" y="127.50"></text></g><g><title>ext4_map_blocks (1 samples, 0.75%)</title><rect x="79.1045%" y="117" width="0.7463%" height="15" fill="rgb(222,74,54)" fg:x="106" fg:w="1"/><text x="79.3545%" y="127.50"></text></g><g><title>read_pages (2 samples, 1.49%)</title><rect x="79.1045%" y="165" width="1.4925%" height="15" fill="rgb(216,99,12)" fg:x="106" fg:w="2"/><text x="79.3545%" y="175.50"></text></g><g><title>ext4_readahead (2 samples, 1.49%)</title><rect x="79.1045%" y="149" width="1.4925%" height="15" fill="rgb(226,22,26)" fg:x="106" fg:w="2"/><text x="79.3545%" y="159.50"></text></g><g><title>ext4_mpage_readpages (2 samples, 1.49%)</title><rect x="79.1045%" y="133" width="1.4925%" height="15" fill="rgb(217,163,10)" fg:x="106" fg:w="2"/><text x="79.3545%" y="143.50"></text></g><g><title>memset_orig (1 samples, 0.75%)</title><rect x="79.8507%" y="117" width="0.7463%" height="15" fill="rgb(213,25,53)" fg:x="107" fg:w="1"/><text x="80.1007%" y="127.50"></text></g><g><title>__do_fault (6 samples, 4.48%)</title><rect x="76.8657%" y="261" width="4.4776%" height="15" fill="rgb(252,105,26)" fg:x="103" fg:w="6"/><text x="77.1157%" y="271.50">__do_..</text></g><g><title>filemap_fault (6 samples, 4.48%)</title><rect x="76.8657%" y="245" width="4.4776%" height="15" fill="rgb(220,39,43)" fg:x="103" fg:w="6"/><text x="77.1157%" y="255.50">filem..</text></g><g><title>page_cache_async_ra (6 samples, 4.48%)</title><rect x="76.8657%" y="229" width="4.4776%" height="15" fill="rgb(229,68,48)" fg:x="103" fg:w="6"/><text x="77.1157%" y="239.50">page_..</text></g><g><title>ondemand_readahead (6 samples, 4.48%)</title><rect x="76.8657%" y="213" width="4.4776%" height="15" fill="rgb(252,8,32)" fg:x="103" fg:w="6"/><text x="77.1157%" y="223.50">ondem..</text></g><g><title>page_cache_ra_order (6 samples, 4.48%)</title><rect x="76.8657%" y="197" width="4.4776%" height="15" fill="rgb(223,20,43)" fg:x="103" fg:w="6"/><text x="77.1157%" y="207.50">page_..</text></g><g><title>page_cache_ra_unbounded (6 samples, 4.48%)</title><rect x="76.8657%" y="181" width="4.4776%" height="15" fill="rgb(229,81,49)" fg:x="103" fg:w="6"/><text x="77.1157%" y="191.50">page_..</text></g><g><title>xa_load (1 samples, 0.75%)</title><rect x="80.5970%" y="165" width="0.7463%" height="15" fill="rgb(236,28,36)" fg:x="108" fg:w="1"/><text x="80.8470%" y="175.50"></text></g><g><title>ext4_da_get_block_prep (1 samples, 0.75%)</title><rect x="82.8358%" y="197" width="0.7463%" height="15" fill="rgb(249,185,26)" fg:x="111" fg:w="1"/><text x="83.0858%" y="207.50"></text></g><g><title>ext4_da_map_blocks.constprop.0 (1 samples, 0.75%)</title><rect x="82.8358%" y="181" width="0.7463%" height="15" fill="rgb(249,174,33)" fg:x="111" fg:w="1"/><text x="83.0858%" y="191.50"></text></g><g><title>ext4_es_insert_delayed_block (1 samples, 0.75%)</title><rect x="82.8358%" y="165" width="0.7463%" height="15" fill="rgb(233,201,37)" fg:x="111" fg:w="1"/><text x="83.0858%" y="175.50"></text></g><g><title>__es_insert_extent (1 samples, 0.75%)</title><rect x="82.8358%" y="149" width="0.7463%" height="15" fill="rgb(221,78,26)" fg:x="111" fg:w="1"/><text x="83.0858%" y="159.50"></text></g><g><title>folio_create_buffers (1 samples, 0.75%)</title><rect x="83.5821%" y="197" width="0.7463%" height="15" fill="rgb(250,127,30)" fg:x="112" fg:w="1"/><text x="83.8321%" y="207.50"></text></g><g><title>create_empty_buffers (1 samples, 0.75%)</title><rect x="83.5821%" y="181" width="0.7463%" height="15" fill="rgb(230,49,44)" fg:x="112" fg:w="1"/><text x="83.8321%" y="191.50"></text></g><g><title>folio_alloc_buffers (1 samples, 0.75%)</title><rect x="83.5821%" y="165" width="0.7463%" height="15" fill="rgb(229,67,23)" fg:x="112" fg:w="1"/><text x="83.8321%" y="175.50"></text></g><g><title>alloc_buffer_head (1 samples, 0.75%)</title><rect x="83.5821%" y="149" width="0.7463%" height="15" fill="rgb(249,83,47)" fg:x="112" fg:w="1"/><text x="83.8321%" y="159.50"></text></g><g><title>kmem_cache_alloc (1 samples, 0.75%)</title><rect x="83.5821%" y="133" width="0.7463%" height="15" fill="rgb(215,43,3)" fg:x="112" fg:w="1"/><text x="83.8321%" y="143.50"></text></g><g><title>___slab_alloc (1 samples, 0.75%)</title><rect x="83.5821%" y="117" width="0.7463%" height="15" fill="rgb(238,154,13)" fg:x="112" fg:w="1"/><text x="83.8321%" y="127.50"></text></g><g><title>new_slab (1 samples, 0.75%)</title><rect x="83.5821%" y="101" width="0.7463%" height="15" fill="rgb(219,56,2)" fg:x="112" fg:w="1"/><text x="83.8321%" y="111.50"></text></g><g><title>allocate_slab (1 samples, 0.75%)</title><rect x="83.5821%" y="85" width="0.7463%" height="15" fill="rgb(233,0,4)" fg:x="112" fg:w="1"/><text x="83.8321%" y="95.50"></text></g><g><title>shuffle_freelist (1 samples, 0.75%)</title><rect x="83.5821%" y="69" width="0.7463%" height="15" fill="rgb(235,30,7)" fg:x="112" fg:w="1"/><text x="83.8321%" y="79.50"></text></g><g><title>__xa_set_mark (1 samples, 0.75%)</title><rect x="84.3284%" y="165" width="0.7463%" height="15" fill="rgb(250,79,13)" fg:x="113" fg:w="1"/><text x="84.5784%" y="175.50"></text></g><g><title>xas_load (1 samples, 0.75%)</title><rect x="84.3284%" y="149" width="0.7463%" height="15" fill="rgb(211,146,34)" fg:x="113" fg:w="1"/><text x="84.5784%" y="159.50"></text></g><g><title>xas_descend (1 samples, 0.75%)</title><rect x="84.3284%" y="133" width="0.7463%" height="15" fill="rgb(228,22,38)" fg:x="113" fg:w="1"/><text x="84.5784%" y="143.50"></text></g><g><title>folio_account_dirtied (1 samples, 0.75%)</title><rect x="85.0746%" y="165" width="0.7463%" height="15" fill="rgb(235,168,5)" fg:x="114" fg:w="1"/><text x="85.3246%" y="175.50"></text></g><g><title>__block_write_begin_int (6 samples, 4.48%)</title><rect x="82.0896%" y="213" width="4.4776%" height="15" fill="rgb(221,155,16)" fg:x="110" fg:w="6"/><text x="82.3396%" y="223.50">__blo..</text></g><g><title>mark_buffer_dirty (3 samples, 2.24%)</title><rect x="84.3284%" y="197" width="2.2388%" height="15" fill="rgb(215,215,53)" fg:x="113" fg:w="3"/><text x="84.5784%" y="207.50">m..</text></g><g><title>__folio_mark_dirty (3 samples, 2.24%)</title><rect x="84.3284%" y="181" width="2.2388%" height="15" fill="rgb(223,4,10)" fg:x="113" fg:w="3"/><text x="84.5784%" y="191.50">_..</text></g><g><title>inode_to_bdi (1 samples, 0.75%)</title><rect x="85.8209%" y="165" width="0.7463%" height="15" fill="rgb(234,103,6)" fg:x="115" fg:w="1"/><text x="86.0709%" y="175.50"></text></g><g><title>block_dirty_folio (1 samples, 0.75%)</title><rect x="87.3134%" y="181" width="0.7463%" height="15" fill="rgb(227,97,0)" fg:x="117" fg:w="1"/><text x="87.5634%" y="191.50"></text></g><g><title>do_page_mkwrite (10 samples, 7.46%)</title><rect x="81.3433%" y="261" width="7.4627%" height="15" fill="rgb(234,150,53)" fg:x="109" fg:w="10"/><text x="81.5933%" y="271.50">do_page_mk..</text></g><g><title>ext4_page_mkwrite (10 samples, 7.46%)</title><rect x="81.3433%" y="245" width="7.4627%" height="15" fill="rgb(228,201,54)" fg:x="109" fg:w="10"/><text x="81.5933%" y="255.50">ext4_page_..</text></g><g><title>block_page_mkwrite (10 samples, 7.46%)</title><rect x="81.3433%" y="229" width="7.4627%" height="15" fill="rgb(222,22,37)" fg:x="109" fg:w="10"/><text x="81.5933%" y="239.50">block_page..</text></g><g><title>folio_mark_dirty (3 samples, 2.24%)</title><rect x="86.5672%" y="213" width="2.2388%" height="15" fill="rgb(237,53,32)" fg:x="116" fg:w="3"/><text x="86.8172%" y="223.50">f..</text></g><g><title>ext4_dirty_folio (2 samples, 1.49%)</title><rect x="87.3134%" y="197" width="1.4925%" height="15" fill="rgb(233,25,53)" fg:x="117" fg:w="2"/><text x="87.5634%" y="207.50"></text></g><g><title>folio_memcg_unlock (1 samples, 0.75%)</title><rect x="88.0597%" y="181" width="0.7463%" height="15" fill="rgb(210,40,34)" fg:x="118" fg:w="1"/><text x="88.3097%" y="191.50"></text></g><g><title>fault_dirty_shared_page (2 samples, 1.49%)</title><rect x="88.8060%" y="261" width="1.4925%" height="15" fill="rgb(241,220,44)" fg:x="119" fg:w="2"/><text x="89.0560%" y="271.50"></text></g><g><title>srso_safe_ret (1 samples, 0.75%)</title><rect x="89.5522%" y="245" width="0.7463%" height="15" fill="rgb(235,28,35)" fg:x="120" fg:w="1"/><text x="89.8022%" y="255.50"></text></g><g><title>filemap_fault (1 samples, 0.75%)</title><rect x="90.2985%" y="261" width="0.7463%" height="15" fill="rgb(210,56,17)" fg:x="121" fg:w="1"/><text x="90.5485%" y="271.50"></text></g><g><title>asm_exc_page_fault (22 samples, 16.42%)</title><rect x="75.3731%" y="373" width="16.4179%" height="15" fill="rgb(224,130,29)" fg:x="101" fg:w="22"/><text x="75.6231%" y="383.50">asm_exc_page_fault</text></g><g><title>exc_page_fault (21 samples, 15.67%)</title><rect x="76.1194%" y="357" width="15.6716%" height="15" fill="rgb(235,212,8)" fg:x="102" fg:w="21"/><text x="76.3694%" y="367.50">exc_page_fault</text></g><g><title>do_user_addr_fault (20 samples, 14.93%)</title><rect x="76.8657%" y="341" width="14.9254%" height="15" fill="rgb(223,33,50)" fg:x="103" fg:w="20"/><text x="77.1157%" y="351.50">do_user_addr_fault</text></g><g><title>handle_mm_fault (20 samples, 14.93%)</title><rect x="76.8657%" y="325" width="14.9254%" height="15" fill="rgb(219,149,13)" fg:x="103" fg:w="20"/><text x="77.1157%" y="335.50">handle_mm_fault</text></g><g><title>__handle_mm_fault (20 samples, 14.93%)</title><rect x="76.8657%" y="309" width="14.9254%" height="15" fill="rgb(250,156,29)" fg:x="103" fg:w="20"/><text x="77.1157%" y="319.50">__handle_mm_fault</text></g><g><title>handle_pte_fault (20 samples, 14.93%)</title><rect x="76.8657%" y="293" width="14.9254%" height="15" fill="rgb(216,193,19)" fg:x="103" fg:w="20"/><text x="77.1157%" y="303.50">handle_pte_fault</text></g><g><title>do_fault (20 samples, 14.93%)</title><rect x="76.8657%" y="277" width="14.9254%" height="15" fill="rgb(216,135,14)" fg:x="103" fg:w="20"/><text x="77.1157%" y="287.50">do_fault</text></g><g><title>finish_fault (1 samples, 0.75%)</title><rect x="91.0448%" y="261" width="0.7463%" height="15" fill="rgb(241,47,5)" fg:x="122" fg:w="1"/><text x="91.2948%" y="271.50"></text></g><g><title>set_pte_range (1 samples, 0.75%)</title><rect x="91.0448%" y="245" width="0.7463%" height="15" fill="rgb(233,42,35)" fg:x="122" fg:w="1"/><text x="91.2948%" y="255.50"></text></g><g><title>folio_add_file_rmap_ptes (1 samples, 0.75%)</title><rect x="91.0448%" y="229" width="0.7463%" height="15" fill="rgb(231,13,6)" fg:x="122" fg:w="1"/><text x="91.2948%" y="239.50"></text></g><g><title>__lruvec_stat_mod_folio (1 samples, 0.75%)</title><rect x="91.0448%" y="213" width="0.7463%" height="15" fill="rgb(207,181,40)" fg:x="122" fg:w="1"/><text x="91.2948%" y="223.50"></text></g><g><title>solana_bucket_map::index_entry::IndexEntryPlaceInBucket&lt;T&gt;::init (30 samples, 22.39%)</title><rect x="70.1493%" y="389" width="22.3881%" height="15" fill="rgb(254,173,49)" fg:x="94" fg:w="30"/><text x="70.3993%" y="399.50">solana_bucket_map::index_entry::Ind..</text></g><g><title>srso_safe_ret (1 samples, 0.75%)</title><rect x="91.7910%" y="373" width="0.7463%" height="15" fill="rgb(221,1,38)" fg:x="123" fg:w="1"/><text x="92.0410%" y="383.50"></text></g><g><title>filemap_add_folio (2 samples, 1.49%)</title><rect x="93.2836%" y="165" width="1.4925%" height="15" fill="rgb(206,124,46)" fg:x="125" fg:w="2"/><text x="93.5336%" y="175.50"></text></g><g><title>__filemap_add_folio (2 samples, 1.49%)</title><rect x="93.2836%" y="149" width="1.4925%" height="15" fill="rgb(249,21,11)" fg:x="125" fg:w="2"/><text x="93.5336%" y="159.50"></text></g><g><title>__mem_cgroup_charge (1 samples, 0.75%)</title><rect x="94.0299%" y="133" width="0.7463%" height="15" fill="rgb(222,201,40)" fg:x="126" fg:w="1"/><text x="94.2799%" y="143.50"></text></g><g><title>get_mem_cgroup_from_mm (1 samples, 0.75%)</title><rect x="94.0299%" y="117" width="0.7463%" height="15" fill="rgb(235,61,29)" fg:x="126" fg:w="1"/><text x="94.2799%" y="127.50"></text></g><g><title>__do_fault (3 samples, 2.24%)</title><rect x="93.2836%" y="261" width="2.2388%" height="15" fill="rgb(219,207,3)" fg:x="125" fg:w="3"/><text x="93.5336%" y="271.50">_..</text></g><g><title>filemap_fault (3 samples, 2.24%)</title><rect x="93.2836%" y="245" width="2.2388%" height="15" fill="rgb(222,56,46)" fg:x="125" fg:w="3"/><text x="93.5336%" y="255.50">f..</text></g><g><title>page_cache_async_ra (3 samples, 2.24%)</title><rect x="93.2836%" y="229" width="2.2388%" height="15" fill="rgb(239,76,54)" fg:x="125" fg:w="3"/><text x="93.5336%" y="239.50">p..</text></g><g><title>ondemand_readahead (3 samples, 2.24%)</title><rect x="93.2836%" y="213" width="2.2388%" height="15" fill="rgb(231,124,27)" fg:x="125" fg:w="3"/><text x="93.5336%" y="223.50">o..</text></g><g><title>page_cache_ra_order (3 samples, 2.24%)</title><rect x="93.2836%" y="197" width="2.2388%" height="15" fill="rgb(249,195,6)" fg:x="125" fg:w="3"/><text x="93.5336%" y="207.50">p..</text></g><g><title>page_cache_ra_unbounded (3 samples, 2.24%)</title><rect x="93.2836%" y="181" width="2.2388%" height="15" fill="rgb(237,174,47)" fg:x="125" fg:w="3"/><text x="93.5336%" y="191.50">p..</text></g><g><title>filemap_alloc_folio (1 samples, 0.75%)</title><rect x="94.7761%" y="165" width="0.7463%" height="15" fill="rgb(206,201,31)" fg:x="127" fg:w="1"/><text x="95.0261%" y="175.50"></text></g><g><title>folio_alloc (1 samples, 0.75%)</title><rect x="94.7761%" y="149" width="0.7463%" height="15" fill="rgb(231,57,52)" fg:x="127" fg:w="1"/><text x="95.0261%" y="159.50"></text></g><g><title>alloc_pages_mpol (1 samples, 0.75%)</title><rect x="94.7761%" y="133" width="0.7463%" height="15" fill="rgb(248,177,22)" fg:x="127" fg:w="1"/><text x="95.0261%" y="143.50"></text></g><g><title>__alloc_pages (1 samples, 0.75%)</title><rect x="94.7761%" y="117" width="0.7463%" height="15" fill="rgb(215,211,37)" fg:x="127" fg:w="1"/><text x="95.0261%" y="127.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.75%)</title><rect x="94.7761%" y="101" width="0.7463%" height="15" fill="rgb(241,128,51)" fg:x="127" fg:w="1"/><text x="95.0261%" y="111.50"></text></g><g><title>clean_bdev_aliases (2 samples, 1.49%)</title><rect x="95.5224%" y="197" width="1.4925%" height="15" fill="rgb(227,165,31)" fg:x="128" fg:w="2"/><text x="95.7724%" y="207.50"></text></g><g><title>filemap_get_folios (2 samples, 1.49%)</title><rect x="95.5224%" y="181" width="1.4925%" height="15" fill="rgb(228,167,24)" fg:x="128" fg:w="2"/><text x="95.7724%" y="191.50"></text></g><g><title>filemap_get_folios_tag (2 samples, 1.49%)</title><rect x="95.5224%" y="165" width="1.4925%" height="15" fill="rgb(228,143,12)" fg:x="128" fg:w="2"/><text x="95.7724%" y="175.50"></text></g><g><title>xas_find (1 samples, 0.75%)</title><rect x="96.2687%" y="149" width="0.7463%" height="15" fill="rgb(249,149,8)" fg:x="129" fg:w="1"/><text x="96.5187%" y="159.50"></text></g><g><title>[unknown] (75 samples, 55.97%)</title><rect x="41.7910%" y="405" width="55.9701%" height="15" fill="rgb(243,35,44)" fg:x="56" fg:w="75"/><text x="42.0410%" y="415.50">[unknown]</text></g><g><title>solana_bucket_map::index_entry::IndexEntryPlaceInBucket&lt;T&gt;::set_slot_count_enum_value (7 samples, 5.22%)</title><rect x="92.5373%" y="389" width="5.2239%" height="15" fill="rgb(246,89,9)" fg:x="124" fg:w="7"/><text x="92.7873%" y="399.50">solana..</text></g><g><title>asm_exc_page_fault (6 samples, 4.48%)</title><rect x="93.2836%" y="373" width="4.4776%" height="15" fill="rgb(233,213,13)" fg:x="125" fg:w="6"/><text x="93.5336%" y="383.50">asm_e..</text></g><g><title>exc_page_fault (6 samples, 4.48%)</title><rect x="93.2836%" y="357" width="4.4776%" height="15" fill="rgb(233,141,41)" fg:x="125" fg:w="6"/><text x="93.5336%" y="367.50">exc_p..</text></g><g><title>do_user_addr_fault (6 samples, 4.48%)</title><rect x="93.2836%" y="341" width="4.4776%" height="15" fill="rgb(239,167,4)" fg:x="125" fg:w="6"/><text x="93.5336%" y="351.50">do_us..</text></g><g><title>handle_mm_fault (6 samples, 4.48%)</title><rect x="93.2836%" y="325" width="4.4776%" height="15" fill="rgb(209,217,16)" fg:x="125" fg:w="6"/><text x="93.5336%" y="335.50">handl..</text></g><g><title>__handle_mm_fault (6 samples, 4.48%)</title><rect x="93.2836%" y="309" width="4.4776%" height="15" fill="rgb(219,88,35)" fg:x="125" fg:w="6"/><text x="93.5336%" y="319.50">__han..</text></g><g><title>handle_pte_fault (6 samples, 4.48%)</title><rect x="93.2836%" y="293" width="4.4776%" height="15" fill="rgb(220,193,23)" fg:x="125" fg:w="6"/><text x="93.5336%" y="303.50">handl..</text></g><g><title>do_fault (6 samples, 4.48%)</title><rect x="93.2836%" y="277" width="4.4776%" height="15" fill="rgb(230,90,52)" fg:x="125" fg:w="6"/><text x="93.5336%" y="287.50">do_fa..</text></g><g><title>do_page_mkwrite (3 samples, 2.24%)</title><rect x="95.5224%" y="261" width="2.2388%" height="15" fill="rgb(252,106,19)" fg:x="128" fg:w="3"/><text x="95.7724%" y="271.50">d..</text></g><g><title>ext4_page_mkwrite (3 samples, 2.24%)</title><rect x="95.5224%" y="245" width="2.2388%" height="15" fill="rgb(206,74,20)" fg:x="128" fg:w="3"/><text x="95.7724%" y="255.50">e..</text></g><g><title>block_page_mkwrite (3 samples, 2.24%)</title><rect x="95.5224%" y="229" width="2.2388%" height="15" fill="rgb(230,138,44)" fg:x="128" fg:w="3"/><text x="95.7724%" y="239.50">b..</text></g><g><title>__block_write_begin_int (3 samples, 2.24%)</title><rect x="95.5224%" y="213" width="2.2388%" height="15" fill="rgb(235,182,43)" fg:x="128" fg:w="3"/><text x="95.7724%" y="223.50">_..</text></g><g><title>folio_create_buffers (1 samples, 0.75%)</title><rect x="97.0149%" y="197" width="0.7463%" height="15" fill="rgb(242,16,51)" fg:x="130" fg:w="1"/><text x="97.2649%" y="207.50"></text></g><g><title>create_empty_buffers (1 samples, 0.75%)</title><rect x="97.0149%" y="181" width="0.7463%" height="15" fill="rgb(248,9,4)" fg:x="130" fg:w="1"/><text x="97.2649%" y="191.50"></text></g><g><title>folio_alloc_buffers (1 samples, 0.75%)</title><rect x="97.0149%" y="165" width="0.7463%" height="15" fill="rgb(210,31,22)" fg:x="130" fg:w="1"/><text x="97.2649%" y="175.50"></text></g><g><title>alloc_buffer_head (1 samples, 0.75%)</title><rect x="97.0149%" y="149" width="0.7463%" height="15" fill="rgb(239,54,39)" fg:x="130" fg:w="1"/><text x="97.2649%" y="159.50"></text></g><g><title>kmem_cache_alloc (1 samples, 0.75%)</title><rect x="97.0149%" y="133" width="0.7463%" height="15" fill="rgb(230,99,41)" fg:x="130" fg:w="1"/><text x="97.2649%" y="143.50"></text></g><g><title>___slab_alloc (1 samples, 0.75%)</title><rect x="97.0149%" y="117" width="0.7463%" height="15" fill="rgb(253,106,12)" fg:x="130" fg:w="1"/><text x="97.2649%" y="127.50"></text></g><g><title>new_slab (1 samples, 0.75%)</title><rect x="97.0149%" y="101" width="0.7463%" height="15" fill="rgb(213,46,41)" fg:x="130" fg:w="1"/><text x="97.2649%" y="111.50"></text></g><g><title>allocate_slab (1 samples, 0.75%)</title><rect x="97.0149%" y="85" width="0.7463%" height="15" fill="rgb(215,133,35)" fg:x="130" fg:w="1"/><text x="97.2649%" y="95.50"></text></g><g><title>__alloc_pages (1 samples, 0.75%)</title><rect x="97.0149%" y="69" width="0.7463%" height="15" fill="rgb(213,28,5)" fg:x="130" fg:w="1"/><text x="97.2649%" y="79.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.75%)</title><rect x="97.0149%" y="53" width="0.7463%" height="15" fill="rgb(215,77,49)" fg:x="130" fg:w="1"/><text x="97.2649%" y="63.50"></text></g><g><title>clear_page_rep (1 samples, 0.75%)</title><rect x="97.0149%" y="37" width="0.7463%" height="15" fill="rgb(248,100,22)" fg:x="130" fg:w="1"/><text x="97.2649%" y="47.50"></text></g><g><title>core::slice::sort::shared::smallsort::sort8_stable (1 samples, 0.75%)</title><rect x="97.7612%" y="405" width="0.7463%" height="15" fill="rgb(208,67,9)" fg:x="131" fg:w="1"/><text x="98.0112%" y="415.50"></text></g><g><title>all (134 samples, 100%)</title><rect x="0.0000%" y="437" width="100.0000%" height="15" fill="rgb(219,133,21)" fg:x="0" fg:w="134"/><text x="0.2500%" y="447.50"></text></g><g><title>solIdxFlusher00 (78 samples, 58.21%)</title><rect x="41.7910%" y="421" width="58.2090%" height="15" fill="rgb(246,46,29)" fg:x="56" fg:w="78"/><text x="42.0410%" y="431.50">solIdxFlusher00</text></g><g><title>core::slice::sort::unstable::quicksort::quicksort (2 samples, 1.49%)</title><rect x="98.5075%" y="405" width="1.4925%" height="15" fill="rgb(246,185,52)" fg:x="132" fg:w="2"/><text x="98.7575%" y="415.50"></text></g></svg></svg>