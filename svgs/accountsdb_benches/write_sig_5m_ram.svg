<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="374" onload="init(evt)" viewBox="0 0 1200 374" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="374" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="357.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="357.00"> </text><svg id="frames" x="10" width="1180" total_samples="23563"><g><title>do_user_addr_fault (4 samples, 0.02%)</title><rect x="3.0005%" y="229" width="0.0170%" height="15" fill="rgb(227,0,7)" fg:x="707" fg:w="4"/><text x="3.2505%" y="239.50"></text></g><g><title>asm_exc_page_fault (5 samples, 0.02%)</title><rect x="3.0005%" y="261" width="0.0212%" height="15" fill="rgb(217,0,24)" fg:x="707" fg:w="5"/><text x="3.2505%" y="271.50"></text></g><g><title>exc_page_fault (5 samples, 0.02%)</title><rect x="3.0005%" y="245" width="0.0212%" height="15" fill="rgb(221,193,54)" fg:x="707" fg:w="5"/><text x="3.2505%" y="255.50"></text></g><g><title>Thread.RwLock.DefaultRwLock.lock (715 samples, 3.03%)</title><rect x="0.0000%" y="277" width="3.0344%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="715"/><text x="0.2500%" y="287.50">Thr..</text></g><g><title>asm_sysvec_apic_timer_interrupt (3 samples, 0.01%)</title><rect x="3.0217%" y="261" width="0.0127%" height="15" fill="rgb(208,68,35)" fg:x="712" fg:w="3"/><text x="3.2717%" y="271.50"></text></g><g><title>sysvec_apic_timer_interrupt (3 samples, 0.01%)</title><rect x="3.0217%" y="245" width="0.0127%" height="15" fill="rgb(232,128,0)" fg:x="712" fg:w="3"/><text x="3.2717%" y="255.50"></text></g><g><title>__sysvec_apic_timer_interrupt (3 samples, 0.01%)</title><rect x="3.0217%" y="229" width="0.0127%" height="15" fill="rgb(207,160,47)" fg:x="712" fg:w="3"/><text x="3.2717%" y="239.50"></text></g><g><title>hrtimer_interrupt (3 samples, 0.01%)</title><rect x="3.0217%" y="213" width="0.0127%" height="15" fill="rgb(228,23,34)" fg:x="712" fg:w="3"/><text x="3.2717%" y="223.50"></text></g><g><title>__hrtimer_run_queues (3 samples, 0.01%)</title><rect x="3.0217%" y="197" width="0.0127%" height="15" fill="rgb(218,30,26)" fg:x="712" fg:w="3"/><text x="3.2717%" y="207.50"></text></g><g><title>tick_nohz_highres_handler (3 samples, 0.01%)</title><rect x="3.0217%" y="181" width="0.0127%" height="15" fill="rgb(220,122,19)" fg:x="712" fg:w="3"/><text x="3.2717%" y="191.50"></text></g><g><title>tick_sched_handle (3 samples, 0.01%)</title><rect x="3.0217%" y="165" width="0.0127%" height="15" fill="rgb(250,228,42)" fg:x="712" fg:w="3"/><text x="3.2717%" y="175.50"></text></g><g><title>update_process_times (3 samples, 0.01%)</title><rect x="3.0217%" y="149" width="0.0127%" height="15" fill="rgb(240,193,28)" fg:x="712" fg:w="3"/><text x="3.2717%" y="159.50"></text></g><g><title>asm_exc_page_fault (9 samples, 0.04%)</title><rect x="3.0344%" y="261" width="0.0382%" height="15" fill="rgb(216,20,37)" fg:x="715" fg:w="9"/><text x="3.2844%" y="271.50"></text></g><g><title>syscall_exit_to_user_mode (7 samples, 0.03%)</title><rect x="3.0853%" y="229" width="0.0297%" height="15" fill="rgb(206,188,39)" fg:x="727" fg:w="7"/><text x="3.3353%" y="239.50"></text></g><g><title>mas_prev (3 samples, 0.01%)</title><rect x="3.2169%" y="101" width="0.0127%" height="15" fill="rgb(217,207,13)" fg:x="758" fg:w="3"/><text x="3.4669%" y="111.50"></text></g><g><title>mas_empty_area_rev (10 samples, 0.04%)</title><rect x="3.2678%" y="85" width="0.0424%" height="15" fill="rgb(231,73,38)" fg:x="770" fg:w="10"/><text x="3.5178%" y="95.50"></text></g><g><title>mas_rev_awalk (4 samples, 0.02%)</title><rect x="3.2933%" y="69" width="0.0170%" height="15" fill="rgb(225,20,46)" fg:x="776" fg:w="4"/><text x="3.5433%" y="79.50"></text></g><g><title>mas_next (4 samples, 0.02%)</title><rect x="3.3103%" y="85" width="0.0170%" height="15" fill="rgb(210,31,41)" fg:x="780" fg:w="4"/><text x="3.5603%" y="95.50"></text></g><g><title>arch_get_unmapped_area_topdown (32 samples, 0.14%)</title><rect x="3.1957%" y="117" width="0.1358%" height="15" fill="rgb(221,200,47)" fg:x="753" fg:w="32"/><text x="3.4457%" y="127.50"></text></g><g><title>vm_unmapped_area (24 samples, 0.10%)</title><rect x="3.2296%" y="101" width="0.1019%" height="15" fill="rgb(226,26,5)" fg:x="761" fg:w="24"/><text x="3.4796%" y="111.50"></text></g><g><title>get_unmapped_area (38 samples, 0.16%)</title><rect x="3.1745%" y="149" width="0.1613%" height="15" fill="rgb(249,33,26)" fg:x="748" fg:w="38"/><text x="3.4245%" y="159.50"></text></g><g><title>thp_get_unmapped_area (34 samples, 0.14%)</title><rect x="3.1914%" y="133" width="0.1443%" height="15" fill="rgb(235,183,28)" fg:x="752" fg:w="34"/><text x="3.4414%" y="143.50"></text></g><g><title>can_vma_merge_before (3 samples, 0.01%)</title><rect x="3.3782%" y="133" width="0.0127%" height="15" fill="rgb(221,5,38)" fg:x="796" fg:w="3"/><text x="3.6282%" y="143.50"></text></g><g><title>mas_prev (4 samples, 0.02%)</title><rect x="3.4121%" y="133" width="0.0170%" height="15" fill="rgb(247,18,42)" fg:x="804" fg:w="4"/><text x="3.6621%" y="143.50"></text></g><g><title>perf_event_mmap_event (28 samples, 0.12%)</title><rect x="3.4546%" y="117" width="0.1188%" height="15" fill="rgb(241,131,45)" fg:x="814" fg:w="28"/><text x="3.7046%" y="127.50"></text></g><g><title>perf_iterate_sb (20 samples, 0.08%)</title><rect x="3.4885%" y="101" width="0.0849%" height="15" fill="rgb(249,31,29)" fg:x="822" fg:w="20"/><text x="3.7385%" y="111.50"></text></g><g><title>perf_iterate_ctx (18 samples, 0.08%)</title><rect x="3.4970%" y="85" width="0.0764%" height="15" fill="rgb(225,111,53)" fg:x="824" fg:w="18"/><text x="3.7470%" y="95.50"></text></g><g><title>perf_event_mmap (33 samples, 0.14%)</title><rect x="3.4418%" y="133" width="0.1401%" height="15" fill="rgb(238,160,17)" fg:x="811" fg:w="33"/><text x="3.6918%" y="143.50"></text></g><g><title>down_write (3 samples, 0.01%)</title><rect x="3.6286%" y="117" width="0.0127%" height="15" fill="rgb(214,148,48)" fg:x="855" fg:w="3"/><text x="3.8786%" y="127.50"></text></g><g><title>mas_store_prealloc (11 samples, 0.05%)</title><rect x="3.6413%" y="117" width="0.0467%" height="15" fill="rgb(232,36,49)" fg:x="858" fg:w="11"/><text x="3.8913%" y="127.50"></text></g><g><title>mas_wr_store_entry.isra.0 (8 samples, 0.03%)</title><rect x="3.6540%" y="101" width="0.0340%" height="15" fill="rgb(209,103,24)" fg:x="861" fg:w="8"/><text x="3.9040%" y="111.50"></text></g><g><title>mas_wr_modify (7 samples, 0.03%)</title><rect x="3.6583%" y="85" width="0.0297%" height="15" fill="rgb(229,88,8)" fg:x="862" fg:w="7"/><text x="3.9083%" y="95.50"></text></g><g><title>mas_wr_slot_store (4 samples, 0.02%)</title><rect x="3.6710%" y="69" width="0.0170%" height="15" fill="rgb(213,181,19)" fg:x="865" fg:w="4"/><text x="3.9210%" y="79.50"></text></g><g><title>mas_update_gap.part.0 (3 samples, 0.01%)</title><rect x="3.6753%" y="53" width="0.0127%" height="15" fill="rgb(254,191,54)" fg:x="866" fg:w="3"/><text x="3.9253%" y="63.50"></text></g><g><title>vma_complete (4 samples, 0.02%)</title><rect x="3.7050%" y="117" width="0.0170%" height="15" fill="rgb(241,83,37)" fg:x="873" fg:w="4"/><text x="3.9550%" y="127.50"></text></g><g><title>mmap_region (96 samples, 0.41%)</title><rect x="3.3357%" y="149" width="0.4074%" height="15" fill="rgb(233,36,39)" fg:x="786" fg:w="96"/><text x="3.5857%" y="159.50"></text></g><g><title>vma_expand (34 samples, 0.14%)</title><rect x="3.5989%" y="133" width="0.1443%" height="15" fill="rgb(226,3,54)" fg:x="848" fg:w="34"/><text x="3.8489%" y="143.50"></text></g><g><title>vma_prepare (5 samples, 0.02%)</title><rect x="3.7219%" y="117" width="0.0212%" height="15" fill="rgb(245,192,40)" fg:x="877" fg:w="5"/><text x="3.9719%" y="127.50"></text></g><g><title>do_mmap (141 samples, 0.60%)</title><rect x="3.1532%" y="165" width="0.5984%" height="15" fill="rgb(238,167,29)" fg:x="743" fg:w="141"/><text x="3.4032%" y="175.50"></text></g><g><title>ksys_mmap_pgoff (158 samples, 0.67%)</title><rect x="3.1151%" y="197" width="0.6705%" height="15" fill="rgb(232,182,51)" fg:x="734" fg:w="158"/><text x="3.3651%" y="207.50"></text></g><g><title>vm_mmap_pgoff (154 samples, 0.65%)</title><rect x="3.1320%" y="181" width="0.6536%" height="15" fill="rgb(231,60,39)" fg:x="738" fg:w="154"/><text x="3.3820%" y="191.50"></text></g><g><title>security_mmap_file (7 samples, 0.03%)</title><rect x="3.7559%" y="165" width="0.0297%" height="15" fill="rgb(208,69,12)" fg:x="885" fg:w="7"/><text x="4.0059%" y="175.50"></text></g><g><title>do_syscall_64 (169 samples, 0.72%)</title><rect x="3.0726%" y="245" width="0.7172%" height="15" fill="rgb(235,93,37)" fg:x="724" fg:w="169"/><text x="3.3226%" y="255.50"></text></g><g><title>x64_sys_call (159 samples, 0.67%)</title><rect x="3.1151%" y="229" width="0.6748%" height="15" fill="rgb(213,116,39)" fg:x="734" fg:w="159"/><text x="3.3651%" y="239.50"></text></g><g><title>__x64_sys_mmap (159 samples, 0.67%)</title><rect x="3.1151%" y="213" width="0.6748%" height="15" fill="rgb(222,207,29)" fg:x="734" fg:w="159"/><text x="3.3651%" y="223.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (172 samples, 0.73%)</title><rect x="3.0726%" y="261" width="0.7300%" height="15" fill="rgb(206,96,30)" fg:x="724" fg:w="172"/><text x="3.3226%" y="271.50"></text></g><g><title>__mmap (185 samples, 0.79%)</title><rect x="3.0344%" y="277" width="0.7851%" height="15" fill="rgb(218,138,4)" fg:x="715" fg:w="185"/><text x="3.2844%" y="287.50"></text></g><g><title>accountsdb.db.AccountsDB.putAccountFile (18 samples, 0.08%)</title><rect x="3.8238%" y="277" width="0.0764%" height="15" fill="rgb(250,191,14)" fg:x="901" fg:w="18"/><text x="4.0738%" y="287.50"></text></g><g><title>tick_sched_do_timer (7 samples, 0.03%)</title><rect x="64.3933%" y="165" width="0.0297%" height="15" fill="rgb(239,60,40)" fg:x="15173" fg:w="7"/><text x="64.6433%" y="175.50"></text></g><g><title>tick_do_update_jiffies64 (7 samples, 0.03%)</title><rect x="64.3933%" y="149" width="0.0297%" height="15" fill="rgb(206,27,48)" fg:x="15173" fg:w="7"/><text x="64.6433%" y="159.50"></text></g><g><title>update_wall_time (5 samples, 0.02%)</title><rect x="64.4018%" y="133" width="0.0212%" height="15" fill="rgb(225,35,8)" fg:x="15175" fg:w="5"/><text x="64.6518%" y="143.50"></text></g><g><title>timekeeping_advance (5 samples, 0.02%)</title><rect x="64.4018%" y="117" width="0.0212%" height="15" fill="rgb(250,213,24)" fg:x="15175" fg:w="5"/><text x="64.6518%" y="127.50"></text></g><g><title>timekeeping_update (3 samples, 0.01%)</title><rect x="64.4103%" y="101" width="0.0127%" height="15" fill="rgb(247,123,22)" fg:x="15177" fg:w="3"/><text x="64.6603%" y="111.50"></text></g><g><title>account_process_tick (4 samples, 0.02%)</title><rect x="64.4358%" y="133" width="0.0170%" height="15" fill="rgb(231,138,38)" fg:x="15183" fg:w="4"/><text x="64.6858%" y="143.50"></text></g><g><title>account_user_time (4 samples, 0.02%)</title><rect x="64.4358%" y="117" width="0.0170%" height="15" fill="rgb(231,145,46)" fg:x="15183" fg:w="4"/><text x="64.6858%" y="127.50"></text></g><g><title>perf_event_task_tick (6 samples, 0.03%)</title><rect x="64.4655%" y="117" width="0.0255%" height="15" fill="rgb(251,118,11)" fg:x="15190" fg:w="6"/><text x="64.7155%" y="127.50"></text></g><g><title>perf_adjust_freq_unthr_context (6 samples, 0.03%)</title><rect x="64.4655%" y="101" width="0.0255%" height="15" fill="rgb(217,147,25)" fg:x="15190" fg:w="6"/><text x="64.7155%" y="111.50"></text></g><g><title>task_tick_fair (10 samples, 0.04%)</title><rect x="64.4994%" y="117" width="0.0424%" height="15" fill="rgb(247,81,37)" fg:x="15198" fg:w="10"/><text x="64.7494%" y="127.50"></text></g><g><title>update_load_avg (7 samples, 0.03%)</title><rect x="64.5122%" y="101" width="0.0297%" height="15" fill="rgb(209,12,38)" fg:x="15201" fg:w="7"/><text x="64.7622%" y="111.50"></text></g><g><title>scheduler_tick (21 samples, 0.09%)</title><rect x="64.4570%" y="133" width="0.0891%" height="15" fill="rgb(227,1,9)" fg:x="15188" fg:w="21"/><text x="64.7070%" y="143.50"></text></g><g><title>__hrtimer_run_queues (40 samples, 0.17%)</title><rect x="64.3806%" y="197" width="0.1698%" height="15" fill="rgb(248,47,43)" fg:x="15170" fg:w="40"/><text x="64.6306%" y="207.50"></text></g><g><title>tick_nohz_highres_handler (39 samples, 0.17%)</title><rect x="64.3848%" y="181" width="0.1655%" height="15" fill="rgb(221,10,30)" fg:x="15171" fg:w="39"/><text x="64.6348%" y="191.50"></text></g><g><title>tick_sched_handle (30 samples, 0.13%)</title><rect x="64.4230%" y="165" width="0.1273%" height="15" fill="rgb(210,229,1)" fg:x="15180" fg:w="30"/><text x="64.6730%" y="175.50"></text></g><g><title>update_process_times (29 samples, 0.12%)</title><rect x="64.4273%" y="149" width="0.1231%" height="15" fill="rgb(222,148,37)" fg:x="15181" fg:w="29"/><text x="64.6773%" y="159.50"></text></g><g><title>hrtimer_interrupt (44 samples, 0.19%)</title><rect x="64.3806%" y="213" width="0.1867%" height="15" fill="rgb(234,67,33)" fg:x="15170" fg:w="44"/><text x="64.6306%" y="223.50"></text></g><g><title>__sysvec_apic_timer_interrupt (46 samples, 0.20%)</title><rect x="64.3806%" y="229" width="0.1952%" height="15" fill="rgb(247,98,35)" fg:x="15170" fg:w="46"/><text x="64.6306%" y="239.50"></text></g><g><title>call_timer_fn (5 samples, 0.02%)</title><rect x="64.5843%" y="149" width="0.0212%" height="15" fill="rgb(247,138,52)" fg:x="15218" fg:w="5"/><text x="64.8343%" y="159.50"></text></g><g><title>fq_flush_timeout (3 samples, 0.01%)</title><rect x="64.5928%" y="133" width="0.0127%" height="15" fill="rgb(213,79,30)" fg:x="15220" fg:w="3"/><text x="64.8428%" y="143.50"></text></g><g><title>irq_exit_rcu (7 samples, 0.03%)</title><rect x="64.5801%" y="229" width="0.0297%" height="15" fill="rgb(246,177,23)" fg:x="15217" fg:w="7"/><text x="64.8301%" y="239.50"></text></g><g><title>__irq_exit_rcu (7 samples, 0.03%)</title><rect x="64.5801%" y="213" width="0.0297%" height="15" fill="rgb(230,62,27)" fg:x="15217" fg:w="7"/><text x="64.8301%" y="223.50"></text></g><g><title>handle_softirqs (6 samples, 0.03%)</title><rect x="64.5843%" y="197" width="0.0255%" height="15" fill="rgb(216,154,8)" fg:x="15218" fg:w="6"/><text x="64.8343%" y="207.50"></text></g><g><title>run_timer_softirq (6 samples, 0.03%)</title><rect x="64.5843%" y="181" width="0.0255%" height="15" fill="rgb(244,35,45)" fg:x="15218" fg:w="6"/><text x="64.8343%" y="191.50"></text></g><g><title>__run_timers (6 samples, 0.03%)</title><rect x="64.5843%" y="165" width="0.0255%" height="15" fill="rgb(251,115,12)" fg:x="15218" fg:w="6"/><text x="64.8343%" y="175.50"></text></g><g><title>accountsdb.index.AccountIndex.indexRefIfNotDuplicateSlot (14,308 samples, 60.72%)</title><rect x="3.9002%" y="277" width="60.7223%" height="15" fill="rgb(240,54,50)" fg:x="919" fg:w="14308"/><text x="4.1502%" y="287.50">accountsdb.index.AccountIndex.indexRefIfNotDuplicateSlot</text></g><g><title>asm_sysvec_apic_timer_interrupt (66 samples, 0.28%)</title><rect x="64.3424%" y="261" width="0.2801%" height="15" fill="rgb(233,84,52)" fg:x="15161" fg:w="66"/><text x="64.5924%" y="271.50"></text></g><g><title>sysvec_apic_timer_interrupt (58 samples, 0.25%)</title><rect x="64.3764%" y="245" width="0.2461%" height="15" fill="rgb(207,117,47)" fg:x="15169" fg:w="58"/><text x="64.6264%" y="255.50"></text></g><g><title>irqentry_exit (3 samples, 0.01%)</title><rect x="64.6098%" y="229" width="0.0127%" height="15" fill="rgb(249,43,39)" fg:x="15224" fg:w="3"/><text x="64.8598%" y="239.50"></text></g><g><title>irqentry_exit_to_user_mode (3 samples, 0.01%)</title><rect x="64.6098%" y="213" width="0.0127%" height="15" fill="rgb(209,38,44)" fg:x="15224" fg:w="3"/><text x="64.8598%" y="223.50"></text></g><g><title>heap.general_purpose_allocator.GeneralPurposeAllocator (5 samples, 0.02%)</title><rect x="64.6267%" y="277" width="0.0212%" height="15" fill="rgb(236,212,23)" fg:x="15228" fg:w="5"/><text x="64.8767%" y="287.50"></text></g><g><title>__irqentry_text_end (20 samples, 0.08%)</title><rect x="66.2522%" y="261" width="0.0849%" height="15" fill="rgb(242,79,21)" fg:x="15611" fg:w="20"/><text x="66.5022%" y="271.50"></text></g><g><title>do_user_addr_fault (6 samples, 0.03%)</title><rect x="67.4490%" y="245" width="0.0255%" height="15" fill="rgb(211,96,35)" fg:x="15893" fg:w="6"/><text x="67.6990%" y="255.50"></text></g><g><title>__rcu_read_lock (5 samples, 0.02%)</title><rect x="67.7758%" y="229" width="0.0212%" height="15" fill="rgb(253,215,40)" fg:x="15970" fg:w="5"/><text x="68.0258%" y="239.50"></text></g><g><title>__rcu_read_unlock (3 samples, 0.01%)</title><rect x="67.7970%" y="229" width="0.0127%" height="15" fill="rgb(211,81,21)" fg:x="15975" fg:w="3"/><text x="68.0470%" y="239.50"></text></g><g><title>access_error (14 samples, 0.06%)</title><rect x="67.8097%" y="229" width="0.0594%" height="15" fill="rgb(208,190,38)" fg:x="15978" fg:w="14"/><text x="68.0597%" y="239.50"></text></g><g><title>__rcu_read_lock (10 samples, 0.04%)</title><rect x="68.2511%" y="213" width="0.0424%" height="15" fill="rgb(235,213,38)" fg:x="16082" fg:w="10"/><text x="68.5011%" y="223.50"></text></g><g><title>__rcu_read_unlock (21 samples, 0.09%)</title><rect x="68.2935%" y="213" width="0.0891%" height="15" fill="rgb(237,122,38)" fg:x="16092" fg:w="21"/><text x="68.5435%" y="223.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (3 samples, 0.01%)</title><rect x="68.3826%" y="213" width="0.0127%" height="15" fill="rgb(244,218,35)" fg:x="16113" fg:w="3"/><text x="68.6326%" y="223.50"></text></g><g><title>sysvec_apic_timer_interrupt (3 samples, 0.01%)</title><rect x="68.3826%" y="197" width="0.0127%" height="15" fill="rgb(240,68,47)" fg:x="16113" fg:w="3"/><text x="68.6326%" y="207.50"></text></g><g><title>__sysvec_apic_timer_interrupt (3 samples, 0.01%)</title><rect x="68.3826%" y="181" width="0.0127%" height="15" fill="rgb(210,16,53)" fg:x="16113" fg:w="3"/><text x="68.6326%" y="191.50"></text></g><g><title>hrtimer_interrupt (3 samples, 0.01%)</title><rect x="68.3826%" y="165" width="0.0127%" height="15" fill="rgb(235,124,12)" fg:x="16113" fg:w="3"/><text x="68.6326%" y="175.50"></text></g><g><title>__hrtimer_run_queues (3 samples, 0.01%)</title><rect x="68.3826%" y="149" width="0.0127%" height="15" fill="rgb(224,169,11)" fg:x="16113" fg:w="3"/><text x="68.6326%" y="159.50"></text></g><g><title>tick_nohz_highres_handler (3 samples, 0.01%)</title><rect x="68.3826%" y="133" width="0.0127%" height="15" fill="rgb(250,166,2)" fg:x="16113" fg:w="3"/><text x="68.6326%" y="143.50"></text></g><g><title>down_read_trylock (16 samples, 0.07%)</title><rect x="68.3954%" y="213" width="0.0679%" height="15" fill="rgb(242,216,29)" fg:x="16116" fg:w="16"/><text x="68.6454%" y="223.50"></text></g><g><title>__rcu_read_unlock (9 samples, 0.04%)</title><rect x="69.5667%" y="181" width="0.0382%" height="15" fill="rgb(230,116,27)" fg:x="16392" fg:w="9"/><text x="69.8167%" y="191.50"></text></g><g><title>__folio_throttle_swaprate (15 samples, 0.06%)</title><rect x="69.7789%" y="165" width="0.0637%" height="15" fill="rgb(228,99,48)" fg:x="16442" fg:w="15"/><text x="70.0289%" y="175.50"></text></g><g><title>__pte_offset_map (3 samples, 0.01%)</title><rect x="69.8510%" y="165" width="0.0127%" height="15" fill="rgb(253,11,6)" fg:x="16459" fg:w="3"/><text x="70.1010%" y="175.50"></text></g><g><title>__pte_offset_map_lock (5 samples, 0.02%)</title><rect x="69.8638%" y="165" width="0.0212%" height="15" fill="rgb(247,143,39)" fg:x="16462" fg:w="5"/><text x="70.1138%" y="175.50"></text></g><g><title>__rcu_read_unlock (18 samples, 0.08%)</title><rect x="69.8850%" y="165" width="0.0764%" height="15" fill="rgb(236,97,10)" fg:x="16467" fg:w="18"/><text x="70.1350%" y="175.50"></text></g><g><title>__rcu_read_lock (5 samples, 0.02%)</title><rect x="70.8441%" y="133" width="0.0212%" height="15" fill="rgb(233,208,19)" fg:x="16693" fg:w="5"/><text x="71.0941%" y="143.50"></text></g><g><title>blk_cgroup_congested (49 samples, 0.21%)</title><rect x="70.8738%" y="133" width="0.2080%" height="15" fill="rgb(216,164,2)" fg:x="16700" fg:w="49"/><text x="71.1238%" y="143.50"></text></g><g><title>kthread_blkcg (6 samples, 0.03%)</title><rect x="71.0563%" y="117" width="0.0255%" height="15" fill="rgb(220,129,5)" fg:x="16743" fg:w="6"/><text x="71.3063%" y="127.50"></text></g><g><title>__folio_throttle_swaprate (89 samples, 0.38%)</title><rect x="70.7720%" y="149" width="0.3777%" height="15" fill="rgb(242,17,10)" fg:x="16676" fg:w="89"/><text x="71.0220%" y="159.50"></text></g><g><title>kthread_blkcg (16 samples, 0.07%)</title><rect x="71.0818%" y="133" width="0.0679%" height="15" fill="rgb(242,107,0)" fg:x="16749" fg:w="16"/><text x="71.3318%" y="143.50"></text></g><g><title>__count_memcg_events (4 samples, 0.02%)</title><rect x="71.4425%" y="133" width="0.0170%" height="15" fill="rgb(251,28,31)" fg:x="16834" fg:w="4"/><text x="71.6925%" y="143.50"></text></g><g><title>__rcu_read_lock (10 samples, 0.04%)</title><rect x="71.4595%" y="133" width="0.0424%" height="15" fill="rgb(233,223,10)" fg:x="16838" fg:w="10"/><text x="71.7095%" y="143.50"></text></g><g><title>__rcu_read_unlock (26 samples, 0.11%)</title><rect x="71.5019%" y="133" width="0.1103%" height="15" fill="rgb(215,21,27)" fg:x="16848" fg:w="26"/><text x="71.7519%" y="143.50"></text></g><g><title>consume_stock (5 samples, 0.02%)</title><rect x="71.6123%" y="133" width="0.0212%" height="15" fill="rgb(232,23,21)" fg:x="16874" fg:w="5"/><text x="71.8623%" y="143.50"></text></g><g><title>get_mem_cgroup_from_mm (64 samples, 0.27%)</title><rect x="71.6335%" y="133" width="0.2716%" height="15" fill="rgb(244,5,23)" fg:x="16879" fg:w="64"/><text x="71.8835%" y="143.50"></text></g><g><title>__count_memcg_events (56 samples, 0.24%)</title><rect x="72.3040%" y="117" width="0.2377%" height="15" fill="rgb(226,81,46)" fg:x="17037" fg:w="56"/><text x="72.5540%" y="127.50"></text></g><g><title>cgroup_rstat_updated (11 samples, 0.05%)</title><rect x="72.4950%" y="101" width="0.0467%" height="15" fill="rgb(247,70,30)" fg:x="17082" fg:w="11"/><text x="72.7450%" y="111.50"></text></g><g><title>__mem_cgroup_threshold (3 samples, 0.01%)</title><rect x="72.5502%" y="101" width="0.0127%" height="15" fill="rgb(212,68,19)" fg:x="17095" fg:w="3"/><text x="72.8002%" y="111.50"></text></g><g><title>mem_cgroup_commit_charge (156 samples, 0.66%)</title><rect x="71.9051%" y="133" width="0.6621%" height="15" fill="rgb(240,187,13)" fg:x="16943" fg:w="156"/><text x="72.1551%" y="143.50"></text></g><g><title>memcg_check_events (5 samples, 0.02%)</title><rect x="72.5459%" y="117" width="0.0212%" height="15" fill="rgb(223,113,26)" fg:x="17094" fg:w="5"/><text x="72.7959%" y="127.50"></text></g><g><title>memcg_check_events (3 samples, 0.01%)</title><rect x="72.5672%" y="133" width="0.0127%" height="15" fill="rgb(206,192,2)" fg:x="17099" fg:w="3"/><text x="72.8172%" y="143.50"></text></g><g><title>srso_safe_ret (5 samples, 0.02%)</title><rect x="72.5884%" y="133" width="0.0212%" height="15" fill="rgb(241,108,4)" fg:x="17104" fg:w="5"/><text x="72.8384%" y="143.50"></text></g><g><title>consume_stock (32 samples, 0.14%)</title><rect x="72.7030%" y="117" width="0.1358%" height="15" fill="rgb(247,173,49)" fg:x="17131" fg:w="32"/><text x="72.9530%" y="127.50"></text></g><g><title>__mem_cgroup_charge (402 samples, 1.71%)</title><rect x="71.1497%" y="149" width="1.7061%" height="15" fill="rgb(224,114,35)" fg:x="16765" fg:w="402"/><text x="71.3997%" y="159.50"></text></g><g><title>try_charge_memcg (58 samples, 0.25%)</title><rect x="72.6096%" y="133" width="0.2461%" height="15" fill="rgb(245,159,27)" fg:x="17109" fg:w="58"/><text x="72.8596%" y="143.50"></text></g><g><title>page_counter_try_charge (4 samples, 0.02%)</title><rect x="72.8388%" y="117" width="0.0170%" height="15" fill="rgb(245,172,44)" fg:x="17163" fg:w="4"/><text x="73.0888%" y="127.50"></text></g><g><title>__pte_alloc (4 samples, 0.02%)</title><rect x="72.8557%" y="149" width="0.0170%" height="15" fill="rgb(236,23,11)" fg:x="17167" fg:w="4"/><text x="73.1057%" y="159.50"></text></g><g><title>pte_alloc_one (4 samples, 0.02%)</title><rect x="72.8557%" y="133" width="0.0170%" height="15" fill="rgb(205,117,38)" fg:x="17167" fg:w="4"/><text x="73.1057%" y="143.50"></text></g><g><title>alloc_pages (4 samples, 0.02%)</title><rect x="72.8557%" y="117" width="0.0170%" height="15" fill="rgb(237,72,25)" fg:x="17167" fg:w="4"/><text x="73.1057%" y="127.50"></text></g><g><title>alloc_pages_mpol (4 samples, 0.02%)</title><rect x="72.8557%" y="101" width="0.0170%" height="15" fill="rgb(244,70,9)" fg:x="17167" fg:w="4"/><text x="73.1057%" y="111.50"></text></g><g><title>__alloc_pages (4 samples, 0.02%)</title><rect x="72.8557%" y="85" width="0.0170%" height="15" fill="rgb(217,125,39)" fg:x="17167" fg:w="4"/><text x="73.1057%" y="95.50"></text></g><g><title>get_page_from_freelist (3 samples, 0.01%)</title><rect x="72.8600%" y="69" width="0.0127%" height="15" fill="rgb(235,36,10)" fg:x="17168" fg:w="3"/><text x="73.1100%" y="79.50"></text></g><g><title>clear_page_rep (3 samples, 0.01%)</title><rect x="72.8600%" y="53" width="0.0127%" height="15" fill="rgb(251,123,47)" fg:x="17168" fg:w="3"/><text x="73.1100%" y="63.50"></text></g><g><title>__pte_offset_map (4 samples, 0.02%)</title><rect x="72.8727%" y="149" width="0.0170%" height="15" fill="rgb(221,13,13)" fg:x="17171" fg:w="4"/><text x="73.1227%" y="159.50"></text></g><g><title>__pte_offset_map (18 samples, 0.08%)</title><rect x="73.1104%" y="133" width="0.0764%" height="15" fill="rgb(238,131,9)" fg:x="17227" fg:w="18"/><text x="73.3604%" y="143.50"></text></g><g><title>__rcu_read_lock (6 samples, 0.03%)</title><rect x="73.1868%" y="133" width="0.0255%" height="15" fill="rgb(211,50,8)" fg:x="17245" fg:w="6"/><text x="73.4368%" y="143.50"></text></g><g><title>__pte_offset_map_lock (77 samples, 0.33%)</title><rect x="72.8897%" y="149" width="0.3268%" height="15" fill="rgb(245,182,24)" fg:x="17175" fg:w="77"/><text x="73.1397%" y="159.50"></text></g><g><title>__rcu_read_lock (12 samples, 0.05%)</title><rect x="73.2165%" y="149" width="0.0509%" height="15" fill="rgb(242,14,37)" fg:x="17252" fg:w="12"/><text x="73.4665%" y="159.50"></text></g><g><title>__rcu_read_unlock (9 samples, 0.04%)</title><rect x="73.2674%" y="149" width="0.0382%" height="15" fill="rgb(246,228,12)" fg:x="17264" fg:w="9"/><text x="73.5174%" y="159.50"></text></g><g><title>_raw_spin_lock (14 samples, 0.06%)</title><rect x="73.3056%" y="149" width="0.0594%" height="15" fill="rgb(213,55,15)" fg:x="17273" fg:w="14"/><text x="73.5556%" y="159.50"></text></g><g><title>srso_safe_ret (5 samples, 0.02%)</title><rect x="73.4754%" y="133" width="0.0212%" height="15" fill="rgb(209,9,3)" fg:x="17313" fg:w="5"/><text x="73.7254%" y="143.50"></text></g><g><title>__alloc_pages (5 samples, 0.02%)</title><rect x="73.6239%" y="117" width="0.0212%" height="15" fill="rgb(230,59,30)" fg:x="17348" fg:w="5"/><text x="73.8739%" y="127.50"></text></g><g><title>__next_zones_zonelist (7 samples, 0.03%)</title><rect x="74.0101%" y="85" width="0.0297%" height="15" fill="rgb(209,121,21)" fg:x="17439" fg:w="7"/><text x="74.2601%" y="95.50"></text></g><g><title>__rmqueue_pcplist (5 samples, 0.02%)</title><rect x="74.2478%" y="69" width="0.0212%" height="15" fill="rgb(220,109,13)" fg:x="17495" fg:w="5"/><text x="74.4978%" y="79.50"></text></g><g><title>_raw_spin_trylock (15 samples, 0.06%)</title><rect x="74.2690%" y="69" width="0.0637%" height="15" fill="rgb(232,18,1)" fg:x="17500" fg:w="15"/><text x="74.5190%" y="79.50"></text></g><g><title>_raw_spin_unlock (10 samples, 0.04%)</title><rect x="74.3326%" y="69" width="0.0424%" height="15" fill="rgb(215,41,42)" fg:x="17515" fg:w="10"/><text x="74.5826%" y="79.50"></text></g><g><title>clear_page_rep (694 samples, 2.95%)</title><rect x="74.3751%" y="69" width="2.9453%" height="15" fill="rgb(224,123,36)" fg:x="17525" fg:w="694"/><text x="74.6251%" y="79.50">cl..</text></g><g><title>post_alloc_hook (17 samples, 0.07%)</title><rect x="77.3204%" y="69" width="0.0721%" height="15" fill="rgb(240,125,3)" fg:x="18219" fg:w="17"/><text x="77.5704%" y="79.50"></text></g><g><title>rmqueue (162 samples, 0.69%)</title><rect x="77.3925%" y="69" width="0.6875%" height="15" fill="rgb(205,98,50)" fg:x="18236" fg:w="162"/><text x="77.6425%" y="79.50"></text></g><g><title>__rmqueue_pcplist (93 samples, 0.39%)</title><rect x="77.6854%" y="53" width="0.3947%" height="15" fill="rgb(205,185,37)" fg:x="18305" fg:w="93"/><text x="77.9354%" y="63.50"></text></g><g><title>rmqueue_bulk (80 samples, 0.34%)</title><rect x="77.7405%" y="37" width="0.3395%" height="15" fill="rgb(238,207,15)" fg:x="18318" fg:w="80"/><text x="77.9905%" y="47.50"></text></g><g><title>get_page_from_freelist (954 samples, 4.05%)</title><rect x="74.0398%" y="85" width="4.0487%" height="15" fill="rgb(213,199,42)" fg:x="17446" fg:w="954"/><text x="74.2898%" y="95.50">get_..</text></g><g><title>post_alloc_hook (3 samples, 0.01%)</title><rect x="78.0885%" y="85" width="0.0127%" height="15" fill="rgb(235,201,11)" fg:x="18400" fg:w="3"/><text x="78.3385%" y="95.50"></text></g><g><title>__alloc_pages (1,033 samples, 4.38%)</title><rect x="73.7342%" y="101" width="4.3840%" height="15" fill="rgb(207,46,11)" fg:x="17374" fg:w="1033"/><text x="73.9842%" y="111.50">__all..</text></g><g><title>rmqueue (4 samples, 0.02%)</title><rect x="78.1013%" y="85" width="0.0170%" height="15" fill="rgb(241,35,35)" fg:x="18403" fg:w="4"/><text x="78.3513%" y="95.50"></text></g><g><title>__cond_resched (11 samples, 0.05%)</title><rect x="78.1182%" y="101" width="0.0467%" height="15" fill="rgb(243,32,47)" fg:x="18407" fg:w="11"/><text x="78.3682%" y="111.50"></text></g><g><title>__next_zones_zonelist (7 samples, 0.03%)</title><rect x="78.1649%" y="101" width="0.0297%" height="15" fill="rgb(247,202,23)" fg:x="18418" fg:w="7"/><text x="78.4149%" y="111.50"></text></g><g><title>_find_first_bit (30 samples, 0.13%)</title><rect x="78.1946%" y="101" width="0.1273%" height="15" fill="rgb(219,102,11)" fg:x="18425" fg:w="30"/><text x="78.4446%" y="111.50"></text></g><g><title>get_page_from_freelist (3 samples, 0.01%)</title><rect x="78.3219%" y="101" width="0.0127%" height="15" fill="rgb(243,110,44)" fg:x="18455" fg:w="3"/><text x="78.5719%" y="111.50"></text></g><g><title>policy_nodemask (25 samples, 0.11%)</title><rect x="78.3347%" y="101" width="0.1061%" height="15" fill="rgb(222,74,54)" fg:x="18458" fg:w="25"/><text x="78.5847%" y="111.50"></text></g><g><title>should_fail_alloc_page (10 samples, 0.04%)</title><rect x="78.4408%" y="101" width="0.0424%" height="15" fill="rgb(216,99,12)" fg:x="18483" fg:w="10"/><text x="78.6908%" y="111.50"></text></g><g><title>alloc_pages_mpol (1,145 samples, 4.86%)</title><rect x="73.6451%" y="117" width="4.8593%" height="15" fill="rgb(226,22,26)" fg:x="17353" fg:w="1145"/><text x="73.8951%" y="127.50">alloc_..</text></g><g><title>srso_safe_ret (4 samples, 0.02%)</title><rect x="78.4875%" y="101" width="0.0170%" height="15" fill="rgb(217,163,10)" fg:x="18494" fg:w="4"/><text x="78.7375%" y="111.50"></text></g><g><title>get_vma_policy (14 samples, 0.06%)</title><rect x="78.5044%" y="117" width="0.0594%" height="15" fill="rgb(213,25,53)" fg:x="18498" fg:w="14"/><text x="78.7544%" y="127.50"></text></g><g><title>alloc_anon_folio (1,230 samples, 5.22%)</title><rect x="73.3693%" y="149" width="5.2200%" height="15" fill="rgb(252,105,26)" fg:x="17288" fg:w="1230"/><text x="73.6193%" y="159.50">alloc_..</text></g><g><title>vma_alloc_folio (1,200 samples, 5.09%)</title><rect x="73.4966%" y="133" width="5.0927%" height="15" fill="rgb(220,39,43)" fg:x="17318" fg:w="1200"/><text x="73.7466%" y="143.50">vma_al..</text></g><g><title>srso_safe_ret (5 samples, 0.02%)</title><rect x="78.5681%" y="117" width="0.0212%" height="15" fill="rgb(229,68,48)" fg:x="18513" fg:w="5"/><text x="78.8181%" y="127.50"></text></g><g><title>__x86_indirect_thunk_r14 (5 samples, 0.02%)</title><rect x="78.7124%" y="117" width="0.0212%" height="15" fill="rgb(252,8,32)" fg:x="18547" fg:w="5"/><text x="78.9624%" y="127.50"></text></g><g><title>__rcu_read_unlock (6 samples, 0.03%)</title><rect x="78.8821%" y="101" width="0.0255%" height="15" fill="rgb(223,20,43)" fg:x="18587" fg:w="6"/><text x="79.1321%" y="111.50"></text></g><g><title>folio_mapping (13 samples, 0.06%)</title><rect x="78.9203%" y="101" width="0.0552%" height="15" fill="rgb(229,81,49)" fg:x="18596" fg:w="13"/><text x="79.1703%" y="111.50"></text></g><g><title>__mod_memcg_lruvec_state (43 samples, 0.18%)</title><rect x="79.7479%" y="53" width="0.1825%" height="15" fill="rgb(236,28,36)" fg:x="18791" fg:w="43"/><text x="79.9979%" y="63.50"></text></g><g><title>cgroup_rstat_updated (5 samples, 0.02%)</title><rect x="79.9092%" y="37" width="0.0212%" height="15" fill="rgb(249,185,26)" fg:x="18829" fg:w="5"/><text x="80.1592%" y="47.50"></text></g><g><title>__mod_node_page_state (5 samples, 0.02%)</title><rect x="79.9304%" y="53" width="0.0212%" height="15" fill="rgb(249,174,33)" fg:x="18834" fg:w="5"/><text x="80.1804%" y="63.50"></text></g><g><title>__mod_lruvec_state (71 samples, 0.30%)</title><rect x="79.6588%" y="69" width="0.3013%" height="15" fill="rgb(233,201,37)" fg:x="18770" fg:w="71"/><text x="79.9088%" y="79.50"></text></g><g><title>__mod_memcg_lruvec_state (5 samples, 0.02%)</title><rect x="79.9601%" y="69" width="0.0212%" height="15" fill="rgb(221,78,26)" fg:x="18841" fg:w="5"/><text x="80.2101%" y="79.50"></text></g><g><title>lru_add_fn (242 samples, 1.03%)</title><rect x="78.9755%" y="101" width="1.0270%" height="15" fill="rgb(250,127,30)" fg:x="18609" fg:w="242"/><text x="79.2255%" y="111.50"></text></g><g><title>lru_gen_add_folio (164 samples, 0.70%)</title><rect x="79.3065%" y="85" width="0.6960%" height="15" fill="rgb(230,49,44)" fg:x="18687" fg:w="164"/><text x="79.5565%" y="95.50"></text></g><g><title>__mod_zone_page_state (5 samples, 0.02%)</title><rect x="79.9813%" y="69" width="0.0212%" height="15" fill="rgb(229,67,23)" fg:x="18846" fg:w="5"/><text x="80.2313%" y="79.50"></text></g><g><title>release_pages (11 samples, 0.05%)</title><rect x="80.0110%" y="101" width="0.0467%" height="15" fill="rgb(249,83,47)" fg:x="18853" fg:w="11"/><text x="80.2610%" y="111.50"></text></g><g><title>folio_batch_move_lru (319 samples, 1.35%)</title><rect x="78.7336%" y="117" width="1.3538%" height="15" fill="rgb(215,43,3)" fg:x="18552" fg:w="319"/><text x="78.9836%" y="127.50"></text></g><g><title>srso_safe_ret (7 samples, 0.03%)</title><rect x="80.0577%" y="101" width="0.0297%" height="15" fill="rgb(238,154,13)" fg:x="18864" fg:w="7"/><text x="80.3077%" y="111.50"></text></g><g><title>lru_add_fn (16 samples, 0.07%)</title><rect x="80.0874%" y="117" width="0.0679%" height="15" fill="rgb(219,56,2)" fg:x="18871" fg:w="16"/><text x="80.3374%" y="127.50"></text></g><g><title>folio_add_lru_vma (370 samples, 1.57%)</title><rect x="78.5978%" y="149" width="1.5703%" height="15" fill="rgb(233,0,4)" fg:x="18520" fg:w="370"/><text x="78.8478%" y="159.50"></text></g><g><title>folio_add_lru (370 samples, 1.57%)</title><rect x="78.5978%" y="133" width="1.5703%" height="15" fill="rgb(235,30,7)" fg:x="18520" fg:w="370"/><text x="78.8478%" y="143.50"></text></g><g><title>__mod_memcg_lruvec_state (46 samples, 0.20%)</title><rect x="80.4651%" y="101" width="0.1952%" height="15" fill="rgb(250,79,13)" fg:x="18960" fg:w="46"/><text x="80.7151%" y="111.50"></text></g><g><title>cgroup_rstat_updated (8 samples, 0.03%)</title><rect x="80.6264%" y="85" width="0.0340%" height="15" fill="rgb(211,146,34)" fg:x="18998" fg:w="8"/><text x="80.8764%" y="95.50"></text></g><g><title>__mod_node_page_state (7 samples, 0.03%)</title><rect x="80.6604%" y="101" width="0.0297%" height="15" fill="rgb(228,22,38)" fg:x="19006" fg:w="7"/><text x="80.9104%" y="111.50"></text></g><g><title>__mod_lruvec_state (71 samples, 0.30%)</title><rect x="80.3930%" y="117" width="0.3013%" height="15" fill="rgb(235,168,5)" fg:x="18943" fg:w="71"/><text x="80.6430%" y="127.50"></text></g><g><title>__mod_memcg_lruvec_state (6 samples, 0.03%)</title><rect x="80.6943%" y="117" width="0.0255%" height="15" fill="rgb(221,155,16)" fg:x="19014" fg:w="6"/><text x="80.9443%" y="127.50"></text></g><g><title>__lruvec_stat_mod_folio (112 samples, 0.48%)</title><rect x="80.2572%" y="133" width="0.4753%" height="15" fill="rgb(215,215,53)" fg:x="18911" fg:w="112"/><text x="80.5072%" y="143.50"></text></g><g><title>__mod_node_page_state (3 samples, 0.01%)</title><rect x="80.7198%" y="117" width="0.0127%" height="15" fill="rgb(223,4,10)" fg:x="19020" fg:w="3"/><text x="80.9698%" y="127.50"></text></g><g><title>__rcu_read_unlock (21 samples, 0.09%)</title><rect x="80.7325%" y="133" width="0.0891%" height="15" fill="rgb(234,103,6)" fg:x="19023" fg:w="21"/><text x="80.9825%" y="143.50"></text></g><g><title>folio_add_new_anon_rmap (157 samples, 0.67%)</title><rect x="80.1681%" y="149" width="0.6663%" height="15" fill="rgb(227,97,0)" fg:x="18890" fg:w="157"/><text x="80.4181%" y="159.50"></text></g><g><title>get_mem_cgroup_from_mm (3 samples, 0.01%)</title><rect x="80.8344%" y="149" width="0.0127%" height="15" fill="rgb(234,150,53)" fg:x="19047" fg:w="3"/><text x="81.0844%" y="159.50"></text></g><g><title>mem_cgroup_commit_charge (14 samples, 0.06%)</title><rect x="80.8471%" y="149" width="0.0594%" height="15" fill="rgb(228,201,54)" fg:x="19050" fg:w="14"/><text x="81.0971%" y="159.50"></text></g><g><title>native_set_pte (4 samples, 0.02%)</title><rect x="80.9065%" y="149" width="0.0170%" height="15" fill="rgb(222,22,37)" fg:x="19064" fg:w="4"/><text x="81.1565%" y="159.50"></text></g><g><title>percpu_counter_add_batch (13 samples, 0.06%)</title><rect x="80.9235%" y="149" width="0.0552%" height="15" fill="rgb(237,53,32)" fg:x="19068" fg:w="13"/><text x="81.1735%" y="159.50"></text></g><g><title>pfn_pte (3 samples, 0.01%)</title><rect x="80.9787%" y="149" width="0.0127%" height="15" fill="rgb(233,25,53)" fg:x="19081" fg:w="3"/><text x="81.2287%" y="159.50"></text></g><g><title>set_ptes.constprop.0 (12 samples, 0.05%)</title><rect x="80.9914%" y="149" width="0.0509%" height="15" fill="rgb(210,40,34)" fg:x="19084" fg:w="12"/><text x="81.2414%" y="159.50"></text></g><g><title>srso_safe_ret (16 samples, 0.07%)</title><rect x="81.0423%" y="149" width="0.0679%" height="15" fill="rgb(241,220,44)" fg:x="19096" fg:w="16"/><text x="81.2923%" y="159.50"></text></g><g><title>do_anonymous_page (2,633 samples, 11.17%)</title><rect x="69.9699%" y="165" width="11.1743%" height="15" fill="rgb(235,28,35)" fg:x="16487" fg:w="2633"/><text x="70.2199%" y="175.50">do_anonymous_page</text></g><g><title>try_charge_memcg (8 samples, 0.03%)</title><rect x="81.1102%" y="149" width="0.0340%" height="15" fill="rgb(210,56,17)" fg:x="19112" fg:w="8"/><text x="81.3602%" y="159.50"></text></g><g><title>folio_add_lru_vma (24 samples, 0.10%)</title><rect x="81.1442%" y="165" width="0.1019%" height="15" fill="rgb(224,130,29)" fg:x="19120" fg:w="24"/><text x="81.3942%" y="175.50"></text></g><g><title>folio_add_new_anon_rmap (14 samples, 0.06%)</title><rect x="81.2460%" y="165" width="0.0594%" height="15" fill="rgb(235,212,8)" fg:x="19144" fg:w="14"/><text x="81.4960%" y="175.50"></text></g><g><title>mksaveddirty_shift (6 samples, 0.03%)</title><rect x="81.3054%" y="165" width="0.0255%" height="15" fill="rgb(223,33,50)" fg:x="19158" fg:w="6"/><text x="81.5554%" y="175.50"></text></g><g><title>pfn_pte (7 samples, 0.03%)</title><rect x="81.3309%" y="165" width="0.0297%" height="15" fill="rgb(219,149,13)" fg:x="19164" fg:w="7"/><text x="81.5809%" y="175.50"></text></g><g><title>pte_mkwrite (8 samples, 0.03%)</title><rect x="81.3606%" y="165" width="0.0340%" height="15" fill="rgb(250,156,29)" fg:x="19171" fg:w="8"/><text x="81.6106%" y="175.50"></text></g><g><title>__pte_offset_map (27 samples, 0.11%)</title><rect x="81.5516%" y="149" width="0.1146%" height="15" fill="rgb(216,193,19)" fg:x="19216" fg:w="27"/><text x="81.8016%" y="159.50"></text></g><g><title>pte_offset_map_nolock (71 samples, 0.30%)</title><rect x="81.3946%" y="165" width="0.3013%" height="15" fill="rgb(216,135,14)" fg:x="19179" fg:w="71"/><text x="81.6446%" y="175.50"></text></g><g><title>__rcu_read_lock (7 samples, 0.03%)</title><rect x="81.6662%" y="149" width="0.0297%" height="15" fill="rgb(241,47,5)" fg:x="19243" fg:w="7"/><text x="81.9162%" y="159.50"></text></g><g><title>set_ptes.constprop.0 (3 samples, 0.01%)</title><rect x="81.6959%" y="165" width="0.0127%" height="15" fill="rgb(233,42,35)" fg:x="19250" fg:w="3"/><text x="81.9459%" y="175.50"></text></g><g><title>srso_return_thunk (5 samples, 0.02%)</title><rect x="81.7086%" y="165" width="0.0212%" height="15" fill="rgb(231,13,6)" fg:x="19253" fg:w="5"/><text x="81.9586%" y="175.50"></text></g><g><title>srso_safe_ret (25 samples, 0.11%)</title><rect x="81.7298%" y="165" width="0.1061%" height="15" fill="rgb(207,181,40)" fg:x="19258" fg:w="25"/><text x="81.9798%" y="175.50"></text></g><g><title>handle_pte_fault (2,884 samples, 12.24%)</title><rect x="69.6049%" y="181" width="12.2395%" height="15" fill="rgb(254,173,49)" fg:x="16401" fg:w="2884"/><text x="69.8549%" y="191.50">handle_pte_fault</text></g><g><title>__handle_mm_fault (3,078 samples, 13.06%)</title><rect x="68.7901%" y="197" width="13.0629%" height="15" fill="rgb(221,1,38)" fg:x="16209" fg:w="3078"/><text x="69.0401%" y="207.50">__handle_mm_fault</text></g><g><title>__count_memcg_events (31 samples, 0.13%)</title><rect x="81.9335%" y="181" width="0.1316%" height="15" fill="rgb(206,124,46)" fg:x="19306" fg:w="31"/><text x="82.1835%" y="191.50"></text></g><g><title>cgroup_rstat_updated (4 samples, 0.02%)</title><rect x="82.0481%" y="165" width="0.0170%" height="15" fill="rgb(249,21,11)" fg:x="19333" fg:w="4"/><text x="82.2981%" y="175.50"></text></g><g><title>count_memcg_events.constprop.0 (51 samples, 0.22%)</title><rect x="81.8529%" y="197" width="0.2164%" height="15" fill="rgb(222,201,40)" fg:x="19287" fg:w="51"/><text x="82.1029%" y="207.50"></text></g><g><title>pmd_val (17 samples, 0.07%)</title><rect x="82.0821%" y="197" width="0.0721%" height="15" fill="rgb(235,61,29)" fg:x="19341" fg:w="17"/><text x="82.3321%" y="207.50"></text></g><g><title>pud_val (20 samples, 0.08%)</title><rect x="82.1542%" y="197" width="0.0849%" height="15" fill="rgb(219,207,3)" fg:x="19358" fg:w="20"/><text x="82.4042%" y="207.50"></text></g><g><title>handle_mm_fault (3,256 samples, 13.82%)</title><rect x="68.4633%" y="213" width="13.8183%" height="15" fill="rgb(222,56,46)" fg:x="16132" fg:w="3256"/><text x="68.7133%" y="223.50">handle_mm_fault</text></g><g><title>srso_safe_ret (10 samples, 0.04%)</title><rect x="82.2391%" y="197" width="0.0424%" height="15" fill="rgb(239,76,54)" fg:x="19378" fg:w="10"/><text x="82.4891%" y="207.50"></text></g><g><title>lock_vma_under_rcu (104 samples, 0.44%)</title><rect x="82.2815%" y="213" width="0.4414%" height="15" fill="rgb(231,124,27)" fg:x="19388" fg:w="104"/><text x="82.5315%" y="223.50"></text></g><g><title>mas_walk (43 samples, 0.18%)</title><rect x="82.5404%" y="197" width="0.1825%" height="15" fill="rgb(249,195,6)" fg:x="19449" fg:w="43"/><text x="82.7904%" y="207.50"></text></g><g><title>mas_walk (15 samples, 0.06%)</title><rect x="82.7229%" y="213" width="0.0637%" height="15" fill="rgb(237,174,47)" fg:x="19492" fg:w="15"/><text x="82.9729%" y="223.50"></text></g><g><title>mem_cgroup_from_task (9 samples, 0.04%)</title><rect x="82.7866%" y="213" width="0.0382%" height="15" fill="rgb(206,201,31)" fg:x="19507" fg:w="9"/><text x="83.0366%" y="223.50"></text></g><g><title>srso_safe_ret (8 samples, 0.03%)</title><rect x="82.8248%" y="213" width="0.0340%" height="15" fill="rgb(231,57,52)" fg:x="19516" fg:w="8"/><text x="83.0748%" y="223.50"></text></g><g><title>do_user_addr_fault (3,533 samples, 14.99%)</title><rect x="67.8691%" y="229" width="14.9938%" height="15" fill="rgb(248,177,22)" fg:x="15992" fg:w="3533"/><text x="68.1191%" y="239.50">do_user_addr_fault</text></g><g><title>handle_mm_fault (8 samples, 0.03%)</title><rect x="82.8630%" y="229" width="0.0340%" height="15" fill="rgb(215,211,37)" fg:x="19525" fg:w="8"/><text x="83.1130%" y="239.50"></text></g><g><title>irqentry_enter (14 samples, 0.06%)</title><rect x="82.8969%" y="229" width="0.0594%" height="15" fill="rgb(241,128,51)" fg:x="19533" fg:w="14"/><text x="83.1469%" y="239.50"></text></g><g><title>fpregs_assert_state_consistent (3 samples, 0.01%)</title><rect x="82.9648%" y="213" width="0.0127%" height="15" fill="rgb(227,165,31)" fg:x="19549" fg:w="3"/><text x="83.2148%" y="223.50"></text></g><g><title>irqentry_exit_to_user_mode (55 samples, 0.23%)</title><rect x="82.9775%" y="213" width="0.2334%" height="15" fill="rgb(228,167,24)" fg:x="19552" fg:w="55"/><text x="83.2275%" y="223.50"></text></g><g><title>irqentry_exit (61 samples, 0.26%)</title><rect x="82.9563%" y="229" width="0.2589%" height="15" fill="rgb(228,143,12)" fg:x="19547" fg:w="61"/><text x="83.2063%" y="239.50"></text></g><g><title>irqentry_exit_to_user_mode (3 samples, 0.01%)</title><rect x="83.2152%" y="229" width="0.0127%" height="15" fill="rgb(249,149,8)" fg:x="19608" fg:w="3"/><text x="83.4652%" y="239.50"></text></g><g><title>srso_safe_ret (11 samples, 0.05%)</title><rect x="83.2279%" y="229" width="0.0467%" height="15" fill="rgb(243,35,44)" fg:x="19611" fg:w="11"/><text x="83.4779%" y="239.50"></text></g><g><title>exc_page_fault (3,725 samples, 15.81%)</title><rect x="67.4744%" y="245" width="15.8087%" height="15" fill="rgb(246,89,9)" fg:x="15899" fg:w="3725"/><text x="67.7244%" y="255.50">exc_page_fault</text></g><g><title>irqentry_enter (5 samples, 0.02%)</title><rect x="83.2831%" y="245" width="0.0212%" height="15" fill="rgb(233,213,13)" fg:x="19624" fg:w="5"/><text x="83.5331%" y="255.50"></text></g><g><title>irqentry_exit (11 samples, 0.05%)</title><rect x="83.3043%" y="245" width="0.0467%" height="15" fill="rgb(233,141,41)" fg:x="19629" fg:w="11"/><text x="83.5543%" y="255.50"></text></g><g><title>asm_exc_page_fault (4,013 samples, 17.03%)</title><rect x="66.3371%" y="261" width="17.0309%" height="15" fill="rgb(239,167,4)" fg:x="15631" fg:w="4013"/><text x="66.5871%" y="271.50">asm_exc_page_fault</text></g><g><title>srso_safe_ret (4 samples, 0.02%)</title><rect x="83.3510%" y="245" width="0.0170%" height="15" fill="rgb(209,217,16)" fg:x="19640" fg:w="4"/><text x="83.6010%" y="255.50"></text></g><g><title>error_entry (36 samples, 0.15%)</title><rect x="83.3680%" y="261" width="0.1528%" height="15" fill="rgb(219,88,35)" fg:x="19644" fg:w="36"/><text x="83.6180%" y="271.50"></text></g><g><title>error_return (20 samples, 0.08%)</title><rect x="83.5208%" y="261" width="0.0849%" height="15" fill="rgb(220,193,23)" fg:x="19680" fg:w="20"/><text x="83.7708%" y="271.50"></text></g><g><title>exc_page_fault (4 samples, 0.02%)</title><rect x="83.6057%" y="261" width="0.0170%" height="15" fill="rgb(230,90,52)" fg:x="19700" fg:w="4"/><text x="83.8557%" y="271.50"></text></g><g><title>srso_safe_ret (19 samples, 0.08%)</title><rect x="83.6311%" y="261" width="0.0806%" height="15" fill="rgb(252,106,19)" fg:x="19706" fg:w="19"/><text x="83.8811%" y="271.50"></text></g><g><title>[unknown] (19,760 samples, 83.86%)</title><rect x="0.0000%" y="293" width="83.8603%" height="15" fill="rgb(206,74,20)" fg:x="0" fg:w="19760"/><text x="0.2500%" y="303.50">[unknown]</text></g><g><title>memset (4,527 samples, 19.21%)</title><rect x="64.6480%" y="277" width="19.2123%" height="15" fill="rgb(230,138,44)" fg:x="15233" fg:w="4527"/><text x="64.8980%" y="287.50">memset</text></g><g><title>sync_regs (35 samples, 0.15%)</title><rect x="83.7118%" y="261" width="0.1485%" height="15" fill="rgb(235,182,43)" fg:x="19725" fg:w="35"/><text x="83.9618%" y="271.50"></text></g><g><title>__irqentry_text_end (5 samples, 0.02%)</title><rect x="88.6262%" y="277" width="0.0212%" height="15" fill="rgb(242,16,51)" fg:x="20883" fg:w="5"/><text x="88.8762%" y="287.50"></text></g><g><title>__rcu_read_unlock (4 samples, 0.02%)</title><rect x="88.9233%" y="229" width="0.0170%" height="15" fill="rgb(248,9,4)" fg:x="20953" fg:w="4"/><text x="89.1733%" y="239.50"></text></g><g><title>__rcu_read_unlock (6 samples, 0.03%)</title><rect x="89.2459%" y="149" width="0.0255%" height="15" fill="rgb(210,31,22)" fg:x="21029" fg:w="6"/><text x="89.4959%" y="159.50"></text></g><g><title>__pte_offset_map (3 samples, 0.01%)</title><rect x="89.8485%" y="117" width="0.0127%" height="15" fill="rgb(239,54,39)" fg:x="21171" fg:w="3"/><text x="90.0985%" y="127.50"></text></g><g><title>__pte_offset_map_lock (12 samples, 0.05%)</title><rect x="89.8145%" y="133" width="0.0509%" height="15" fill="rgb(230,99,41)" fg:x="21163" fg:w="12"/><text x="90.0645%" y="143.50"></text></g><g><title>_compound_head (4 samples, 0.02%)</title><rect x="89.8655%" y="133" width="0.0170%" height="15" fill="rgb(253,106,12)" fg:x="21175" fg:w="4"/><text x="90.1155%" y="143.50"></text></g><g><title>folio_add_file_rmap_ptes (6 samples, 0.03%)</title><rect x="89.9037%" y="133" width="0.0255%" height="15" fill="rgb(213,46,41)" fg:x="21184" fg:w="6"/><text x="90.1537%" y="143.50"></text></g><g><title>xas_descend (4 samples, 0.02%)</title><rect x="91.0283%" y="85" width="0.0170%" height="15" fill="rgb(215,133,35)" fg:x="21449" fg:w="4"/><text x="91.2783%" y="95.50"></text></g><g><title>next_uptodate_folio (266 samples, 1.13%)</title><rect x="89.9291%" y="133" width="1.1289%" height="15" fill="rgb(213,28,5)" fg:x="21190" fg:w="266"/><text x="90.1791%" y="143.50"></text></g><g><title>xas_find (30 samples, 0.13%)</title><rect x="90.9307%" y="117" width="0.1273%" height="15" fill="rgb(215,77,49)" fg:x="21426" fg:w="30"/><text x="91.1807%" y="127.50"></text></g><g><title>xas_load (24 samples, 0.10%)</title><rect x="90.9562%" y="101" width="0.1019%" height="15" fill="rgb(248,100,22)" fg:x="21432" fg:w="24"/><text x="91.2062%" y="111.50"></text></g><g><title>xas_start (3 samples, 0.01%)</title><rect x="91.0453%" y="85" width="0.0127%" height="15" fill="rgb(208,67,9)" fg:x="21453" fg:w="3"/><text x="91.2953%" y="95.50"></text></g><g><title>percpu_counter_add_batch (5 samples, 0.02%)</title><rect x="91.0580%" y="133" width="0.0212%" height="15" fill="rgb(219,133,21)" fg:x="21456" fg:w="5"/><text x="91.3080%" y="143.50"></text></g><g><title>folio_add_file_rmap_ptes (34 samples, 0.14%)</title><rect x="91.7370%" y="117" width="0.1443%" height="15" fill="rgb(246,46,29)" fg:x="21616" fg:w="34"/><text x="91.9870%" y="127.50"></text></g><g><title>native_set_pte (4 samples, 0.02%)</title><rect x="91.8813%" y="117" width="0.0170%" height="15" fill="rgb(246,185,52)" fg:x="21650" fg:w="4"/><text x="92.1313%" y="127.50"></text></g><g><title>percpu_counter_add_batch (30 samples, 0.13%)</title><rect x="91.8983%" y="117" width="0.1273%" height="15" fill="rgb(252,136,11)" fg:x="21654" fg:w="30"/><text x="92.1483%" y="127.50"></text></g><g><title>set_ptes.constprop.0 (47 samples, 0.20%)</title><rect x="92.0256%" y="117" width="0.1995%" height="15" fill="rgb(219,138,53)" fg:x="21684" fg:w="47"/><text x="92.2756%" y="127.50"></text></g><g><title>set_pte_range (279 samples, 1.18%)</title><rect x="91.0792%" y="133" width="1.1841%" height="15" fill="rgb(211,51,23)" fg:x="21461" fg:w="279"/><text x="91.3292%" y="143.50"></text></g><g><title>srso_safe_ret (9 samples, 0.04%)</title><rect x="92.2251%" y="117" width="0.0382%" height="15" fill="rgb(247,221,28)" fg:x="21731" fg:w="9"/><text x="92.4751%" y="127.50"></text></g><g><title>set_ptes.constprop.0 (5 samples, 0.02%)</title><rect x="92.2633%" y="133" width="0.0212%" height="15" fill="rgb(251,222,45)" fg:x="21740" fg:w="5"/><text x="92.5133%" y="143.50"></text></g><g><title>srso_return_thunk (3 samples, 0.01%)</title><rect x="92.2845%" y="133" width="0.0127%" height="15" fill="rgb(217,162,53)" fg:x="21745" fg:w="3"/><text x="92.5345%" y="143.50"></text></g><g><title>srso_safe_ret (33 samples, 0.14%)</title><rect x="92.2972%" y="133" width="0.1401%" height="15" fill="rgb(229,93,14)" fg:x="21748" fg:w="33"/><text x="92.5472%" y="143.50"></text></g><g><title>filemap_map_pages (745 samples, 3.16%)</title><rect x="89.2798%" y="149" width="3.1617%" height="15" fill="rgb(209,67,49)" fg:x="21037" fg:w="745"/><text x="89.5298%" y="159.50">fil..</text></g><g><title>__memcg_kmem_charge_page (3 samples, 0.01%)</title><rect x="92.4543%" y="85" width="0.0127%" height="15" fill="rgb(213,87,29)" fg:x="21785" fg:w="3"/><text x="92.7043%" y="95.50"></text></g><g><title>clear_page_rep (7 samples, 0.03%)</title><rect x="92.4670%" y="69" width="0.0297%" height="15" fill="rgb(205,151,52)" fg:x="21788" fg:w="7"/><text x="92.7170%" y="79.50"></text></g><g><title>get_page_from_freelist (9 samples, 0.04%)</title><rect x="92.4670%" y="85" width="0.0382%" height="15" fill="rgb(253,215,39)" fg:x="21788" fg:w="9"/><text x="92.7170%" y="95.50"></text></g><g><title>alloc_pages_mpol (13 samples, 0.06%)</title><rect x="92.4543%" y="117" width="0.0552%" height="15" fill="rgb(221,220,41)" fg:x="21785" fg:w="13"/><text x="92.7043%" y="127.50"></text></g><g><title>__alloc_pages (13 samples, 0.06%)</title><rect x="92.4543%" y="101" width="0.0552%" height="15" fill="rgb(218,133,21)" fg:x="21785" fg:w="13"/><text x="92.7043%" y="111.50"></text></g><g><title>pte_alloc_one (15 samples, 0.06%)</title><rect x="92.4500%" y="149" width="0.0637%" height="15" fill="rgb(221,193,43)" fg:x="21784" fg:w="15"/><text x="92.7000%" y="159.50"></text></g><g><title>alloc_pages (15 samples, 0.06%)</title><rect x="92.4500%" y="133" width="0.0637%" height="15" fill="rgb(240,128,52)" fg:x="21784" fg:w="15"/><text x="92.7000%" y="143.50"></text></g><g><title>set_pte_range (13 samples, 0.06%)</title><rect x="92.5137%" y="149" width="0.0552%" height="15" fill="rgb(253,114,12)" fg:x="21799" fg:w="13"/><text x="92.7637%" y="159.50"></text></g><g><title>do_read_fault (794 samples, 3.37%)</title><rect x="89.2077%" y="165" width="3.3697%" height="15" fill="rgb(215,223,47)" fg:x="21020" fg:w="794"/><text x="89.4577%" y="175.50">do_..</text></g><g><title>do_fault (802 samples, 3.40%)</title><rect x="89.2034%" y="181" width="3.4036%" height="15" fill="rgb(248,225,23)" fg:x="21019" fg:w="802"/><text x="89.4534%" y="191.50">do_..</text></g><g><title>filemap_map_pages (7 samples, 0.03%)</title><rect x="92.5773%" y="165" width="0.0297%" height="15" fill="rgb(250,108,0)" fg:x="21814" fg:w="7"/><text x="92.8273%" y="175.50"></text></g><g><title>pte_offset_map_nolock (7 samples, 0.03%)</title><rect x="92.6071%" y="181" width="0.0297%" height="15" fill="rgb(228,208,7)" fg:x="21821" fg:w="7"/><text x="92.8571%" y="191.50"></text></g><g><title>__pte_offset_map (5 samples, 0.02%)</title><rect x="92.6155%" y="165" width="0.0212%" height="15" fill="rgb(244,45,10)" fg:x="21823" fg:w="5"/><text x="92.8655%" y="175.50"></text></g><g><title>handle_pte_fault (818 samples, 3.47%)</title><rect x="89.1695%" y="197" width="3.4715%" height="15" fill="rgb(207,125,25)" fg:x="21011" fg:w="818"/><text x="89.4195%" y="207.50">han..</text></g><g><title>__handle_mm_fault (855 samples, 3.63%)</title><rect x="89.0209%" y="213" width="3.6286%" height="15" fill="rgb(210,195,18)" fg:x="20976" fg:w="855"/><text x="89.2709%" y="223.50">__ha..</text></g><g><title>count_memcg_events.constprop.0 (18 samples, 0.08%)</title><rect x="92.6495%" y="213" width="0.0764%" height="15" fill="rgb(249,80,12)" fg:x="21831" fg:w="18"/><text x="92.8995%" y="223.50"></text></g><g><title>__count_memcg_events (12 samples, 0.05%)</title><rect x="92.6750%" y="197" width="0.0509%" height="15" fill="rgb(221,65,9)" fg:x="21837" fg:w="12"/><text x="92.9250%" y="207.50"></text></g><g><title>pmd_val (3 samples, 0.01%)</title><rect x="92.7429%" y="213" width="0.0127%" height="15" fill="rgb(235,49,36)" fg:x="21853" fg:w="3"/><text x="92.9929%" y="223.50"></text></g><g><title>pud_val (4 samples, 0.02%)</title><rect x="92.7556%" y="213" width="0.0170%" height="15" fill="rgb(225,32,20)" fg:x="21856" fg:w="4"/><text x="93.0056%" y="223.50"></text></g><g><title>srso_safe_ret (5 samples, 0.02%)</title><rect x="92.7726%" y="213" width="0.0212%" height="15" fill="rgb(215,141,46)" fg:x="21860" fg:w="5"/><text x="93.0226%" y="223.50"></text></g><g><title>handle_mm_fault (906 samples, 3.85%)</title><rect x="88.9530%" y="229" width="3.8450%" height="15" fill="rgb(250,160,47)" fg:x="20960" fg:w="906"/><text x="89.2030%" y="239.50">hand..</text></g><g><title>lock_vma_under_rcu (20 samples, 0.08%)</title><rect x="92.7980%" y="229" width="0.0849%" height="15" fill="rgb(216,222,40)" fg:x="21866" fg:w="20"/><text x="93.0480%" y="239.50"></text></g><g><title>mas_walk (8 samples, 0.03%)</title><rect x="92.8490%" y="213" width="0.0340%" height="15" fill="rgb(234,217,39)" fg:x="21878" fg:w="8"/><text x="93.0990%" y="223.50"></text></g><g><title>do_user_addr_fault (948 samples, 4.02%)</title><rect x="88.8766%" y="245" width="4.0233%" height="15" fill="rgb(207,178,40)" fg:x="20942" fg:w="948"/><text x="89.1266%" y="255.50">do_u..</text></g><g><title>irqentry_exit_to_user_mode (14 samples, 0.06%)</title><rect x="92.9126%" y="229" width="0.0594%" height="15" fill="rgb(221,136,13)" fg:x="21893" fg:w="14"/><text x="93.1626%" y="239.50"></text></g><g><title>irqentry_exit (17 samples, 0.07%)</title><rect x="92.9084%" y="245" width="0.0721%" height="15" fill="rgb(249,199,10)" fg:x="21892" fg:w="17"/><text x="93.1584%" y="255.50"></text></g><g><title>exc_page_fault (986 samples, 4.18%)</title><rect x="88.8002%" y="261" width="4.1845%" height="15" fill="rgb(249,222,13)" fg:x="20924" fg:w="986"/><text x="89.0502%" y="271.50">exc_p..</text></g><g><title>asm_exc_page_fault (1,024 samples, 4.35%)</title><rect x="88.6475%" y="277" width="4.3458%" height="15" fill="rgb(244,185,38)" fg:x="20888" fg:w="1024"/><text x="88.8975%" y="287.50">asm_e..</text></g><g><title>__sysvec_apic_timer_interrupt (3 samples, 0.01%)</title><rect x="92.9933%" y="245" width="0.0127%" height="15" fill="rgb(236,202,9)" fg:x="21912" fg:w="3"/><text x="93.2433%" y="255.50"></text></g><g><title>hrtimer_interrupt (3 samples, 0.01%)</title><rect x="92.9933%" y="229" width="0.0127%" height="15" fill="rgb(250,229,37)" fg:x="21912" fg:w="3"/><text x="93.2433%" y="239.50"></text></g><g><title>__hrtimer_run_queues (3 samples, 0.01%)</title><rect x="92.9933%" y="213" width="0.0127%" height="15" fill="rgb(206,174,23)" fg:x="21912" fg:w="3"/><text x="93.2433%" y="223.50"></text></g><g><title>tick_nohz_highres_handler (3 samples, 0.01%)</title><rect x="92.9933%" y="197" width="0.0127%" height="15" fill="rgb(211,33,43)" fg:x="21912" fg:w="3"/><text x="93.2433%" y="207.50"></text></g><g><title>tick_sched_handle (3 samples, 0.01%)</title><rect x="92.9933%" y="181" width="0.0127%" height="15" fill="rgb(245,58,50)" fg:x="21912" fg:w="3"/><text x="93.2433%" y="191.50"></text></g><g><title>update_process_times (3 samples, 0.01%)</title><rect x="92.9933%" y="165" width="0.0127%" height="15" fill="rgb(244,68,36)" fg:x="21912" fg:w="3"/><text x="93.2433%" y="175.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (7 samples, 0.03%)</title><rect x="92.9933%" y="277" width="0.0297%" height="15" fill="rgb(232,229,15)" fg:x="21912" fg:w="7"/><text x="93.2433%" y="287.50"></text></g><g><title>sysvec_apic_timer_interrupt (7 samples, 0.03%)</title><rect x="92.9933%" y="261" width="0.0297%" height="15" fill="rgb(254,30,23)" fg:x="21912" fg:w="7"/><text x="93.2433%" y="271.50"></text></g><g><title>irqentry_exit (3 samples, 0.01%)</title><rect x="93.0102%" y="245" width="0.0127%" height="15" fill="rgb(235,160,14)" fg:x="21916" fg:w="3"/><text x="93.2602%" y="255.50"></text></g><g><title>irqentry_exit_to_user_mode (3 samples, 0.01%)</title><rect x="93.0102%" y="229" width="0.0127%" height="15" fill="rgb(212,155,44)" fg:x="21916" fg:w="3"/><text x="93.2602%" y="239.50"></text></g><g><title>error_entry (12 samples, 0.05%)</title><rect x="93.0230%" y="277" width="0.0509%" height="15" fill="rgb(226,2,50)" fg:x="21919" fg:w="12"/><text x="93.2730%" y="287.50"></text></g><g><title>error_return (3 samples, 0.01%)</title><rect x="93.0739%" y="277" width="0.0127%" height="15" fill="rgb(234,177,6)" fg:x="21931" fg:w="3"/><text x="93.3239%" y="287.50"></text></g><g><title>srso_safe_ret (3 samples, 0.01%)</title><rect x="93.0909%" y="277" width="0.0127%" height="15" fill="rgb(217,24,9)" fg:x="21935" fg:w="3"/><text x="93.3409%" y="287.50"></text></g><g><title>accountsdb.accounts_file.AccountFile.readAccount (2,183 samples, 9.26%)</title><rect x="83.8773%" y="293" width="9.2645%" height="15" fill="rgb(220,13,46)" fg:x="19764" fg:w="2183"/><text x="84.1273%" y="303.50">accountsdb.ac..</text></g><g><title>sync_regs (9 samples, 0.04%)</title><rect x="93.1036%" y="277" width="0.0382%" height="15" fill="rgb(239,221,27)" fg:x="21938" fg:w="9"/><text x="93.3536%" y="287.50"></text></g><g><title>__pte_offset_map_lock (3 samples, 0.01%)</title><rect x="99.3761%" y="133" width="0.0127%" height="15" fill="rgb(222,198,25)" fg:x="23416" fg:w="3"/><text x="99.6261%" y="143.50"></text></g><g><title>next_uptodate_folio (47 samples, 0.20%)</title><rect x="99.3931%" y="133" width="0.1995%" height="15" fill="rgb(211,99,13)" fg:x="23420" fg:w="47"/><text x="99.6431%" y="143.50"></text></g><g><title>xas_find (6 samples, 0.03%)</title><rect x="99.5671%" y="117" width="0.0255%" height="15" fill="rgb(232,111,31)" fg:x="23461" fg:w="6"/><text x="99.8171%" y="127.50"></text></g><g><title>xas_load (5 samples, 0.02%)</title><rect x="99.5714%" y="101" width="0.0212%" height="15" fill="rgb(245,82,37)" fg:x="23462" fg:w="5"/><text x="99.8214%" y="111.50"></text></g><g><title>percpu_counter_add_batch (6 samples, 0.03%)</title><rect x="99.7157%" y="117" width="0.0255%" height="15" fill="rgb(227,149,46)" fg:x="23496" fg:w="6"/><text x="99.9657%" y="127.50"></text></g><g><title>set_pte_range (40 samples, 0.17%)</title><rect x="99.5926%" y="133" width="0.1698%" height="15" fill="rgb(218,36,50)" fg:x="23467" fg:w="40"/><text x="99.8426%" y="143.50"></text></g><g><title>set_ptes.constprop.0 (5 samples, 0.02%)</title><rect x="99.7411%" y="117" width="0.0212%" height="15" fill="rgb(226,80,48)" fg:x="23502" fg:w="5"/><text x="99.9911%" y="127.50"></text></g><g><title>filemap_map_pages (115 samples, 0.49%)</title><rect x="99.2955%" y="149" width="0.4881%" height="15" fill="rgb(238,224,15)" fg:x="23397" fg:w="115"/><text x="99.5455%" y="159.50"></text></g><g><title>srso_safe_ret (5 samples, 0.02%)</title><rect x="99.7623%" y="133" width="0.0212%" height="15" fill="rgb(241,136,10)" fg:x="23507" fg:w="5"/><text x="100.0123%" y="143.50"></text></g><g><title>do_read_fault (122 samples, 0.52%)</title><rect x="99.2828%" y="165" width="0.5178%" height="15" fill="rgb(208,32,45)" fg:x="23394" fg:w="122"/><text x="99.5328%" y="175.50"></text></g><g><title>do_fault (125 samples, 0.53%)</title><rect x="99.2743%" y="181" width="0.5305%" height="15" fill="rgb(207,135,9)" fg:x="23392" fg:w="125"/><text x="99.5243%" y="191.50"></text></g><g><title>__handle_mm_fault (139 samples, 0.59%)</title><rect x="99.2191%" y="213" width="0.5899%" height="15" fill="rgb(206,86,44)" fg:x="23379" fg:w="139"/><text x="99.4691%" y="223.50"></text></g><g><title>handle_pte_fault (130 samples, 0.55%)</title><rect x="99.2573%" y="197" width="0.5517%" height="15" fill="rgb(245,177,15)" fg:x="23388" fg:w="130"/><text x="99.5073%" y="207.50"></text></g><g><title>count_memcg_events.constprop.0 (4 samples, 0.02%)</title><rect x="99.8090%" y="213" width="0.0170%" height="15" fill="rgb(206,64,50)" fg:x="23518" fg:w="4"/><text x="100.0590%" y="223.50"></text></g><g><title>__count_memcg_events (3 samples, 0.01%)</title><rect x="99.8133%" y="197" width="0.0127%" height="15" fill="rgb(234,36,40)" fg:x="23519" fg:w="3"/><text x="100.0633%" y="207.50"></text></g><g><title>handle_mm_fault (149 samples, 0.63%)</title><rect x="99.2021%" y="229" width="0.6323%" height="15" fill="rgb(213,64,8)" fg:x="23375" fg:w="149"/><text x="99.4521%" y="239.50"></text></g><g><title>lock_vma_under_rcu (4 samples, 0.02%)</title><rect x="99.8345%" y="229" width="0.0170%" height="15" fill="rgb(210,75,36)" fg:x="23524" fg:w="4"/><text x="100.0845%" y="239.50"></text></g><g><title>do_user_addr_fault (163 samples, 0.69%)</title><rect x="99.1767%" y="245" width="0.6918%" height="15" fill="rgb(229,88,21)" fg:x="23369" fg:w="163"/><text x="99.4267%" y="255.50"></text></g><g><title>mem_cgroup_from_task (3 samples, 0.01%)</title><rect x="99.8557%" y="229" width="0.0127%" height="15" fill="rgb(252,204,47)" fg:x="23529" fg:w="3"/><text x="100.1057%" y="239.50"></text></g><g><title>exc_page_fault (169 samples, 0.72%)</title><rect x="99.1639%" y="261" width="0.7172%" height="15" fill="rgb(208,77,27)" fg:x="23366" fg:w="169"/><text x="99.4139%" y="271.50"></text></g><g><title>asm_exc_page_fault (182 samples, 0.77%)</title><rect x="99.1173%" y="277" width="0.7724%" height="15" fill="rgb(221,76,26)" fg:x="23355" fg:w="182"/><text x="99.3673%" y="287.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (5 samples, 0.02%)</title><rect x="99.8897%" y="277" width="0.0212%" height="15" fill="rgb(225,139,18)" fg:x="23537" fg:w="5"/><text x="100.1397%" y="287.50"></text></g><g><title>sysvec_apic_timer_interrupt (5 samples, 0.02%)</title><rect x="99.8897%" y="261" width="0.0212%" height="15" fill="rgb(230,137,11)" fg:x="23537" fg:w="5"/><text x="100.1397%" y="271.50"></text></g><g><title>__sysvec_apic_timer_interrupt (4 samples, 0.02%)</title><rect x="99.8939%" y="245" width="0.0170%" height="15" fill="rgb(212,28,1)" fg:x="23538" fg:w="4"/><text x="100.1439%" y="255.50"></text></g><g><title>hrtimer_interrupt (4 samples, 0.02%)</title><rect x="99.8939%" y="229" width="0.0170%" height="15" fill="rgb(248,164,17)" fg:x="23538" fg:w="4"/><text x="100.1439%" y="239.50"></text></g><g><title>__hrtimer_run_queues (3 samples, 0.01%)</title><rect x="99.8981%" y="213" width="0.0127%" height="15" fill="rgb(222,171,42)" fg:x="23539" fg:w="3"/><text x="100.1481%" y="223.50"></text></g><g><title>accountsdb.index.AccountIndex.validateAccountFile (1,599 samples, 6.79%)</title><rect x="93.1418%" y="293" width="6.7861%" height="15" fill="rgb(243,84,45)" fg:x="21947" fg:w="1599"/><text x="93.3918%" y="303.50">accountsd..</text></g><g><title>syscall_exit_to_user_mode (3 samples, 0.01%)</title><rect x="99.9406%" y="245" width="0.0127%" height="15" fill="rgb(252,49,23)" fg:x="23549" fg:w="3"/><text x="100.1906%" y="255.50"></text></g><g><title>__rseq_handle_notify_resume (3 samples, 0.01%)</title><rect x="99.9406%" y="229" width="0.0127%" height="15" fill="rgb(215,19,7)" fg:x="23549" fg:w="3"/><text x="100.1906%" y="239.50"></text></g><g><title>rseq_ip_fixup (3 samples, 0.01%)</title><rect x="99.9406%" y="213" width="0.0127%" height="15" fill="rgb(238,81,41)" fg:x="23549" fg:w="3"/><text x="100.1906%" y="223.50"></text></g><g><title>__get_user_8 (3 samples, 0.01%)</title><rect x="99.9406%" y="197" width="0.0127%" height="15" fill="rgb(210,199,37)" fg:x="23549" fg:w="3"/><text x="100.1906%" y="207.50"></text></g><g><title>clock_nanosleep@GLIBC_2.2.5 (9 samples, 0.04%)</title><rect x="99.9363%" y="293" width="0.0382%" height="15" fill="rgb(244,192,49)" fg:x="23548" fg:w="9"/><text x="100.1863%" y="303.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (9 samples, 0.04%)</title><rect x="99.9363%" y="277" width="0.0382%" height="15" fill="rgb(226,211,11)" fg:x="23548" fg:w="9"/><text x="100.1863%" y="287.50"></text></g><g><title>do_syscall_64 (9 samples, 0.04%)</title><rect x="99.9363%" y="261" width="0.0382%" height="15" fill="rgb(236,162,54)" fg:x="23548" fg:w="9"/><text x="100.1863%" y="271.50"></text></g><g><title>x64_sys_call (5 samples, 0.02%)</title><rect x="99.9533%" y="245" width="0.0212%" height="15" fill="rgb(220,229,9)" fg:x="23552" fg:w="5"/><text x="100.2033%" y="255.50"></text></g><g><title>__x64_sys_clock_nanosleep (5 samples, 0.02%)</title><rect x="99.9533%" y="229" width="0.0212%" height="15" fill="rgb(250,87,22)" fg:x="23552" fg:w="5"/><text x="100.2033%" y="239.50"></text></g><g><title>common_nsleep (5 samples, 0.02%)</title><rect x="99.9533%" y="213" width="0.0212%" height="15" fill="rgb(239,43,17)" fg:x="23552" fg:w="5"/><text x="100.2033%" y="223.50"></text></g><g><title>hrtimer_nanosleep (5 samples, 0.02%)</title><rect x="99.9533%" y="197" width="0.0212%" height="15" fill="rgb(231,177,25)" fg:x="23552" fg:w="5"/><text x="100.2033%" y="207.50"></text></g><g><title>do_nanosleep (4 samples, 0.02%)</title><rect x="99.9576%" y="181" width="0.0170%" height="15" fill="rgb(219,179,1)" fg:x="23553" fg:w="4"/><text x="100.2076%" y="191.50"></text></g><g><title>schedule (3 samples, 0.01%)</title><rect x="99.9618%" y="165" width="0.0127%" height="15" fill="rgb(238,219,53)" fg:x="23554" fg:w="3"/><text x="100.2118%" y="175.50"></text></g><g><title>__schedule (3 samples, 0.01%)</title><rect x="99.9618%" y="149" width="0.0127%" height="15" fill="rgb(232,167,36)" fg:x="23554" fg:w="3"/><text x="100.2118%" y="159.50"></text></g><g><title>finish_task_switch.isra.0 (3 samples, 0.01%)</title><rect x="99.9618%" y="133" width="0.0127%" height="15" fill="rgb(244,19,51)" fg:x="23554" fg:w="3"/><text x="100.2118%" y="143.50"></text></g><g><title>handle_mm_fault (4 samples, 0.02%)</title><rect x="99.9745%" y="229" width="0.0170%" height="15" fill="rgb(224,6,22)" fg:x="23557" fg:w="4"/><text x="100.2245%" y="239.50"></text></g><g><title>__handle_mm_fault (4 samples, 0.02%)</title><rect x="99.9745%" y="213" width="0.0170%" height="15" fill="rgb(224,145,5)" fg:x="23557" fg:w="4"/><text x="100.2245%" y="223.50"></text></g><g><title>handle_pte_fault (3 samples, 0.01%)</title><rect x="99.9788%" y="197" width="0.0127%" height="15" fill="rgb(234,130,49)" fg:x="23558" fg:w="3"/><text x="100.2288%" y="207.50"></text></g><g><title>do_anonymous_page (3 samples, 0.01%)</title><rect x="99.9788%" y="181" width="0.0127%" height="15" fill="rgb(254,6,2)" fg:x="23558" fg:w="3"/><text x="100.2288%" y="191.50"></text></g><g><title>all (23,563 samples, 100%)</title><rect x="0.0000%" y="325" width="100.0000%" height="15" fill="rgb(208,96,46)" fg:x="0" fg:w="23563"/><text x="0.2500%" y="335.50"></text></g><g><title>benchmark (23,563 samples, 100.00%)</title><rect x="0.0000%" y="309" width="100.0000%" height="15" fill="rgb(239,3,39)" fg:x="0" fg:w="23563"/><text x="0.2500%" y="319.50">benchmark</text></g><g><title>memset (6 samples, 0.03%)</title><rect x="99.9745%" y="293" width="0.0255%" height="15" fill="rgb(233,210,1)" fg:x="23557" fg:w="6"/><text x="100.2245%" y="303.50"></text></g><g><title>asm_exc_page_fault (6 samples, 0.03%)</title><rect x="99.9745%" y="277" width="0.0255%" height="15" fill="rgb(244,137,37)" fg:x="23557" fg:w="6"/><text x="100.2245%" y="287.50"></text></g><g><title>exc_page_fault (6 samples, 0.03%)</title><rect x="99.9745%" y="261" width="0.0255%" height="15" fill="rgb(240,136,2)" fg:x="23557" fg:w="6"/><text x="100.2245%" y="271.50"></text></g><g><title>do_user_addr_fault (6 samples, 0.03%)</title><rect x="99.9745%" y="245" width="0.0255%" height="15" fill="rgb(239,18,37)" fg:x="23557" fg:w="6"/><text x="100.2245%" y="255.50"></text></g></svg></svg>