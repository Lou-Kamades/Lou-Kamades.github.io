<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="454" onload="init(evt)" viewBox="0 0 1200 454" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="454" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Sig Write, 1M Accounts, RAM Index</text><text id="details" fill="rgb(0,0,0)" x="10" y="437.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="437.00"> </text><svg id="frames" x="10" width="1180" total_samples="3098"><g><title>asm_exc_page_fault (1 samples, 0.03%)</title><rect x="4.0671%" y="341" width="0.0323%" height="15" fill="rgb(227,0,7)" fg:x="126" fg:w="1"/><text x="4.3171%" y="351.50"></text></g><g><title>exc_page_fault (1 samples, 0.03%)</title><rect x="4.0671%" y="325" width="0.0323%" height="15" fill="rgb(217,0,24)" fg:x="126" fg:w="1"/><text x="4.3171%" y="335.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.03%)</title><rect x="4.0671%" y="309" width="0.0323%" height="15" fill="rgb(221,193,54)" fg:x="126" fg:w="1"/><text x="4.3171%" y="319.50"></text></g><g><title>Thread.RwLock.DefaultRwLock.lock (128 samples, 4.13%)</title><rect x="0.0000%" y="357" width="4.1317%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="128"/><text x="0.2500%" y="367.50">Threa..</text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="4.0994%" y="341" width="0.0323%" height="15" fill="rgb(208,68,35)" fg:x="127" fg:w="1"/><text x="4.3494%" y="351.50"></text></g><g><title>asm_exc_page_fault (2 samples, 0.06%)</title><rect x="4.1640%" y="341" width="0.0646%" height="15" fill="rgb(232,128,0)" fg:x="129" fg:w="2"/><text x="4.4140%" y="351.50"></text></g><g><title>syscall_exit_to_user_mode (3 samples, 0.10%)</title><rect x="4.3577%" y="309" width="0.0968%" height="15" fill="rgb(207,160,47)" fg:x="135" fg:w="3"/><text x="4.6077%" y="319.50"></text></g><g><title>down_write_killable (1 samples, 0.03%)</title><rect x="4.4868%" y="261" width="0.0323%" height="15" fill="rgb(228,23,34)" fg:x="139" fg:w="1"/><text x="4.7368%" y="271.50"></text></g><g><title>cap_mmap_file (1 samples, 0.03%)</title><rect x="4.5836%" y="245" width="0.0323%" height="15" fill="rgb(218,30,26)" fg:x="142" fg:w="1"/><text x="4.8336%" y="255.50"></text></g><g><title>arch_get_unmapped_area_topdown (1 samples, 0.03%)</title><rect x="4.8418%" y="213" width="0.0323%" height="15" fill="rgb(220,122,19)" fg:x="150" fg:w="1"/><text x="5.0918%" y="223.50"></text></g><g><title>find_vma (6 samples, 0.19%)</title><rect x="5.0678%" y="181" width="0.1937%" height="15" fill="rgb(250,228,42)" fg:x="157" fg:w="6"/><text x="5.3178%" y="191.50"></text></g><g><title>mt_find (4 samples, 0.13%)</title><rect x="5.1323%" y="165" width="0.1291%" height="15" fill="rgb(240,193,28)" fg:x="159" fg:w="4"/><text x="5.3823%" y="175.50"></text></g><g><title>mas_next (1 samples, 0.03%)</title><rect x="5.2615%" y="181" width="0.0323%" height="15" fill="rgb(216,20,37)" fg:x="163" fg:w="1"/><text x="5.5115%" y="191.50"></text></g><g><title>mas_ascend (3 samples, 0.10%)</title><rect x="5.3583%" y="165" width="0.0968%" height="15" fill="rgb(206,188,39)" fg:x="166" fg:w="3"/><text x="5.6083%" y="175.50"></text></g><g><title>mas_data_end (1 samples, 0.03%)</title><rect x="5.4551%" y="165" width="0.0323%" height="15" fill="rgb(217,207,13)" fg:x="169" fg:w="1"/><text x="5.7051%" y="175.50"></text></g><g><title>mas_empty_area_rev (9 samples, 0.29%)</title><rect x="5.4874%" y="165" width="0.2905%" height="15" fill="rgb(231,73,38)" fg:x="170" fg:w="9"/><text x="5.7374%" y="175.50"></text></g><g><title>mas_rev_awalk (4 samples, 0.13%)</title><rect x="5.6488%" y="149" width="0.1291%" height="15" fill="rgb(225,20,46)" fg:x="175" fg:w="4"/><text x="5.8988%" y="159.50"></text></g><g><title>mas_next (1 samples, 0.03%)</title><rect x="5.7779%" y="165" width="0.0323%" height="15" fill="rgb(210,31,41)" fg:x="179" fg:w="1"/><text x="6.0279%" y="175.50"></text></g><g><title>mas_prev (2 samples, 0.06%)</title><rect x="5.8102%" y="165" width="0.0646%" height="15" fill="rgb(221,200,47)" fg:x="180" fg:w="2"/><text x="6.0602%" y="175.50"></text></g><g><title>get_unmapped_area (39 samples, 1.26%)</title><rect x="4.7450%" y="229" width="1.2589%" height="15" fill="rgb(226,26,5)" fg:x="147" fg:w="39"/><text x="4.9950%" y="239.50"></text></g><g><title>thp_get_unmapped_area (35 samples, 1.13%)</title><rect x="4.8741%" y="213" width="1.1298%" height="15" fill="rgb(249,33,26)" fg:x="151" fg:w="35"/><text x="5.1241%" y="223.50"></text></g><g><title>arch_get_unmapped_area_topdown (34 samples, 1.10%)</title><rect x="4.9064%" y="197" width="1.0975%" height="15" fill="rgb(235,183,28)" fg:x="152" fg:w="34"/><text x="5.1564%" y="207.50"></text></g><g><title>vm_unmapped_area (22 samples, 0.71%)</title><rect x="5.2937%" y="181" width="0.7101%" height="15" fill="rgb(221,5,38)" fg:x="164" fg:w="22"/><text x="5.5437%" y="191.50"></text></g><g><title>mas_rev_awalk (4 samples, 0.13%)</title><rect x="5.8748%" y="165" width="0.1291%" height="15" fill="rgb(247,18,42)" fg:x="182" fg:w="4"/><text x="6.1248%" y="175.50"></text></g><g><title>anon_vma_name (1 samples, 0.03%)</title><rect x="6.1975%" y="213" width="0.0323%" height="15" fill="rgb(241,131,45)" fg:x="192" fg:w="1"/><text x="6.4475%" y="223.50"></text></g><g><title>can_vma_merge_before (3 samples, 0.10%)</title><rect x="6.2298%" y="213" width="0.0968%" height="15" fill="rgb(249,31,29)" fg:x="193" fg:w="3"/><text x="6.4798%" y="223.50"></text></g><g><title>do_vmi_munmap (3 samples, 0.10%)</title><rect x="6.3267%" y="213" width="0.0968%" height="15" fill="rgb(225,111,53)" fg:x="196" fg:w="3"/><text x="6.5767%" y="223.50"></text></g><g><title>mas_find (1 samples, 0.03%)</title><rect x="6.3912%" y="197" width="0.0323%" height="15" fill="rgb(238,160,17)" fg:x="198" fg:w="1"/><text x="6.6412%" y="207.50"></text></g><g><title>mas_find (3 samples, 0.10%)</title><rect x="6.4235%" y="213" width="0.0968%" height="15" fill="rgb(214,148,48)" fg:x="199" fg:w="3"/><text x="6.6735%" y="223.50"></text></g><g><title>mas_next_slot (2 samples, 0.06%)</title><rect x="6.4558%" y="197" width="0.0646%" height="15" fill="rgb(232,36,49)" fg:x="200" fg:w="2"/><text x="6.7058%" y="207.50"></text></g><g><title>mas_next_slot (1 samples, 0.03%)</title><rect x="6.5203%" y="213" width="0.0323%" height="15" fill="rgb(209,103,24)" fg:x="202" fg:w="1"/><text x="6.7703%" y="223.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.03%)</title><rect x="6.7140%" y="181" width="0.0323%" height="15" fill="rgb(229,88,8)" fg:x="208" fg:w="1"/><text x="6.9640%" y="191.50"></text></g><g><title>kfree (1 samples, 0.03%)</title><rect x="6.7463%" y="181" width="0.0323%" height="15" fill="rgb(213,181,19)" fg:x="209" fg:w="1"/><text x="6.9963%" y="191.50"></text></g><g><title>perf_event_mmap_event (24 samples, 0.77%)</title><rect x="6.5849%" y="197" width="0.7747%" height="15" fill="rgb(254,191,54)" fg:x="204" fg:w="24"/><text x="6.8349%" y="207.50"></text></g><g><title>perf_iterate_sb (18 samples, 0.58%)</title><rect x="6.7786%" y="181" width="0.5810%" height="15" fill="rgb(241,83,37)" fg:x="210" fg:w="18"/><text x="7.0286%" y="191.50"></text></g><g><title>perf_iterate_ctx (15 samples, 0.48%)</title><rect x="6.8754%" y="165" width="0.4842%" height="15" fill="rgb(233,36,39)" fg:x="213" fg:w="15"/><text x="7.1254%" y="175.50"></text></g><g><title>perf_event_mmap_output (1 samples, 0.03%)</title><rect x="7.3273%" y="149" width="0.0323%" height="15" fill="rgb(226,3,54)" fg:x="227" fg:w="1"/><text x="7.5773%" y="159.50"></text></g><g><title>strnlen (1 samples, 0.03%)</title><rect x="7.3596%" y="197" width="0.0323%" height="15" fill="rgb(245,192,40)" fg:x="228" fg:w="1"/><text x="7.6096%" y="207.50"></text></g><g><title>perf_event_mmap (27 samples, 0.87%)</title><rect x="6.5526%" y="213" width="0.8715%" height="15" fill="rgb(238,167,29)" fg:x="203" fg:w="27"/><text x="6.8026%" y="223.50"></text></g><g><title>strscpy (1 samples, 0.03%)</title><rect x="7.3919%" y="197" width="0.0323%" height="15" fill="rgb(232,182,51)" fg:x="229" fg:w="1"/><text x="7.6419%" y="207.50"></text></g><g><title>security_vm_enough_memory_mm (3 samples, 0.10%)</title><rect x="7.4241%" y="213" width="0.0968%" height="15" fill="rgb(231,60,39)" fg:x="230" fg:w="3"/><text x="7.6741%" y="223.50"></text></g><g><title>__vm_enough_memory (3 samples, 0.10%)</title><rect x="7.4241%" y="197" width="0.0968%" height="15" fill="rgb(208,69,12)" fg:x="230" fg:w="3"/><text x="7.6741%" y="207.50"></text></g><g><title>percpu_counter_add_batch (2 samples, 0.06%)</title><rect x="7.4564%" y="181" width="0.0646%" height="15" fill="rgb(235,93,37)" fg:x="231" fg:w="2"/><text x="7.7064%" y="191.50"></text></g><g><title>vm_get_page_prot (1 samples, 0.03%)</title><rect x="7.5210%" y="213" width="0.0323%" height="15" fill="rgb(213,116,39)" fg:x="233" fg:w="1"/><text x="7.7710%" y="223.50"></text></g><g><title>down_write (1 samples, 0.03%)</title><rect x="8.0052%" y="197" width="0.0323%" height="15" fill="rgb(222,207,29)" fg:x="248" fg:w="1"/><text x="8.2552%" y="207.50"></text></g><g><title>mas_preallocate (6 samples, 0.19%)</title><rect x="8.0374%" y="197" width="0.1937%" height="15" fill="rgb(206,96,30)" fg:x="249" fg:w="6"/><text x="8.2874%" y="207.50"></text></g><g><title>mas_wr_walk (1 samples, 0.03%)</title><rect x="8.1988%" y="181" width="0.0323%" height="15" fill="rgb(218,138,4)" fg:x="254" fg:w="1"/><text x="8.4488%" y="191.50"></text></g><g><title>mas_store_prealloc (7 samples, 0.23%)</title><rect x="8.2311%" y="197" width="0.2260%" height="15" fill="rgb(250,191,14)" fg:x="255" fg:w="7"/><text x="8.4811%" y="207.50"></text></g><g><title>mas_wr_store_entry.isra.0 (6 samples, 0.19%)</title><rect x="8.2634%" y="181" width="0.1937%" height="15" fill="rgb(239,60,40)" fg:x="256" fg:w="6"/><text x="8.5134%" y="191.50"></text></g><g><title>mas_wr_modify (6 samples, 0.19%)</title><rect x="8.2634%" y="165" width="0.1937%" height="15" fill="rgb(206,27,48)" fg:x="256" fg:w="6"/><text x="8.5134%" y="175.50"></text></g><g><title>mas_wr_slot_store (4 samples, 0.13%)</title><rect x="8.3280%" y="149" width="0.1291%" height="15" fill="rgb(225,35,8)" fg:x="258" fg:w="4"/><text x="8.5780%" y="159.50"></text></g><g><title>mas_update_gap.part.0 (2 samples, 0.06%)</title><rect x="8.3925%" y="133" width="0.0646%" height="15" fill="rgb(250,213,24)" fg:x="260" fg:w="2"/><text x="8.6425%" y="143.50"></text></g><g><title>mas_leaf_max_gap (1 samples, 0.03%)</title><rect x="8.4248%" y="117" width="0.0323%" height="15" fill="rgb(247,123,22)" fg:x="261" fg:w="1"/><text x="8.6748%" y="127.50"></text></g><g><title>mas_wr_end_piv (2 samples, 0.06%)</title><rect x="8.4571%" y="197" width="0.0646%" height="15" fill="rgb(231,138,38)" fg:x="262" fg:w="2"/><text x="8.7071%" y="207.50"></text></g><g><title>up_write (1 samples, 0.03%)</title><rect x="8.5216%" y="197" width="0.0323%" height="15" fill="rgb(231,145,46)" fg:x="264" fg:w="1"/><text x="8.7716%" y="207.50"></text></g><g><title>vma_complete (1 samples, 0.03%)</title><rect x="8.5539%" y="197" width="0.0323%" height="15" fill="rgb(251,118,11)" fg:x="265" fg:w="1"/><text x="8.8039%" y="207.50"></text></g><g><title>anon_vma_interval_tree_insert (1 samples, 0.03%)</title><rect x="8.5539%" y="181" width="0.0323%" height="15" fill="rgb(217,147,25)" fg:x="265" fg:w="1"/><text x="8.8039%" y="191.50"></text></g><g><title>vma_expand (36 samples, 1.16%)</title><rect x="7.5533%" y="213" width="1.1620%" height="15" fill="rgb(247,81,37)" fg:x="234" fg:w="36"/><text x="7.8033%" y="223.50"></text></g><g><title>vma_prepare (4 samples, 0.13%)</title><rect x="8.5862%" y="197" width="0.1291%" height="15" fill="rgb(209,12,38)" fg:x="266" fg:w="4"/><text x="8.8362%" y="207.50"></text></g><g><title>down_write (1 samples, 0.03%)</title><rect x="8.6830%" y="181" width="0.0323%" height="15" fill="rgb(227,1,9)" fg:x="269" fg:w="1"/><text x="8.9330%" y="191.50"></text></g><g><title>vma_prepare (1 samples, 0.03%)</title><rect x="8.7153%" y="213" width="0.0323%" height="15" fill="rgb(248,47,43)" fg:x="270" fg:w="1"/><text x="8.9653%" y="223.50"></text></g><g><title>mmap_region (86 samples, 2.78%)</title><rect x="6.0039%" y="229" width="2.7760%" height="15" fill="rgb(221,10,30)" fg:x="186" fg:w="86"/><text x="6.2539%" y="239.50">mm..</text></g><g><title>vma_wants_writenotify (1 samples, 0.03%)</title><rect x="8.7476%" y="213" width="0.0323%" height="15" fill="rgb(210,229,1)" fg:x="271" fg:w="1"/><text x="8.9976%" y="223.50"></text></g><g><title>srso_safe_ret (2 samples, 0.06%)</title><rect x="8.7799%" y="229" width="0.0646%" height="15" fill="rgb(222,148,37)" fg:x="272" fg:w="2"/><text x="9.0299%" y="239.50"></text></g><g><title>thp_get_unmapped_area (1 samples, 0.03%)</title><rect x="8.8444%" y="229" width="0.0323%" height="15" fill="rgb(234,67,33)" fg:x="274" fg:w="1"/><text x="9.0944%" y="239.50"></text></g><g><title>do_mmap (133 samples, 4.29%)</title><rect x="4.6159%" y="245" width="4.2931%" height="15" fill="rgb(247,98,35)" fg:x="143" fg:w="133"/><text x="4.8659%" y="255.50">do_mm..</text></g><g><title>vma_set_page_prot (1 samples, 0.03%)</title><rect x="8.8767%" y="229" width="0.0323%" height="15" fill="rgb(247,138,52)" fg:x="275" fg:w="1"/><text x="9.1267%" y="239.50"></text></g><g><title>down_write_killable (2 samples, 0.06%)</title><rect x="8.9090%" y="245" width="0.0646%" height="15" fill="rgb(213,79,30)" fg:x="276" fg:w="2"/><text x="9.1590%" y="255.50"></text></g><g><title>security_mmap_file (3 samples, 0.10%)</title><rect x="8.9735%" y="245" width="0.0968%" height="15" fill="rgb(246,177,23)" fg:x="278" fg:w="3"/><text x="9.2235%" y="255.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (151 samples, 4.87%)</title><rect x="4.2285%" y="341" width="4.8741%" height="15" fill="rgb(230,62,27)" fg:x="131" fg:w="151"/><text x="4.4785%" y="351.50">entry_..</text></g><g><title>do_syscall_64 (149 samples, 4.81%)</title><rect x="4.2931%" y="325" width="4.8096%" height="15" fill="rgb(216,154,8)" fg:x="133" fg:w="149"/><text x="4.5431%" y="335.50">do_sys..</text></g><g><title>x64_sys_call (144 samples, 4.65%)</title><rect x="4.4545%" y="309" width="4.6482%" height="15" fill="rgb(244,35,45)" fg:x="138" fg:w="144"/><text x="4.7045%" y="319.50">x64_s..</text></g><g><title>__x64_sys_mmap (144 samples, 4.65%)</title><rect x="4.4545%" y="293" width="4.6482%" height="15" fill="rgb(251,115,12)" fg:x="138" fg:w="144"/><text x="4.7045%" y="303.50">__x64..</text></g><g><title>ksys_mmap_pgoff (144 samples, 4.65%)</title><rect x="4.4545%" y="277" width="4.6482%" height="15" fill="rgb(240,54,50)" fg:x="138" fg:w="144"/><text x="4.7045%" y="287.50">ksys_..</text></g><g><title>vm_mmap_pgoff (142 samples, 4.58%)</title><rect x="4.5190%" y="261" width="4.5836%" height="15" fill="rgb(233,84,52)" fg:x="140" fg:w="142"/><text x="4.7690%" y="271.50">vm_mm..</text></g><g><title>srso_safe_ret (1 samples, 0.03%)</title><rect x="9.0704%" y="245" width="0.0323%" height="15" fill="rgb(207,117,47)" fg:x="281" fg:w="1"/><text x="9.3204%" y="255.50"></text></g><g><title>__mmap (155 samples, 5.00%)</title><rect x="4.1317%" y="357" width="5.0032%" height="15" fill="rgb(249,43,39)" fg:x="128" fg:w="155"/><text x="4.3817%" y="367.50">__mmap</text></g><g><title>srso_safe_ret (1 samples, 0.03%)</title><rect x="9.1026%" y="341" width="0.0323%" height="15" fill="rgb(209,38,44)" fg:x="282" fg:w="1"/><text x="9.3526%" y="351.50"></text></g><g><title>accountsdb.accounts_file.AccountFile.readAccount (1 samples, 0.03%)</title><rect x="9.1349%" y="357" width="0.0323%" height="15" fill="rgb(236,212,23)" fg:x="283" fg:w="1"/><text x="9.3849%" y="367.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.03%)</title><rect x="9.1349%" y="341" width="0.0323%" height="15" fill="rgb(242,79,21)" fg:x="283" fg:w="1"/><text x="9.3849%" y="351.50"></text></g><g><title>accountsdb.db.AccountsDB.putAccountFile (10 samples, 0.32%)</title><rect x="9.1672%" y="357" width="0.3228%" height="15" fill="rgb(211,96,35)" fg:x="284" fg:w="10"/><text x="9.4172%" y="367.50"></text></g><g><title>read_tsc (1 samples, 0.03%)</title><rect x="41.2847%" y="245" width="0.0323%" height="15" fill="rgb(253,215,40)" fg:x="1279" fg:w="1"/><text x="41.5347%" y="255.50"></text></g><g><title>arch_scale_freq_tick (1 samples, 0.03%)</title><rect x="41.3170%" y="197" width="0.0323%" height="15" fill="rgb(211,81,21)" fg:x="1280" fg:w="1"/><text x="41.5670%" y="207.50"></text></g><g><title>__hrtimer_run_queues (3 samples, 0.10%)</title><rect x="41.2847%" y="277" width="0.0968%" height="15" fill="rgb(208,190,38)" fg:x="1279" fg:w="3"/><text x="41.5347%" y="287.50"></text></g><g><title>tick_nohz_highres_handler (3 samples, 0.10%)</title><rect x="41.2847%" y="261" width="0.0968%" height="15" fill="rgb(235,213,38)" fg:x="1279" fg:w="3"/><text x="41.5347%" y="271.50"></text></g><g><title>tick_sched_handle (2 samples, 0.06%)</title><rect x="41.3170%" y="245" width="0.0646%" height="15" fill="rgb(237,122,38)" fg:x="1280" fg:w="2"/><text x="41.5670%" y="255.50"></text></g><g><title>update_process_times (2 samples, 0.06%)</title><rect x="41.3170%" y="229" width="0.0646%" height="15" fill="rgb(244,218,35)" fg:x="1280" fg:w="2"/><text x="41.5670%" y="239.50"></text></g><g><title>scheduler_tick (2 samples, 0.06%)</title><rect x="41.3170%" y="213" width="0.0646%" height="15" fill="rgb(240,68,47)" fg:x="1280" fg:w="2"/><text x="41.5670%" y="223.50"></text></g><g><title>task_tick_fair (1 samples, 0.03%)</title><rect x="41.3493%" y="197" width="0.0323%" height="15" fill="rgb(210,16,53)" fg:x="1281" fg:w="1"/><text x="41.5993%" y="207.50"></text></g><g><title>update_load_avg (1 samples, 0.03%)</title><rect x="41.3493%" y="181" width="0.0323%" height="15" fill="rgb(235,124,12)" fg:x="1281" fg:w="1"/><text x="41.5993%" y="191.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.03%)</title><rect x="41.3493%" y="165" width="0.0323%" height="15" fill="rgb(224,169,11)" fg:x="1281" fg:w="1"/><text x="41.5993%" y="175.50"></text></g><g><title>decay_load (1 samples, 0.03%)</title><rect x="41.3493%" y="149" width="0.0323%" height="15" fill="rgb(250,166,2)" fg:x="1281" fg:w="1"/><text x="41.5993%" y="159.50"></text></g><g><title>accountsdb.index.AccountIndex.indexRefIfNotDuplicateSlot (989 samples, 31.92%)</title><rect x="9.4900%" y="357" width="31.9238%" height="15" fill="rgb(242,216,29)" fg:x="294" fg:w="989"/><text x="9.7400%" y="367.50">accountsdb.index.AccountIndex.indexRefIfNotDuplicate..</text></g><g><title>asm_sysvec_apic_timer_interrupt (5 samples, 0.16%)</title><rect x="41.2524%" y="341" width="0.1614%" height="15" fill="rgb(230,116,27)" fg:x="1278" fg:w="5"/><text x="41.5024%" y="351.50"></text></g><g><title>sysvec_apic_timer_interrupt (5 samples, 0.16%)</title><rect x="41.2524%" y="325" width="0.1614%" height="15" fill="rgb(228,99,48)" fg:x="1278" fg:w="5"/><text x="41.5024%" y="335.50"></text></g><g><title>__sysvec_apic_timer_interrupt (4 samples, 0.13%)</title><rect x="41.2847%" y="309" width="0.1291%" height="15" fill="rgb(253,11,6)" fg:x="1279" fg:w="4"/><text x="41.5347%" y="319.50"></text></g><g><title>hrtimer_interrupt (4 samples, 0.13%)</title><rect x="41.2847%" y="293" width="0.1291%" height="15" fill="rgb(247,143,39)" fg:x="1279" fg:w="4"/><text x="41.5347%" y="303.50"></text></g><g><title>tick_program_event (1 samples, 0.03%)</title><rect x="41.3815%" y="277" width="0.0323%" height="15" fill="rgb(236,97,10)" fg:x="1282" fg:w="1"/><text x="41.6315%" y="287.50"></text></g><g><title>clockevents_program_event (1 samples, 0.03%)</title><rect x="41.3815%" y="261" width="0.0323%" height="15" fill="rgb(233,208,19)" fg:x="1282" fg:w="1"/><text x="41.6315%" y="271.50"></text></g><g><title>read_tsc (1 samples, 0.03%)</title><rect x="41.3815%" y="245" width="0.0323%" height="15" fill="rgb(216,164,2)" fg:x="1282" fg:w="1"/><text x="41.6315%" y="255.50"></text></g><g><title>heap.PageAllocator.alloc (1 samples, 0.03%)</title><rect x="41.4138%" y="357" width="0.0323%" height="15" fill="rgb(220,129,5)" fg:x="1283" fg:w="1"/><text x="41.6638%" y="367.50"></text></g><g><title>heap.general_purpose_allocator.GeneralPurposeAllocator (3 samples, 0.10%)</title><rect x="41.4461%" y="357" width="0.0968%" height="15" fill="rgb(242,17,10)" fg:x="1284" fg:w="3"/><text x="41.6961%" y="367.50"></text></g><g><title>__irqentry_text_end (3 samples, 0.10%)</title><rect x="43.8347%" y="341" width="0.0968%" height="15" fill="rgb(242,107,0)" fg:x="1358" fg:w="3"/><text x="44.0847%" y="351.50"></text></g><g><title>__rcu_read_lock (2 samples, 0.06%)</title><rect x="46.0297%" y="309" width="0.0646%" height="15" fill="rgb(251,28,31)" fg:x="1426" fg:w="2"/><text x="46.2797%" y="319.50"></text></g><g><title>__rcu_read_unlock (3 samples, 0.10%)</title><rect x="46.0943%" y="309" width="0.0968%" height="15" fill="rgb(233,223,10)" fg:x="1428" fg:w="3"/><text x="46.3443%" y="319.50"></text></g><g><title>access_error (4 samples, 0.13%)</title><rect x="46.1911%" y="309" width="0.1291%" height="15" fill="rgb(215,21,27)" fg:x="1431" fg:w="4"/><text x="46.4411%" y="319.50"></text></g><g><title>__rcu_read_lock (5 samples, 0.16%)</title><rect x="47.0949%" y="293" width="0.1614%" height="15" fill="rgb(232,23,21)" fg:x="1459" fg:w="5"/><text x="47.3449%" y="303.50"></text></g><g><title>__rcu_read_unlock (5 samples, 0.16%)</title><rect x="47.2563%" y="293" width="0.1614%" height="15" fill="rgb(244,5,23)" fg:x="1464" fg:w="5"/><text x="47.5063%" y="303.50"></text></g><g><title>count_memcg_events.constprop.0 (1 samples, 0.03%)</title><rect x="47.4177%" y="293" width="0.0323%" height="15" fill="rgb(226,81,46)" fg:x="1469" fg:w="1"/><text x="47.6677%" y="303.50"></text></g><g><title>down_read_trylock (4 samples, 0.13%)</title><rect x="47.4500%" y="293" width="0.1291%" height="15" fill="rgb(247,70,30)" fg:x="1470" fg:w="4"/><text x="47.7000%" y="303.50"></text></g><g><title>__rcu_read_unlock (2 samples, 0.06%)</title><rect x="49.1285%" y="261" width="0.0646%" height="15" fill="rgb(212,68,19)" fg:x="1522" fg:w="2"/><text x="49.3785%" y="271.50"></text></g><g><title>__folio_throttle_swaprate (3 samples, 0.10%)</title><rect x="49.4190%" y="245" width="0.0968%" height="15" fill="rgb(240,187,13)" fg:x="1531" fg:w="3"/><text x="49.6690%" y="255.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.03%)</title><rect x="49.5158%" y="245" width="0.0323%" height="15" fill="rgb(223,113,26)" fg:x="1534" fg:w="1"/><text x="49.7658%" y="255.50"></text></g><g><title>alloc_anon_folio (1 samples, 0.03%)</title><rect x="49.5481%" y="245" width="0.0323%" height="15" fill="rgb(206,192,2)" fg:x="1535" fg:w="1"/><text x="49.7981%" y="255.50"></text></g><g><title>__rcu_read_lock (2 samples, 0.06%)</title><rect x="50.7424%" y="213" width="0.0646%" height="15" fill="rgb(241,108,4)" fg:x="1572" fg:w="2"/><text x="50.9924%" y="223.50"></text></g><g><title>blk_cgroup_congested (13 samples, 0.42%)</title><rect x="50.8070%" y="213" width="0.4196%" height="15" fill="rgb(247,173,49)" fg:x="1574" fg:w="13"/><text x="51.0570%" y="223.50"></text></g><g><title>__folio_throttle_swaprate (17 samples, 0.55%)</title><rect x="50.7101%" y="229" width="0.5487%" height="15" fill="rgb(224,114,35)" fg:x="1571" fg:w="17"/><text x="50.9601%" y="239.50"></text></g><g><title>kthread_blkcg (1 samples, 0.03%)</title><rect x="51.2266%" y="213" width="0.0323%" height="15" fill="rgb(245,159,27)" fg:x="1587" fg:w="1"/><text x="51.4766%" y="223.50"></text></g><g><title>__count_memcg_events (1 samples, 0.03%)</title><rect x="51.7753%" y="213" width="0.0323%" height="15" fill="rgb(245,172,44)" fg:x="1604" fg:w="1"/><text x="52.0253%" y="223.50"></text></g><g><title>__rcu_read_lock (4 samples, 0.13%)</title><rect x="51.8076%" y="213" width="0.1291%" height="15" fill="rgb(236,23,11)" fg:x="1605" fg:w="4"/><text x="52.0576%" y="223.50"></text></g><g><title>__rcu_read_unlock (5 samples, 0.16%)</title><rect x="51.9367%" y="213" width="0.1614%" height="15" fill="rgb(205,117,38)" fg:x="1609" fg:w="5"/><text x="52.1867%" y="223.50"></text></g><g><title>get_mem_cgroup_from_mm (18 samples, 0.58%)</title><rect x="52.0981%" y="213" width="0.5810%" height="15" fill="rgb(237,72,25)" fg:x="1614" fg:w="18"/><text x="52.3481%" y="223.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="52.6469%" y="197" width="0.0323%" height="15" fill="rgb(244,70,9)" fg:x="1631" fg:w="1"/><text x="52.8969%" y="207.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="52.6469%" y="181" width="0.0323%" height="15" fill="rgb(217,125,39)" fg:x="1631" fg:w="1"/><text x="52.8969%" y="191.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="52.6469%" y="165" width="0.0323%" height="15" fill="rgb(235,36,10)" fg:x="1631" fg:w="1"/><text x="52.8969%" y="175.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.03%)</title><rect x="52.6469%" y="149" width="0.0323%" height="15" fill="rgb(251,123,47)" fg:x="1631" fg:w="1"/><text x="52.8969%" y="159.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.03%)</title><rect x="52.6469%" y="133" width="0.0323%" height="15" fill="rgb(221,13,13)" fg:x="1631" fg:w="1"/><text x="52.8969%" y="143.50"></text></g><g><title>tick_nohz_highres_handler (1 samples, 0.03%)</title><rect x="52.6469%" y="117" width="0.0323%" height="15" fill="rgb(238,131,9)" fg:x="1631" fg:w="1"/><text x="52.8969%" y="127.50"></text></g><g><title>tick_sched_handle (1 samples, 0.03%)</title><rect x="52.6469%" y="101" width="0.0323%" height="15" fill="rgb(211,50,8)" fg:x="1631" fg:w="1"/><text x="52.8969%" y="111.50"></text></g><g><title>update_process_times (1 samples, 0.03%)</title><rect x="52.6469%" y="85" width="0.0323%" height="15" fill="rgb(245,182,24)" fg:x="1631" fg:w="1"/><text x="52.8969%" y="95.50"></text></g><g><title>scheduler_tick (1 samples, 0.03%)</title><rect x="52.6469%" y="69" width="0.0323%" height="15" fill="rgb(242,14,37)" fg:x="1631" fg:w="1"/><text x="52.8969%" y="79.50"></text></g><g><title>perf_event_task_tick (1 samples, 0.03%)</title><rect x="52.6469%" y="53" width="0.0323%" height="15" fill="rgb(246,228,12)" fg:x="1631" fg:w="1"/><text x="52.8969%" y="63.50"></text></g><g><title>perf_adjust_freq_unthr_context (1 samples, 0.03%)</title><rect x="52.6469%" y="37" width="0.0323%" height="15" fill="rgb(213,55,15)" fg:x="1631" fg:w="1"/><text x="52.8969%" y="47.50"></text></g><g><title>__count_memcg_events (9 samples, 0.29%)</title><rect x="53.0665%" y="197" width="0.2905%" height="15" fill="rgb(209,9,3)" fg:x="1644" fg:w="9"/><text x="53.3165%" y="207.50"></text></g><g><title>cgroup_rstat_updated (2 samples, 0.06%)</title><rect x="53.2924%" y="181" width="0.0646%" height="15" fill="rgb(230,59,30)" fg:x="1651" fg:w="2"/><text x="53.5424%" y="191.50"></text></g><g><title>mem_cgroup_commit_charge (22 samples, 0.71%)</title><rect x="52.6791%" y="213" width="0.7101%" height="15" fill="rgb(209,121,21)" fg:x="1632" fg:w="22"/><text x="52.9291%" y="223.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.03%)</title><rect x="53.3570%" y="197" width="0.0323%" height="15" fill="rgb(220,109,13)" fg:x="1653" fg:w="1"/><text x="53.6070%" y="207.50"></text></g><g><title>memcg_check_events (1 samples, 0.03%)</title><rect x="53.3893%" y="213" width="0.0323%" height="15" fill="rgb(232,18,1)" fg:x="1654" fg:w="1"/><text x="53.6393%" y="223.50"></text></g><g><title>consume_stock (5 samples, 0.16%)</title><rect x="53.5184%" y="197" width="0.1614%" height="15" fill="rgb(215,41,42)" fg:x="1658" fg:w="5"/><text x="53.7684%" y="207.50"></text></g><g><title>__mem_cgroup_charge (76 samples, 2.45%)</title><rect x="51.2589%" y="229" width="2.4532%" height="15" fill="rgb(224,123,36)" fg:x="1588" fg:w="76"/><text x="51.5089%" y="239.50">__..</text></g><g><title>try_charge_memcg (9 samples, 0.29%)</title><rect x="53.4216%" y="213" width="0.2905%" height="15" fill="rgb(240,125,3)" fg:x="1655" fg:w="9"/><text x="53.6716%" y="223.50"></text></g><g><title>page_counter_try_charge (1 samples, 0.03%)</title><rect x="53.6798%" y="197" width="0.0323%" height="15" fill="rgb(205,98,50)" fg:x="1663" fg:w="1"/><text x="53.9298%" y="207.50"></text></g><g><title>__pte_offset_map (9 samples, 0.29%)</title><rect x="54.0349%" y="213" width="0.2905%" height="15" fill="rgb(205,185,37)" fg:x="1674" fg:w="9"/><text x="54.2849%" y="223.50"></text></g><g><title>__pte_offset_map_lock (21 samples, 0.68%)</title><rect x="53.7121%" y="229" width="0.6779%" height="15" fill="rgb(238,207,15)" fg:x="1664" fg:w="21"/><text x="53.9621%" y="239.50"></text></g><g><title>__rcu_read_lock (2 samples, 0.06%)</title><rect x="54.3254%" y="213" width="0.0646%" height="15" fill="rgb(213,199,42)" fg:x="1683" fg:w="2"/><text x="54.5754%" y="223.50"></text></g><g><title>__rcu_read_lock (3 samples, 0.10%)</title><rect x="54.3899%" y="229" width="0.0968%" height="15" fill="rgb(235,201,11)" fg:x="1685" fg:w="3"/><text x="54.6399%" y="239.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.03%)</title><rect x="54.4868%" y="229" width="0.0323%" height="15" fill="rgb(207,46,11)" fg:x="1688" fg:w="1"/><text x="54.7368%" y="239.50"></text></g><g><title>_raw_spin_lock (2 samples, 0.06%)</title><rect x="54.5190%" y="229" width="0.0646%" height="15" fill="rgb(241,35,35)" fg:x="1689" fg:w="2"/><text x="54.7690%" y="239.50"></text></g><g><title>__next_zones_zonelist (4 samples, 0.13%)</title><rect x="55.2615%" y="165" width="0.1291%" height="15" fill="rgb(243,32,47)" fg:x="1712" fg:w="4"/><text x="55.5115%" y="175.50"></text></g><g><title>__rmqueue_pcplist (2 samples, 0.06%)</title><rect x="55.5520%" y="149" width="0.0646%" height="15" fill="rgb(247,202,23)" fg:x="1721" fg:w="2"/><text x="55.8020%" y="159.50"></text></g><g><title>_raw_spin_trylock (2 samples, 0.06%)</title><rect x="55.6165%" y="149" width="0.0646%" height="15" fill="rgb(219,102,11)" fg:x="1723" fg:w="2"/><text x="55.8665%" y="159.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.03%)</title><rect x="55.6811%" y="149" width="0.0323%" height="15" fill="rgb(243,110,44)" fg:x="1725" fg:w="1"/><text x="55.9311%" y="159.50"></text></g><g><title>clear_page_rep (180 samples, 5.81%)</title><rect x="55.7134%" y="149" width="5.8102%" height="15" fill="rgb(222,74,54)" fg:x="1726" fg:w="180"/><text x="55.9634%" y="159.50">clear_p..</text></g><g><title>post_alloc_hook (3 samples, 0.10%)</title><rect x="61.5236%" y="149" width="0.0968%" height="15" fill="rgb(216,99,12)" fg:x="1906" fg:w="3"/><text x="61.7736%" y="159.50"></text></g><g><title>get_page_from_freelist (260 samples, 8.39%)</title><rect x="55.3906%" y="165" width="8.3925%" height="15" fill="rgb(226,22,26)" fg:x="1716" fg:w="260"/><text x="55.6406%" y="175.50">get_page_fro..</text></g><g><title>rmqueue (67 samples, 2.16%)</title><rect x="61.6204%" y="149" width="2.1627%" height="15" fill="rgb(217,163,10)" fg:x="1909" fg:w="67"/><text x="61.8704%" y="159.50">r..</text></g><g><title>__rmqueue_pcplist (52 samples, 1.68%)</title><rect x="62.1046%" y="133" width="1.6785%" height="15" fill="rgb(213,25,53)" fg:x="1924" fg:w="52"/><text x="62.3546%" y="143.50"></text></g><g><title>rmqueue_bulk (48 samples, 1.55%)</title><rect x="62.2337%" y="117" width="1.5494%" height="15" fill="rgb(252,105,26)" fg:x="1928" fg:w="48"/><text x="62.4837%" y="127.50"></text></g><g><title>__mod_zone_page_state (1 samples, 0.03%)</title><rect x="63.7508%" y="101" width="0.0323%" height="15" fill="rgb(220,39,43)" fg:x="1975" fg:w="1"/><text x="64.0008%" y="111.50"></text></g><g><title>post_alloc_hook (1 samples, 0.03%)</title><rect x="63.7831%" y="165" width="0.0323%" height="15" fill="rgb(229,68,48)" fg:x="1976" fg:w="1"/><text x="64.0331%" y="175.50"></text></g><g><title>__alloc_pages (274 samples, 8.84%)</title><rect x="55.0355%" y="181" width="8.8444%" height="15" fill="rgb(252,8,32)" fg:x="1705" fg:w="274"/><text x="55.2855%" y="191.50">__alloc_pages</text></g><g><title>rmqueue (2 samples, 0.06%)</title><rect x="63.8154%" y="165" width="0.0646%" height="15" fill="rgb(223,20,43)" fg:x="1977" fg:w="2"/><text x="64.0654%" y="175.50"></text></g><g><title>__cond_resched (2 samples, 0.06%)</title><rect x="63.8799%" y="181" width="0.0646%" height="15" fill="rgb(229,81,49)" fg:x="1979" fg:w="2"/><text x="64.1299%" y="191.50"></text></g><g><title>__next_zones_zonelist (2 samples, 0.06%)</title><rect x="63.9445%" y="181" width="0.0646%" height="15" fill="rgb(236,28,36)" fg:x="1981" fg:w="2"/><text x="64.1945%" y="191.50"></text></g><g><title>_find_first_bit (5 samples, 0.16%)</title><rect x="64.0090%" y="181" width="0.1614%" height="15" fill="rgb(249,185,26)" fg:x="1983" fg:w="5"/><text x="64.2590%" y="191.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.03%)</title><rect x="64.1704%" y="181" width="0.0323%" height="15" fill="rgb(249,174,33)" fg:x="1988" fg:w="1"/><text x="64.4204%" y="191.50"></text></g><g><title>policy_nodemask (1 samples, 0.03%)</title><rect x="64.2027%" y="181" width="0.0323%" height="15" fill="rgb(233,201,37)" fg:x="1989" fg:w="1"/><text x="64.4527%" y="191.50"></text></g><g><title>should_fail_alloc_page (8 samples, 0.26%)</title><rect x="64.2350%" y="181" width="0.2582%" height="15" fill="rgb(221,78,26)" fg:x="1990" fg:w="8"/><text x="64.4850%" y="191.50"></text></g><g><title>alloc_pages_mpol (299 samples, 9.65%)</title><rect x="54.8741%" y="197" width="9.6514%" height="15" fill="rgb(250,127,30)" fg:x="1700" fg:w="299"/><text x="55.1241%" y="207.50">alloc_pages_mp..</text></g><g><title>srso_safe_ret (1 samples, 0.03%)</title><rect x="64.4932%" y="181" width="0.0323%" height="15" fill="rgb(230,49,44)" fg:x="1998" fg:w="1"/><text x="64.7432%" y="191.50"></text></g><g><title>alloc_anon_folio (309 samples, 9.97%)</title><rect x="54.5836%" y="229" width="9.9742%" height="15" fill="rgb(229,67,23)" fg:x="1691" fg:w="309"/><text x="54.8336%" y="239.50">alloc_anon_fol..</text></g><g><title>vma_alloc_folio (307 samples, 9.91%)</title><rect x="54.6482%" y="213" width="9.9096%" height="15" fill="rgb(249,83,47)" fg:x="1693" fg:w="307"/><text x="54.8982%" y="223.50">vma_alloc_folio</text></g><g><title>get_vma_policy (1 samples, 0.03%)</title><rect x="64.5255%" y="197" width="0.0323%" height="15" fill="rgb(215,43,3)" fg:x="1999" fg:w="1"/><text x="64.7755%" y="207.50"></text></g><g><title>folio_add_lru (2 samples, 0.06%)</title><rect x="64.5578%" y="229" width="0.0646%" height="15" fill="rgb(238,154,13)" fg:x="2000" fg:w="2"/><text x="64.8078%" y="239.50"></text></g><g><title>__x86_indirect_thunk_r14 (1 samples, 0.03%)</title><rect x="64.6869%" y="197" width="0.0323%" height="15" fill="rgb(219,56,2)" fg:x="2004" fg:w="1"/><text x="64.9369%" y="207.50"></text></g><g><title>__rcu_read_unlock (3 samples, 0.10%)</title><rect x="64.8806%" y="181" width="0.0968%" height="15" fill="rgb(233,0,4)" fg:x="2010" fg:w="3"/><text x="65.1306%" y="191.50"></text></g><g><title>folio_lruvec_lock_irqsave (1 samples, 0.03%)</title><rect x="64.9774%" y="181" width="0.0323%" height="15" fill="rgb(235,30,7)" fg:x="2013" fg:w="1"/><text x="65.2274%" y="191.50"></text></g><g><title>folio_mapping (1 samples, 0.03%)</title><rect x="65.0097%" y="181" width="0.0323%" height="15" fill="rgb(250,79,13)" fg:x="2014" fg:w="1"/><text x="65.2597%" y="191.50"></text></g><g><title>__mod_memcg_lruvec_state (9 samples, 0.29%)</title><rect x="65.9458%" y="133" width="0.2905%" height="15" fill="rgb(211,146,34)" fg:x="2043" fg:w="9"/><text x="66.1958%" y="143.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.03%)</title><rect x="66.2040%" y="117" width="0.0323%" height="15" fill="rgb(228,22,38)" fg:x="2051" fg:w="1"/><text x="66.4540%" y="127.50"></text></g><g><title>__mod_lruvec_state (11 samples, 0.36%)</title><rect x="65.9135%" y="149" width="0.3551%" height="15" fill="rgb(235,168,5)" fg:x="2042" fg:w="11"/><text x="66.1635%" y="159.50"></text></g><g><title>__mod_node_page_state (1 samples, 0.03%)</title><rect x="66.2363%" y="133" width="0.0323%" height="15" fill="rgb(221,155,16)" fg:x="2052" fg:w="1"/><text x="66.4863%" y="143.50"></text></g><g><title>lru_add_fn (39 samples, 1.26%)</title><rect x="65.0420%" y="181" width="1.2589%" height="15" fill="rgb(215,215,53)" fg:x="2015" fg:w="39"/><text x="65.2920%" y="191.50"></text></g><g><title>lru_gen_add_folio (25 samples, 0.81%)</title><rect x="65.4939%" y="165" width="0.8070%" height="15" fill="rgb(223,4,10)" fg:x="2029" fg:w="25"/><text x="65.7439%" y="175.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.03%)</title><rect x="66.2686%" y="149" width="0.0323%" height="15" fill="rgb(234,103,6)" fg:x="2053" fg:w="1"/><text x="66.5186%" y="159.50"></text></g><g><title>folio_batch_move_lru (50 samples, 1.61%)</title><rect x="64.7192%" y="197" width="1.6139%" height="15" fill="rgb(227,97,0)" fg:x="2005" fg:w="50"/><text x="64.9692%" y="207.50"></text></g><g><title>release_pages (1 samples, 0.03%)</title><rect x="66.3008%" y="181" width="0.0323%" height="15" fill="rgb(234,150,53)" fg:x="2054" fg:w="1"/><text x="66.5508%" y="191.50"></text></g><g><title>folio_add_lru_vma (55 samples, 1.78%)</title><rect x="64.6223%" y="229" width="1.7753%" height="15" fill="rgb(228,201,54)" fg:x="2002" fg:w="55"/><text x="64.8723%" y="239.50">f..</text></g><g><title>folio_add_lru (55 samples, 1.78%)</title><rect x="64.6223%" y="213" width="1.7753%" height="15" fill="rgb(222,22,37)" fg:x="2002" fg:w="55"/><text x="64.8723%" y="223.50">f..</text></g><g><title>lru_add_fn (2 samples, 0.06%)</title><rect x="66.3331%" y="197" width="0.0646%" height="15" fill="rgb(237,53,32)" fg:x="2055" fg:w="2"/><text x="66.5831%" y="207.50"></text></g><g><title>__mod_memcg_lruvec_state (5 samples, 0.16%)</title><rect x="66.9141%" y="181" width="0.1614%" height="15" fill="rgb(233,25,53)" fg:x="2073" fg:w="5"/><text x="67.1641%" y="191.50"></text></g><g><title>__mod_lruvec_state (8 samples, 0.26%)</title><rect x="66.8496%" y="197" width="0.2582%" height="15" fill="rgb(210,40,34)" fg:x="2071" fg:w="8"/><text x="67.0996%" y="207.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.03%)</title><rect x="67.0755%" y="181" width="0.0323%" height="15" fill="rgb(241,220,44)" fg:x="2078" fg:w="1"/><text x="67.3255%" y="191.50"></text></g><g><title>__lruvec_stat_mod_folio (22 samples, 0.71%)</title><rect x="66.4300%" y="213" width="0.7101%" height="15" fill="rgb(235,28,35)" fg:x="2058" fg:w="22"/><text x="66.6800%" y="223.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.03%)</title><rect x="67.1078%" y="197" width="0.0323%" height="15" fill="rgb(210,56,17)" fg:x="2079" fg:w="1"/><text x="67.3578%" y="207.50"></text></g><g><title>__rcu_read_unlock (2 samples, 0.06%)</title><rect x="67.1401%" y="213" width="0.0646%" height="15" fill="rgb(224,130,29)" fg:x="2080" fg:w="2"/><text x="67.3901%" y="223.50"></text></g><g><title>folio_add_new_anon_rmap (26 samples, 0.84%)</title><rect x="66.3977%" y="229" width="0.8393%" height="15" fill="rgb(235,212,8)" fg:x="2057" fg:w="26"/><text x="66.6477%" y="239.50"></text></g><g><title>srso_safe_ret (1 samples, 0.03%)</title><rect x="67.2046%" y="213" width="0.0323%" height="15" fill="rgb(223,33,50)" fg:x="2082" fg:w="1"/><text x="67.4546%" y="223.50"></text></g><g><title>mem_cgroup_commit_charge (1 samples, 0.03%)</title><rect x="67.2369%" y="229" width="0.0323%" height="15" fill="rgb(219,149,13)" fg:x="2083" fg:w="1"/><text x="67.4869%" y="239.50"></text></g><g><title>native_set_pte (2 samples, 0.06%)</title><rect x="67.2692%" y="229" width="0.0646%" height="15" fill="rgb(250,156,29)" fg:x="2084" fg:w="2"/><text x="67.5192%" y="239.50"></text></g><g><title>percpu_counter_add_batch (1 samples, 0.03%)</title><rect x="67.3338%" y="229" width="0.0323%" height="15" fill="rgb(216,193,19)" fg:x="2086" fg:w="1"/><text x="67.5838%" y="239.50"></text></g><g><title>set_ptes.constprop.0 (2 samples, 0.06%)</title><rect x="67.3660%" y="229" width="0.0646%" height="15" fill="rgb(216,135,14)" fg:x="2087" fg:w="2"/><text x="67.6160%" y="239.50"></text></g><g><title>do_anonymous_page (556 samples, 17.95%)</title><rect x="49.5804%" y="245" width="17.9471%" height="15" fill="rgb(241,47,5)" fg:x="1536" fg:w="556"/><text x="49.8304%" y="255.50">do_anonymous_page</text></g><g><title>srso_safe_ret (3 samples, 0.10%)</title><rect x="67.4306%" y="229" width="0.0968%" height="15" fill="rgb(233,42,35)" fg:x="2089" fg:w="3"/><text x="67.6806%" y="239.50"></text></g><g><title>folio_add_lru_vma (1 samples, 0.03%)</title><rect x="67.5274%" y="245" width="0.0323%" height="15" fill="rgb(231,13,6)" fg:x="2092" fg:w="1"/><text x="67.7774%" y="255.50"></text></g><g><title>folio_add_new_anon_rmap (5 samples, 0.16%)</title><rect x="67.5597%" y="245" width="0.1614%" height="15" fill="rgb(207,181,40)" fg:x="2093" fg:w="5"/><text x="67.8097%" y="255.50"></text></g><g><title>mksaveddirty_shift (1 samples, 0.03%)</title><rect x="67.7211%" y="245" width="0.0323%" height="15" fill="rgb(254,173,49)" fg:x="2098" fg:w="1"/><text x="67.9711%" y="255.50"></text></g><g><title>pfn_pte (2 samples, 0.06%)</title><rect x="67.7534%" y="245" width="0.0646%" height="15" fill="rgb(221,1,38)" fg:x="2099" fg:w="2"/><text x="68.0034%" y="255.50"></text></g><g><title>pte_mkwrite (3 samples, 0.10%)</title><rect x="67.8179%" y="245" width="0.0968%" height="15" fill="rgb(206,124,46)" fg:x="2101" fg:w="3"/><text x="68.0679%" y="255.50"></text></g><g><title>__pte_offset_map (3 samples, 0.10%)</title><rect x="68.1407%" y="229" width="0.0968%" height="15" fill="rgb(249,21,11)" fg:x="2111" fg:w="3"/><text x="68.3907%" y="239.50"></text></g><g><title>pte_offset_map_nolock (11 samples, 0.36%)</title><rect x="67.9148%" y="245" width="0.3551%" height="15" fill="rgb(222,201,40)" fg:x="2104" fg:w="11"/><text x="68.1648%" y="255.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.03%)</title><rect x="68.2376%" y="229" width="0.0323%" height="15" fill="rgb(235,61,29)" fg:x="2114" fg:w="1"/><text x="68.4876%" y="239.50"></text></g><g><title>srso_safe_ret (3 samples, 0.10%)</title><rect x="68.2699%" y="245" width="0.0968%" height="15" fill="rgb(219,207,3)" fg:x="2115" fg:w="3"/><text x="68.5199%" y="255.50"></text></g><g><title>handle_pte_fault (595 samples, 19.21%)</title><rect x="49.1930%" y="261" width="19.2059%" height="15" fill="rgb(222,56,46)" fg:x="1524" fg:w="595"/><text x="49.4430%" y="271.50">handle_pte_fault</text></g><g><title>trace_rss_stat (1 samples, 0.03%)</title><rect x="68.3667%" y="245" width="0.0323%" height="15" fill="rgb(239,76,54)" fg:x="2118" fg:w="1"/><text x="68.6167%" y="255.50"></text></g><g><title>pte_offset_map_nolock (1 samples, 0.03%)</title><rect x="68.3990%" y="261" width="0.0323%" height="15" fill="rgb(231,124,27)" fg:x="2119" fg:w="1"/><text x="68.6490%" y="271.50"></text></g><g><title>__handle_mm_fault (633 samples, 20.43%)</title><rect x="48.0310%" y="277" width="20.4325%" height="15" fill="rgb(249,195,6)" fg:x="1488" fg:w="633"/><text x="48.2810%" y="287.50">__handle_mm_fault</text></g><g><title>srso_safe_ret (1 samples, 0.03%)</title><rect x="68.4312%" y="261" width="0.0323%" height="15" fill="rgb(237,174,47)" fg:x="2120" fg:w="1"/><text x="68.6812%" y="271.50"></text></g><g><title>count_memcg_events.constprop.0 (11 samples, 0.36%)</title><rect x="68.4635%" y="277" width="0.3551%" height="15" fill="rgb(206,201,31)" fg:x="2121" fg:w="11"/><text x="68.7135%" y="287.50"></text></g><g><title>__count_memcg_events (8 samples, 0.26%)</title><rect x="68.5604%" y="261" width="0.2582%" height="15" fill="rgb(231,57,52)" fg:x="2124" fg:w="8"/><text x="68.8104%" y="271.50"></text></g><g><title>handle_pte_fault (2 samples, 0.06%)</title><rect x="68.8186%" y="277" width="0.0646%" height="15" fill="rgb(248,177,22)" fg:x="2132" fg:w="2"/><text x="69.0686%" y="287.50"></text></g><g><title>mem_cgroup_from_task (1 samples, 0.03%)</title><rect x="68.8832%" y="277" width="0.0323%" height="15" fill="rgb(215,211,37)" fg:x="2134" fg:w="1"/><text x="69.1332%" y="287.50"></text></g><g><title>pmd_val (2 samples, 0.06%)</title><rect x="68.9154%" y="277" width="0.0646%" height="15" fill="rgb(241,128,51)" fg:x="2135" fg:w="2"/><text x="69.1654%" y="287.50"></text></g><g><title>pud_val (4 samples, 0.13%)</title><rect x="68.9800%" y="277" width="0.1291%" height="15" fill="rgb(227,165,31)" fg:x="2137" fg:w="4"/><text x="69.2300%" y="287.50"></text></g><g><title>handle_mm_fault (671 samples, 21.66%)</title><rect x="47.5791%" y="293" width="21.6591%" height="15" fill="rgb(228,167,24)" fg:x="1474" fg:w="671"/><text x="47.8291%" y="303.50">handle_mm_fault</text></g><g><title>srso_safe_ret (4 samples, 0.13%)</title><rect x="69.1091%" y="277" width="0.1291%" height="15" fill="rgb(228,143,12)" fg:x="2141" fg:w="4"/><text x="69.3591%" y="287.50"></text></g><g><title>lock_mm_and_find_vma (1 samples, 0.03%)</title><rect x="69.2382%" y="293" width="0.0323%" height="15" fill="rgb(249,149,8)" fg:x="2145" fg:w="1"/><text x="69.4882%" y="303.50"></text></g><g><title>find_vma (1 samples, 0.03%)</title><rect x="69.2382%" y="277" width="0.0323%" height="15" fill="rgb(243,35,44)" fg:x="2145" fg:w="1"/><text x="69.4882%" y="287.50"></text></g><g><title>mt_find (1 samples, 0.03%)</title><rect x="69.2382%" y="261" width="0.0323%" height="15" fill="rgb(246,89,9)" fg:x="2145" fg:w="1"/><text x="69.4882%" y="271.50"></text></g><g><title>lock_vma_under_rcu (21 samples, 0.68%)</title><rect x="69.2705%" y="293" width="0.6779%" height="15" fill="rgb(233,213,13)" fg:x="2146" fg:w="21"/><text x="69.5205%" y="303.50"></text></g><g><title>mas_walk (9 samples, 0.29%)</title><rect x="69.6578%" y="277" width="0.2905%" height="15" fill="rgb(233,141,41)" fg:x="2158" fg:w="9"/><text x="69.9078%" y="287.50"></text></g><g><title>mas_walk (1 samples, 0.03%)</title><rect x="69.9484%" y="293" width="0.0323%" height="15" fill="rgb(239,167,4)" fg:x="2167" fg:w="1"/><text x="70.1984%" y="303.50"></text></g><g><title>srso_return_thunk (1 samples, 0.03%)</title><rect x="69.9806%" y="293" width="0.0323%" height="15" fill="rgb(209,217,16)" fg:x="2168" fg:w="1"/><text x="70.2306%" y="303.50"></text></g><g><title>srso_safe_ret (1 samples, 0.03%)</title><rect x="70.0129%" y="293" width="0.0323%" height="15" fill="rgb(219,88,35)" fg:x="2169" fg:w="1"/><text x="70.2629%" y="303.50"></text></g><g><title>do_user_addr_fault (738 samples, 23.82%)</title><rect x="46.3202%" y="309" width="23.8218%" height="15" fill="rgb(220,193,23)" fg:x="1435" fg:w="738"/><text x="46.5702%" y="319.50">do_user_addr_fault</text></g><g><title>up_read (3 samples, 0.10%)</title><rect x="70.0452%" y="293" width="0.0968%" height="15" fill="rgb(230,90,52)" fg:x="2170" fg:w="3"/><text x="70.2952%" y="303.50"></text></g><g><title>handle_mm_fault (3 samples, 0.10%)</title><rect x="70.1420%" y="309" width="0.0968%" height="15" fill="rgb(252,106,19)" fg:x="2173" fg:w="3"/><text x="70.3920%" y="319.50"></text></g><g><title>irqentry_enter (2 samples, 0.06%)</title><rect x="70.2389%" y="309" width="0.0646%" height="15" fill="rgb(206,74,20)" fg:x="2176" fg:w="2"/><text x="70.4889%" y="319.50"></text></g><g><title>irqentry_exit (9 samples, 0.29%)</title><rect x="70.3034%" y="309" width="0.2905%" height="15" fill="rgb(230,138,44)" fg:x="2178" fg:w="9"/><text x="70.5534%" y="319.50"></text></g><g><title>irqentry_exit_to_user_mode (9 samples, 0.29%)</title><rect x="70.3034%" y="293" width="0.2905%" height="15" fill="rgb(235,182,43)" fg:x="2178" fg:w="9"/><text x="70.5534%" y="303.50"></text></g><g><title>fpregs_assert_state_consistent (1 samples, 0.03%)</title><rect x="70.5617%" y="277" width="0.0323%" height="15" fill="rgb(242,16,51)" fg:x="2186" fg:w="1"/><text x="70.8117%" y="287.50"></text></g><g><title>srso_safe_ret (2 samples, 0.06%)</title><rect x="70.5939%" y="309" width="0.0646%" height="15" fill="rgb(248,9,4)" fg:x="2187" fg:w="2"/><text x="70.8439%" y="319.50"></text></g><g><title>exc_page_fault (782 samples, 25.24%)</title><rect x="45.5132%" y="325" width="25.2421%" height="15" fill="rgb(210,31,22)" fg:x="1410" fg:w="782"/><text x="45.7632%" y="335.50">exc_page_fault</text></g><g><title>up_read (3 samples, 0.10%)</title><rect x="70.6585%" y="309" width="0.0968%" height="15" fill="rgb(239,54,39)" fg:x="2189" fg:w="3"/><text x="70.9085%" y="319.50"></text></g><g><title>irqentry_enter (2 samples, 0.06%)</title><rect x="70.7553%" y="325" width="0.0646%" height="15" fill="rgb(230,99,41)" fg:x="2192" fg:w="2"/><text x="71.0053%" y="335.50"></text></g><g><title>irqentry_exit (1 samples, 0.03%)</title><rect x="70.8199%" y="325" width="0.0323%" height="15" fill="rgb(253,106,12)" fg:x="2194" fg:w="1"/><text x="71.0699%" y="335.50"></text></g><g><title>asm_exc_page_fault (835 samples, 26.95%)</title><rect x="43.9316%" y="341" width="26.9529%" height="15" fill="rgb(213,46,41)" fg:x="1361" fg:w="835"/><text x="44.1816%" y="351.50">asm_exc_page_fault</text></g><g><title>srso_safe_ret (1 samples, 0.03%)</title><rect x="70.8522%" y="325" width="0.0323%" height="15" fill="rgb(215,133,35)" fg:x="2195" fg:w="1"/><text x="71.1022%" y="335.50"></text></g><g><title>error_entry (6 samples, 0.19%)</title><rect x="70.8844%" y="341" width="0.1937%" height="15" fill="rgb(213,28,5)" fg:x="2196" fg:w="6"/><text x="71.1344%" y="351.50"></text></g><g><title>error_return (7 samples, 0.23%)</title><rect x="71.0781%" y="341" width="0.2260%" height="15" fill="rgb(215,77,49)" fg:x="2202" fg:w="7"/><text x="71.3281%" y="351.50"></text></g><g><title>exc_page_fault (1 samples, 0.03%)</title><rect x="71.3041%" y="341" width="0.0323%" height="15" fill="rgb(248,100,22)" fg:x="2209" fg:w="1"/><text x="71.5541%" y="351.50"></text></g><g><title>srso_safe_ret (2 samples, 0.06%)</title><rect x="71.3363%" y="341" width="0.0646%" height="15" fill="rgb(208,67,9)" fg:x="2210" fg:w="2"/><text x="71.5863%" y="351.50"></text></g><g><title>memset (936 samples, 30.21%)</title><rect x="41.5429%" y="357" width="30.2130%" height="15" fill="rgb(219,133,21)" fg:x="1287" fg:w="936"/><text x="41.7929%" y="367.50">memset</text></g><g><title>sync_regs (11 samples, 0.36%)</title><rect x="71.4009%" y="341" width="0.3551%" height="15" fill="rgb(246,46,29)" fg:x="2212" fg:w="11"/><text x="71.6509%" y="351.50"></text></g><g><title>[unknown] (2,224 samples, 71.79%)</title><rect x="0.0000%" y="373" width="71.7883%" height="15" fill="rgb(246,185,52)" fg:x="0" fg:w="2224"/><text x="0.2500%" y="383.50">[unknown]</text></g><g><title>posix.mmap (1 samples, 0.03%)</title><rect x="71.7560%" y="357" width="0.0323%" height="15" fill="rgb(252,136,11)" fg:x="2223" fg:w="1"/><text x="72.0060%" y="367.50"></text></g><g><title>__GI___kill (1 samples, 0.03%)</title><rect x="71.7883%" y="373" width="0.0323%" height="15" fill="rgb(219,138,53)" fg:x="2224" fg:w="1"/><text x="72.0383%" y="383.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="71.7883%" y="357" width="0.0323%" height="15" fill="rgb(211,51,23)" fg:x="2224" fg:w="1"/><text x="72.0383%" y="367.50"></text></g><g><title>do_syscall_64 (1 samples, 0.03%)</title><rect x="71.7883%" y="341" width="0.0323%" height="15" fill="rgb(247,221,28)" fg:x="2224" fg:w="1"/><text x="72.0383%" y="351.50"></text></g><g><title>x64_sys_call (1 samples, 0.03%)</title><rect x="71.7883%" y="325" width="0.0323%" height="15" fill="rgb(251,222,45)" fg:x="2224" fg:w="1"/><text x="72.0383%" y="335.50"></text></g><g><title>__x64_sys_kill (1 samples, 0.03%)</title><rect x="71.7883%" y="309" width="0.0323%" height="15" fill="rgb(217,162,53)" fg:x="2224" fg:w="1"/><text x="72.0383%" y="319.50"></text></g><g><title>kill_something_info (1 samples, 0.03%)</title><rect x="71.7883%" y="293" width="0.0323%" height="15" fill="rgb(229,93,14)" fg:x="2224" fg:w="1"/><text x="72.0383%" y="303.50"></text></g><g><title>find_vpid (1 samples, 0.03%)</title><rect x="71.7883%" y="277" width="0.0323%" height="15" fill="rgb(209,67,49)" fg:x="2224" fg:w="1"/><text x="72.0383%" y="287.50"></text></g><g><title>idr_find (1 samples, 0.03%)</title><rect x="71.7883%" y="261" width="0.0323%" height="15" fill="rgb(213,87,29)" fg:x="2224" fg:w="1"/><text x="72.0383%" y="271.50"></text></g><g><title>radix_tree_lookup (1 samples, 0.03%)</title><rect x="71.7883%" y="245" width="0.0323%" height="15" fill="rgb(205,151,52)" fg:x="2224" fg:w="1"/><text x="72.0383%" y="255.50"></text></g><g><title>__radix_tree_lookup (1 samples, 0.03%)</title><rect x="71.7883%" y="229" width="0.0323%" height="15" fill="rgb(253,215,39)" fg:x="2224" fg:w="1"/><text x="72.0383%" y="239.50"></text></g><g><title>__mmap (1 samples, 0.03%)</title><rect x="71.8205%" y="373" width="0.0323%" height="15" fill="rgb(221,220,41)" fg:x="2225" fg:w="1"/><text x="72.0705%" y="383.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="71.8205%" y="357" width="0.0323%" height="15" fill="rgb(218,133,21)" fg:x="2225" fg:w="1"/><text x="72.0705%" y="367.50"></text></g><g><title>do_syscall_64 (1 samples, 0.03%)</title><rect x="71.8205%" y="341" width="0.0323%" height="15" fill="rgb(221,193,43)" fg:x="2225" fg:w="1"/><text x="72.0705%" y="351.50"></text></g><g><title>x64_sys_call (1 samples, 0.03%)</title><rect x="71.8205%" y="325" width="0.0323%" height="15" fill="rgb(240,128,52)" fg:x="2225" fg:w="1"/><text x="72.0705%" y="335.50"></text></g><g><title>__x64_sys_mmap (1 samples, 0.03%)</title><rect x="71.8205%" y="309" width="0.0323%" height="15" fill="rgb(253,114,12)" fg:x="2225" fg:w="1"/><text x="72.0705%" y="319.50"></text></g><g><title>ksys_mmap_pgoff (1 samples, 0.03%)</title><rect x="71.8205%" y="293" width="0.0323%" height="15" fill="rgb(215,223,47)" fg:x="2225" fg:w="1"/><text x="72.0705%" y="303.50"></text></g><g><title>vm_mmap_pgoff (1 samples, 0.03%)</title><rect x="71.8205%" y="277" width="0.0323%" height="15" fill="rgb(248,225,23)" fg:x="2225" fg:w="1"/><text x="72.0705%" y="287.50"></text></g><g><title>do_mmap (1 samples, 0.03%)</title><rect x="71.8205%" y="261" width="0.0323%" height="15" fill="rgb(250,108,0)" fg:x="2225" fg:w="1"/><text x="72.0705%" y="271.50"></text></g><g><title>mmap_region (1 samples, 0.03%)</title><rect x="71.8205%" y="245" width="0.0323%" height="15" fill="rgb(228,208,7)" fg:x="2225" fg:w="1"/><text x="72.0705%" y="255.50"></text></g><g><title>security_vm_enough_memory_mm (1 samples, 0.03%)</title><rect x="71.8205%" y="229" width="0.0323%" height="15" fill="rgb(244,45,10)" fg:x="2225" fg:w="1"/><text x="72.0705%" y="239.50"></text></g><g><title>cap_vm_enough_memory (1 samples, 0.03%)</title><rect x="71.8205%" y="213" width="0.0323%" height="15" fill="rgb(207,125,25)" fg:x="2225" fg:w="1"/><text x="72.0705%" y="223.50"></text></g><g><title>__munmap (1 samples, 0.03%)</title><rect x="71.8528%" y="373" width="0.0323%" height="15" fill="rgb(210,195,18)" fg:x="2226" fg:w="1"/><text x="72.1028%" y="383.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="71.8528%" y="357" width="0.0323%" height="15" fill="rgb(249,80,12)" fg:x="2226" fg:w="1"/><text x="72.1028%" y="367.50"></text></g><g><title>do_syscall_64 (1 samples, 0.03%)</title><rect x="71.8528%" y="341" width="0.0323%" height="15" fill="rgb(221,65,9)" fg:x="2226" fg:w="1"/><text x="72.1028%" y="351.50"></text></g><g><title>x64_sys_call (1 samples, 0.03%)</title><rect x="71.8528%" y="325" width="0.0323%" height="15" fill="rgb(235,49,36)" fg:x="2226" fg:w="1"/><text x="72.1028%" y="335.50"></text></g><g><title>__x64_sys_munmap (1 samples, 0.03%)</title><rect x="71.8528%" y="309" width="0.0323%" height="15" fill="rgb(225,32,20)" fg:x="2226" fg:w="1"/><text x="72.1028%" y="319.50"></text></g><g><title>__vm_munmap (1 samples, 0.03%)</title><rect x="71.8528%" y="293" width="0.0323%" height="15" fill="rgb(215,141,46)" fg:x="2226" fg:w="1"/><text x="72.1028%" y="303.50"></text></g><g><title>do_vmi_munmap (1 samples, 0.03%)</title><rect x="71.8528%" y="277" width="0.0323%" height="15" fill="rgb(250,160,47)" fg:x="2226" fg:w="1"/><text x="72.1028%" y="287.50"></text></g><g><title>do_vmi_align_munmap (1 samples, 0.03%)</title><rect x="71.8528%" y="261" width="0.0323%" height="15" fill="rgb(216,222,40)" fg:x="2226" fg:w="1"/><text x="72.1028%" y="271.50"></text></g><g><title>unmap_region (1 samples, 0.03%)</title><rect x="71.8528%" y="245" width="0.0323%" height="15" fill="rgb(234,217,39)" fg:x="2226" fg:w="1"/><text x="72.1028%" y="255.50"></text></g><g><title>mlock_drain_local (1 samples, 0.03%)</title><rect x="71.8528%" y="229" width="0.0323%" height="15" fill="rgb(207,178,40)" fg:x="2226" fg:w="1"/><text x="72.1028%" y="239.50"></text></g><g><title>__thp_vma_allowable_orders (1 samples, 0.03%)</title><rect x="80.0839%" y="277" width="0.0323%" height="15" fill="rgb(221,136,13)" fg:x="2481" fg:w="1"/><text x="80.3339%" y="287.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.03%)</title><rect x="80.2776%" y="229" width="0.0323%" height="15" fill="rgb(249,199,10)" fg:x="2487" fg:w="1"/><text x="80.5276%" y="239.50"></text></g><g><title>__pte_offset_map_lock (2 samples, 0.06%)</title><rect x="81.4074%" y="213" width="0.0646%" height="15" fill="rgb(249,222,13)" fg:x="2522" fg:w="2"/><text x="81.6574%" y="223.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="81.4719%" y="213" width="0.0323%" height="15" fill="rgb(244,185,38)" fg:x="2524" fg:w="1"/><text x="81.7219%" y="223.50"></text></g><g><title>next_uptodate_folio (88 samples, 2.84%)</title><rect x="81.5042%" y="213" width="2.8405%" height="15" fill="rgb(236,202,9)" fg:x="2525" fg:w="88"/><text x="81.7542%" y="223.50">ne..</text></g><g><title>xas_find (5 samples, 0.16%)</title><rect x="84.1833%" y="197" width="0.1614%" height="15" fill="rgb(250,229,37)" fg:x="2608" fg:w="5"/><text x="84.4333%" y="207.50"></text></g><g><title>xas_load (3 samples, 0.10%)</title><rect x="84.2479%" y="181" width="0.0968%" height="15" fill="rgb(206,174,23)" fg:x="2610" fg:w="3"/><text x="84.4979%" y="191.50"></text></g><g><title>percpu_counter_add_batch (1 samples, 0.03%)</title><rect x="84.3447%" y="213" width="0.0323%" height="15" fill="rgb(211,33,43)" fg:x="2613" fg:w="1"/><text x="84.5947%" y="223.50"></text></g><g><title>folio_add_file_rmap_ptes (11 samples, 0.36%)</title><rect x="85.6359%" y="197" width="0.3551%" height="15" fill="rgb(245,58,50)" fg:x="2653" fg:w="11"/><text x="85.8859%" y="207.50"></text></g><g><title>native_set_pte (3 samples, 0.10%)</title><rect x="85.9910%" y="197" width="0.0968%" height="15" fill="rgb(244,68,36)" fg:x="2664" fg:w="3"/><text x="86.2410%" y="207.50"></text></g><g><title>percpu_counter_add_batch (4 samples, 0.13%)</title><rect x="86.0878%" y="197" width="0.1291%" height="15" fill="rgb(232,229,15)" fg:x="2667" fg:w="4"/><text x="86.3378%" y="207.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.03%)</title><rect x="86.1846%" y="181" width="0.0323%" height="15" fill="rgb(254,30,23)" fg:x="2670" fg:w="1"/><text x="86.4346%" y="191.50"></text></g><g><title>set_ptes.constprop.0 (24 samples, 0.77%)</title><rect x="86.2169%" y="197" width="0.7747%" height="15" fill="rgb(235,160,14)" fg:x="2671" fg:w="24"/><text x="86.4669%" y="207.50"></text></g><g><title>set_pte_range (84 samples, 2.71%)</title><rect x="84.3770%" y="213" width="2.7114%" height="15" fill="rgb(212,155,44)" fg:x="2614" fg:w="84"/><text x="84.6270%" y="223.50">se..</text></g><g><title>srso_safe_ret (3 samples, 0.10%)</title><rect x="86.9916%" y="197" width="0.0968%" height="15" fill="rgb(226,2,50)" fg:x="2695" fg:w="3"/><text x="87.2416%" y="207.50"></text></g><g><title>set_ptes.constprop.0 (2 samples, 0.06%)</title><rect x="87.0884%" y="213" width="0.0646%" height="15" fill="rgb(234,177,6)" fg:x="2698" fg:w="2"/><text x="87.3384%" y="223.50"></text></g><g><title>srso_return_thunk (3 samples, 0.10%)</title><rect x="87.1530%" y="213" width="0.0968%" height="15" fill="rgb(217,24,9)" fg:x="2700" fg:w="3"/><text x="87.4030%" y="223.50"></text></g><g><title>filemap_map_pages (224 samples, 7.23%)</title><rect x="80.3099%" y="229" width="7.2305%" height="15" fill="rgb(220,13,46)" fg:x="2488" fg:w="224"/><text x="80.5599%" y="239.50">filemap_ma..</text></g><g><title>srso_safe_ret (9 samples, 0.29%)</title><rect x="87.2498%" y="213" width="0.2905%" height="15" fill="rgb(239,221,27)" fg:x="2703" fg:w="9"/><text x="87.4998%" y="223.50"></text></g><g><title>next_uptodate_folio (2 samples, 0.06%)</title><rect x="87.5403%" y="229" width="0.0646%" height="15" fill="rgb(222,198,25)" fg:x="2712" fg:w="2"/><text x="87.7903%" y="239.50"></text></g><g><title>__memcg_kmem_charge_page (2 samples, 0.06%)</title><rect x="87.6049%" y="165" width="0.0646%" height="15" fill="rgb(211,99,13)" fg:x="2714" fg:w="2"/><text x="87.8549%" y="175.50"></text></g><g><title>try_charge_memcg (1 samples, 0.03%)</title><rect x="87.6372%" y="149" width="0.0323%" height="15" fill="rgb(232,111,31)" fg:x="2715" fg:w="1"/><text x="87.8872%" y="159.50"></text></g><g><title>consume_stock (1 samples, 0.03%)</title><rect x="87.6372%" y="133" width="0.0323%" height="15" fill="rgb(245,82,37)" fg:x="2715" fg:w="1"/><text x="87.8872%" y="143.50"></text></g><g><title>clear_page_rep (1 samples, 0.03%)</title><rect x="87.6695%" y="149" width="0.0323%" height="15" fill="rgb(227,149,46)" fg:x="2716" fg:w="1"/><text x="87.9195%" y="159.50"></text></g><g><title>pte_alloc_one (4 samples, 0.13%)</title><rect x="87.6049%" y="229" width="0.1291%" height="15" fill="rgb(218,36,50)" fg:x="2714" fg:w="4"/><text x="87.8549%" y="239.50"></text></g><g><title>alloc_pages (4 samples, 0.13%)</title><rect x="87.6049%" y="213" width="0.1291%" height="15" fill="rgb(226,80,48)" fg:x="2714" fg:w="4"/><text x="87.8549%" y="223.50"></text></g><g><title>alloc_pages_mpol (4 samples, 0.13%)</title><rect x="87.6049%" y="197" width="0.1291%" height="15" fill="rgb(238,224,15)" fg:x="2714" fg:w="4"/><text x="87.8549%" y="207.50"></text></g><g><title>__alloc_pages (4 samples, 0.13%)</title><rect x="87.6049%" y="181" width="0.1291%" height="15" fill="rgb(241,136,10)" fg:x="2714" fg:w="4"/><text x="87.8549%" y="191.50"></text></g><g><title>get_page_from_freelist (2 samples, 0.06%)</title><rect x="87.6695%" y="165" width="0.0646%" height="15" fill="rgb(208,32,45)" fg:x="2716" fg:w="2"/><text x="87.9195%" y="175.50"></text></g><g><title>rmqueue (1 samples, 0.03%)</title><rect x="87.7017%" y="149" width="0.0323%" height="15" fill="rgb(207,135,9)" fg:x="2717" fg:w="1"/><text x="87.9517%" y="159.50"></text></g><g><title>__rmqueue_pcplist (1 samples, 0.03%)</title><rect x="87.7017%" y="133" width="0.0323%" height="15" fill="rgb(206,86,44)" fg:x="2717" fg:w="1"/><text x="87.9517%" y="143.50"></text></g><g><title>rmqueue_bulk (1 samples, 0.03%)</title><rect x="87.7017%" y="117" width="0.0323%" height="15" fill="rgb(245,177,15)" fg:x="2717" fg:w="1"/><text x="87.9517%" y="127.50"></text></g><g><title>do_read_fault (238 samples, 7.68%)</title><rect x="80.2453%" y="245" width="7.6824%" height="15" fill="rgb(206,64,50)" fg:x="2486" fg:w="238"/><text x="80.4953%" y="255.50">do_read_fau..</text></g><g><title>set_pte_range (6 samples, 0.19%)</title><rect x="87.7340%" y="229" width="0.1937%" height="15" fill="rgb(234,36,40)" fg:x="2718" fg:w="6"/><text x="87.9840%" y="239.50"></text></g><g><title>do_fault (242 samples, 7.81%)</title><rect x="80.1808%" y="261" width="7.8115%" height="15" fill="rgb(213,64,8)" fg:x="2484" fg:w="242"/><text x="80.4308%" y="271.50">do_fault</text></g><g><title>filemap_map_pages (2 samples, 0.06%)</title><rect x="87.9277%" y="245" width="0.0646%" height="15" fill="rgb(210,75,36)" fg:x="2724" fg:w="2"/><text x="88.1777%" y="255.50"></text></g><g><title>__handle_mm_fault (258 samples, 8.33%)</title><rect x="79.7934%" y="293" width="8.3280%" height="15" fill="rgb(229,88,21)" fg:x="2472" fg:w="258"/><text x="80.0434%" y="303.50">__handle_mm_..</text></g><g><title>handle_pte_fault (248 samples, 8.01%)</title><rect x="80.1162%" y="277" width="8.0052%" height="15" fill="rgb(252,204,47)" fg:x="2482" fg:w="248"/><text x="80.3662%" y="287.50">handle_pte_..</text></g><g><title>pte_offset_map_nolock (4 samples, 0.13%)</title><rect x="87.9923%" y="261" width="0.1291%" height="15" fill="rgb(208,77,27)" fg:x="2726" fg:w="4"/><text x="88.2423%" y="271.50"></text></g><g><title>__pte_offset_map (2 samples, 0.06%)</title><rect x="88.0568%" y="245" width="0.0646%" height="15" fill="rgb(221,76,26)" fg:x="2728" fg:w="2"/><text x="88.3068%" y="255.50"></text></g><g><title>handle_mm_fault (265 samples, 8.55%)</title><rect x="79.6643%" y="309" width="8.5539%" height="15" fill="rgb(225,139,18)" fg:x="2468" fg:w="265"/><text x="79.9143%" y="319.50">handle_mm_fa..</text></g><g><title>count_memcg_events.constprop.0 (3 samples, 0.10%)</title><rect x="88.1214%" y="293" width="0.0968%" height="15" fill="rgb(230,137,11)" fg:x="2730" fg:w="3"/><text x="88.3714%" y="303.50"></text></g><g><title>__count_memcg_events (1 samples, 0.03%)</title><rect x="88.1859%" y="277" width="0.0323%" height="15" fill="rgb(212,28,1)" fg:x="2732" fg:w="1"/><text x="88.4359%" y="287.50"></text></g><g><title>lock_vma_under_rcu (6 samples, 0.19%)</title><rect x="88.2182%" y="309" width="0.1937%" height="15" fill="rgb(248,164,17)" fg:x="2733" fg:w="6"/><text x="88.4682%" y="319.50"></text></g><g><title>mas_walk (2 samples, 0.06%)</title><rect x="88.3473%" y="293" width="0.0646%" height="15" fill="rgb(222,171,42)" fg:x="2737" fg:w="2"/><text x="88.5973%" y="303.50"></text></g><g><title>do_user_addr_fault (274 samples, 8.84%)</title><rect x="79.5997%" y="325" width="8.8444%" height="15" fill="rgb(243,84,45)" fg:x="2466" fg:w="274"/><text x="79.8497%" y="335.50">do_user_addr..</text></g><g><title>srso_safe_ret (1 samples, 0.03%)</title><rect x="88.4119%" y="309" width="0.0323%" height="15" fill="rgb(252,49,23)" fg:x="2739" fg:w="1"/><text x="88.6619%" y="319.50"></text></g><g><title>irqentry_enter (1 samples, 0.03%)</title><rect x="88.4442%" y="325" width="0.0323%" height="15" fill="rgb(215,19,7)" fg:x="2740" fg:w="1"/><text x="88.6942%" y="335.50"></text></g><g><title>amd_clear_divider (1 samples, 0.03%)</title><rect x="88.4764%" y="309" width="0.0323%" height="15" fill="rgb(238,81,41)" fg:x="2741" fg:w="1"/><text x="88.7264%" y="319.50"></text></g><g><title>exc_page_fault (284 samples, 9.17%)</title><rect x="79.5029%" y="341" width="9.1672%" height="15" fill="rgb(210,199,37)" fg:x="2463" fg:w="284"/><text x="79.7529%" y="351.50">exc_page_fault</text></g><g><title>irqentry_exit (6 samples, 0.19%)</title><rect x="88.4764%" y="325" width="0.1937%" height="15" fill="rgb(244,192,49)" fg:x="2741" fg:w="6"/><text x="88.7264%" y="335.50"></text></g><g><title>irqentry_exit_to_user_mode (5 samples, 0.16%)</title><rect x="88.5087%" y="309" width="0.1614%" height="15" fill="rgb(226,211,11)" fg:x="2742" fg:w="5"/><text x="88.7587%" y="319.50"></text></g><g><title>asm_exc_page_fault (291 samples, 9.39%)</title><rect x="79.3415%" y="357" width="9.3932%" height="15" fill="rgb(236,162,54)" fg:x="2458" fg:w="291"/><text x="79.5915%" y="367.50">asm_exc_page_..</text></g><g><title>irqentry_exit (2 samples, 0.06%)</title><rect x="88.6701%" y="341" width="0.0646%" height="15" fill="rgb(220,229,9)" fg:x="2747" fg:w="2"/><text x="88.9201%" y="351.50"></text></g><g><title>accountsdb.accounts_file.AccountFile.readAccount (525 samples, 16.95%)</title><rect x="71.8851%" y="373" width="16.9464%" height="15" fill="rgb(250,87,22)" fg:x="2227" fg:w="525"/><text x="72.1351%" y="383.50">accountsdb.accounts_file.A..</text></g><g><title>error_entry (3 samples, 0.10%)</title><rect x="88.7347%" y="357" width="0.0968%" height="15" fill="rgb(239,43,17)" fg:x="2749" fg:w="3"/><text x="88.9847%" y="367.50"></text></g><g><title>accountsdb.db.AccountsDB.putAccountFile (1 samples, 0.03%)</title><rect x="88.8315%" y="373" width="0.0323%" height="15" fill="rgb(231,177,25)" fg:x="2752" fg:w="1"/><text x="89.0815%" y="383.50"></text></g><g><title>access_error (1 samples, 0.03%)</title><rect x="98.1601%" y="325" width="0.0323%" height="15" fill="rgb(219,179,1)" fg:x="3041" fg:w="1"/><text x="98.4101%" y="335.50"></text></g><g><title>next_uptodate_folio (16 samples, 0.52%)</title><rect x="98.3538%" y="213" width="0.5165%" height="15" fill="rgb(238,219,53)" fg:x="3047" fg:w="16"/><text x="98.6038%" y="223.50"></text></g><g><title>xas_find (1 samples, 0.03%)</title><rect x="98.8380%" y="197" width="0.0323%" height="15" fill="rgb(232,167,36)" fg:x="3062" fg:w="1"/><text x="99.0880%" y="207.50"></text></g><g><title>xas_load (1 samples, 0.03%)</title><rect x="98.8380%" y="181" width="0.0323%" height="15" fill="rgb(244,19,51)" fg:x="3062" fg:w="1"/><text x="99.0880%" y="191.50"></text></g><g><title>xas_descend (1 samples, 0.03%)</title><rect x="98.8380%" y="165" width="0.0323%" height="15" fill="rgb(224,6,22)" fg:x="3062" fg:w="1"/><text x="99.0880%" y="175.50"></text></g><g><title>folio_add_file_rmap_ptes (1 samples, 0.03%)</title><rect x="99.1607%" y="197" width="0.0323%" height="15" fill="rgb(224,145,5)" fg:x="3072" fg:w="1"/><text x="99.4107%" y="207.50"></text></g><g><title>percpu_counter_add_batch (1 samples, 0.03%)</title><rect x="99.1930%" y="197" width="0.0323%" height="15" fill="rgb(234,130,49)" fg:x="3073" fg:w="1"/><text x="99.4430%" y="207.50"></text></g><g><title>set_pte_range (12 samples, 0.39%)</title><rect x="98.8702%" y="213" width="0.3873%" height="15" fill="rgb(254,6,2)" fg:x="3063" fg:w="12"/><text x="99.1202%" y="223.50"></text></g><g><title>srso_safe_ret (1 samples, 0.03%)</title><rect x="99.2253%" y="197" width="0.0323%" height="15" fill="rgb(208,96,46)" fg:x="3074" fg:w="1"/><text x="99.4753%" y="207.50"></text></g><g><title>filemap_map_pages (34 samples, 1.10%)</title><rect x="98.2892%" y="229" width="1.0975%" height="15" fill="rgb(239,3,39)" fg:x="3045" fg:w="34"/><text x="98.5392%" y="239.50"></text></g><g><title>srso_safe_ret (4 samples, 0.13%)</title><rect x="99.2576%" y="213" width="0.1291%" height="15" fill="rgb(233,210,1)" fg:x="3075" fg:w="4"/><text x="99.5076%" y="223.50"></text></g><g><title>__handle_mm_fault (37 samples, 1.19%)</title><rect x="98.2247%" y="293" width="1.1943%" height="15" fill="rgb(244,137,37)" fg:x="3043" fg:w="37"/><text x="98.4747%" y="303.50"></text></g><g><title>handle_pte_fault (37 samples, 1.19%)</title><rect x="98.2247%" y="277" width="1.1943%" height="15" fill="rgb(240,136,2)" fg:x="3043" fg:w="37"/><text x="98.4747%" y="287.50"></text></g><g><title>do_fault (35 samples, 1.13%)</title><rect x="98.2892%" y="261" width="1.1298%" height="15" fill="rgb(239,18,37)" fg:x="3045" fg:w="35"/><text x="98.5392%" y="271.50"></text></g><g><title>do_read_fault (35 samples, 1.13%)</title><rect x="98.2892%" y="245" width="1.1298%" height="15" fill="rgb(218,185,22)" fg:x="3045" fg:w="35"/><text x="98.5392%" y="255.50"></text></g><g><title>set_pte_range (1 samples, 0.03%)</title><rect x="99.3867%" y="229" width="0.0323%" height="15" fill="rgb(225,218,4)" fg:x="3079" fg:w="1"/><text x="99.6367%" y="239.50"></text></g><g><title>count_memcg_events.constprop.0 (1 samples, 0.03%)</title><rect x="99.4190%" y="293" width="0.0323%" height="15" fill="rgb(230,182,32)" fg:x="3080" fg:w="1"/><text x="99.6690%" y="303.50"></text></g><g><title>__count_memcg_events (1 samples, 0.03%)</title><rect x="99.4190%" y="277" width="0.0323%" height="15" fill="rgb(242,56,43)" fg:x="3080" fg:w="1"/><text x="99.6690%" y="287.50"></text></g><g><title>handle_mm_fault (39 samples, 1.26%)</title><rect x="98.2247%" y="309" width="1.2589%" height="15" fill="rgb(233,99,24)" fg:x="3043" fg:w="39"/><text x="98.4747%" y="319.50"></text></g><g><title>pud_val (1 samples, 0.03%)</title><rect x="99.4513%" y="293" width="0.0323%" height="15" fill="rgb(234,209,42)" fg:x="3081" fg:w="1"/><text x="99.7013%" y="303.50"></text></g><g><title>accountsdb.index.AccountIndex.validateAccountFile (330 samples, 10.65%)</title><rect x="88.8638%" y="373" width="10.6520%" height="15" fill="rgb(227,7,12)" fg:x="2753" fg:w="330"/><text x="89.1138%" y="383.50">accountsdb.index..</text></g><g><title>asm_exc_page_fault (42 samples, 1.36%)</title><rect x="98.1601%" y="357" width="1.3557%" height="15" fill="rgb(245,203,43)" fg:x="3041" fg:w="42"/><text x="98.4101%" y="367.50"></text></g><g><title>exc_page_fault (42 samples, 1.36%)</title><rect x="98.1601%" y="341" width="1.3557%" height="15" fill="rgb(238,205,33)" fg:x="3041" fg:w="42"/><text x="98.4101%" y="351.50"></text></g><g><title>do_user_addr_fault (41 samples, 1.32%)</title><rect x="98.1924%" y="325" width="1.3234%" height="15" fill="rgb(231,56,7)" fg:x="3042" fg:w="41"/><text x="98.4424%" y="335.50"></text></g><g><title>lock_vma_under_rcu (1 samples, 0.03%)</title><rect x="99.4835%" y="309" width="0.0323%" height="15" fill="rgb(244,186,29)" fg:x="3082" fg:w="1"/><text x="99.7335%" y="319.50"></text></g><g><title>mas_walk (1 samples, 0.03%)</title><rect x="99.4835%" y="293" width="0.0323%" height="15" fill="rgb(234,111,31)" fg:x="3082" fg:w="1"/><text x="99.7335%" y="303.50"></text></g><g><title>bincode.bincode.write__anon_17951 (1 samples, 0.03%)</title><rect x="99.5158%" y="373" width="0.0323%" height="15" fill="rgb(241,149,10)" fg:x="3083" fg:w="1"/><text x="99.7658%" y="383.50"></text></g><g><title>accountsdb.index.AccountIndex.indexRefIfNotDuplicateSlot (1 samples, 0.03%)</title><rect x="99.5158%" y="357" width="0.0323%" height="15" fill="rgb(249,206,44)" fg:x="3083" fg:w="1"/><text x="99.7658%" y="367.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (1 samples, 0.03%)</title><rect x="99.5481%" y="373" width="0.0323%" height="15" fill="rgb(251,153,30)" fg:x="3084" fg:w="1"/><text x="99.7981%" y="383.50"></text></g><g><title>[[vdso]] (1 samples, 0.03%)</title><rect x="99.5481%" y="357" width="0.0323%" height="15" fill="rgb(239,152,38)" fg:x="3084" fg:w="1"/><text x="99.7981%" y="367.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.03%)</title><rect x="99.5481%" y="341" width="0.0323%" height="15" fill="rgb(249,139,47)" fg:x="3084" fg:w="1"/><text x="99.7981%" y="351.50"></text></g><g><title>exc_page_fault (1 samples, 0.03%)</title><rect x="99.5481%" y="325" width="0.0323%" height="15" fill="rgb(244,64,35)" fg:x="3084" fg:w="1"/><text x="99.7981%" y="335.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.03%)</title><rect x="99.5481%" y="309" width="0.0323%" height="15" fill="rgb(216,46,15)" fg:x="3084" fg:w="1"/><text x="99.7981%" y="319.50"></text></g><g><title>handle_mm_fault (1 samples, 0.03%)</title><rect x="99.5481%" y="293" width="0.0323%" height="15" fill="rgb(250,74,19)" fg:x="3084" fg:w="1"/><text x="99.7981%" y="303.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.03%)</title><rect x="99.5481%" y="277" width="0.0323%" height="15" fill="rgb(249,42,33)" fg:x="3084" fg:w="1"/><text x="99.7981%" y="287.50"></text></g><g><title>handle_pte_fault (1 samples, 0.03%)</title><rect x="99.5481%" y="261" width="0.0323%" height="15" fill="rgb(242,149,17)" fg:x="3084" fg:w="1"/><text x="99.7981%" y="271.50"></text></g><g><title>do_fault (1 samples, 0.03%)</title><rect x="99.5481%" y="245" width="0.0323%" height="15" fill="rgb(244,29,21)" fg:x="3084" fg:w="1"/><text x="99.7981%" y="255.50"></text></g><g><title>do_read_fault (1 samples, 0.03%)</title><rect x="99.5481%" y="229" width="0.0323%" height="15" fill="rgb(220,130,37)" fg:x="3084" fg:w="1"/><text x="99.7981%" y="239.50"></text></g><g><title>__do_fault (1 samples, 0.03%)</title><rect x="99.5481%" y="213" width="0.0323%" height="15" fill="rgb(211,67,2)" fg:x="3084" fg:w="1"/><text x="99.7981%" y="223.50"></text></g><g><title>special_mapping_fault (1 samples, 0.03%)</title><rect x="99.5481%" y="197" width="0.0323%" height="15" fill="rgb(235,68,52)" fg:x="3084" fg:w="1"/><text x="99.7981%" y="207.50"></text></g><g><title>vvar_fault (1 samples, 0.03%)</title><rect x="99.5481%" y="181" width="0.0323%" height="15" fill="rgb(246,142,3)" fg:x="3084" fg:w="1"/><text x="99.7981%" y="191.50"></text></g><g><title>vmf_insert_pfn (1 samples, 0.03%)</title><rect x="99.5481%" y="165" width="0.0323%" height="15" fill="rgb(241,25,7)" fg:x="3084" fg:w="1"/><text x="99.7981%" y="175.50"></text></g><g><title>vmf_insert_pfn_prot (1 samples, 0.03%)</title><rect x="99.5481%" y="149" width="0.0323%" height="15" fill="rgb(242,119,39)" fg:x="3084" fg:w="1"/><text x="99.7981%" y="159.50"></text></g><g><title>track_pfn_insert (1 samples, 0.03%)</title><rect x="99.5481%" y="133" width="0.0323%" height="15" fill="rgb(241,98,45)" fg:x="3084" fg:w="1"/><text x="99.7981%" y="143.50"></text></g><g><title>lookup_memtype (1 samples, 0.03%)</title><rect x="99.5481%" y="117" width="0.0323%" height="15" fill="rgb(254,28,30)" fg:x="3084" fg:w="1"/><text x="99.7981%" y="127.50"></text></g><g><title>pat_pagerange_is_ram (1 samples, 0.03%)</title><rect x="99.5481%" y="101" width="0.0323%" height="15" fill="rgb(241,142,54)" fg:x="3084" fg:w="1"/><text x="99.7981%" y="111.50"></text></g><g><title>walk_system_ram_range (1 samples, 0.03%)</title><rect x="99.5481%" y="85" width="0.0323%" height="15" fill="rgb(222,85,15)" fg:x="3084" fg:w="1"/><text x="99.7981%" y="95.50"></text></g><g><title>find_next_iomem_res (1 samples, 0.03%)</title><rect x="99.5481%" y="69" width="0.0323%" height="15" fill="rgb(210,85,47)" fg:x="3084" fg:w="1"/><text x="99.7981%" y="79.50"></text></g><g><title>syscall_exit_to_user_mode (1 samples, 0.03%)</title><rect x="99.5804%" y="325" width="0.0323%" height="15" fill="rgb(224,206,25)" fg:x="3085" fg:w="1"/><text x="99.8304%" y="335.50"></text></g><g><title>ctx_sched_in (6 samples, 0.19%)</title><rect x="99.6127%" y="181" width="0.1937%" height="15" fill="rgb(243,201,19)" fg:x="3086" fg:w="6"/><text x="99.8627%" y="191.50"></text></g><g><title>ctx_groups_sched_in (5 samples, 0.16%)</title><rect x="99.6449%" y="165" width="0.1614%" height="15" fill="rgb(236,59,4)" fg:x="3087" fg:w="5"/><text x="99.8949%" y="175.50"></text></g><g><title>visit_groups_merge.constprop.0.isra.0 (5 samples, 0.16%)</title><rect x="99.6449%" y="149" width="0.1614%" height="15" fill="rgb(254,179,45)" fg:x="3087" fg:w="5"/><text x="99.8949%" y="159.50"></text></g><g><title>clock_nanosleep@GLIBC_2.2.5 (8 samples, 0.26%)</title><rect x="99.5804%" y="373" width="0.2582%" height="15" fill="rgb(226,14,10)" fg:x="3085" fg:w="8"/><text x="99.8304%" y="383.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (8 samples, 0.26%)</title><rect x="99.5804%" y="357" width="0.2582%" height="15" fill="rgb(244,27,41)" fg:x="3085" fg:w="8"/><text x="99.8304%" y="367.50"></text></g><g><title>do_syscall_64 (8 samples, 0.26%)</title><rect x="99.5804%" y="341" width="0.2582%" height="15" fill="rgb(235,35,32)" fg:x="3085" fg:w="8"/><text x="99.8304%" y="351.50"></text></g><g><title>x64_sys_call (7 samples, 0.23%)</title><rect x="99.6127%" y="325" width="0.2260%" height="15" fill="rgb(218,68,31)" fg:x="3086" fg:w="7"/><text x="99.8627%" y="335.50"></text></g><g><title>__x64_sys_clock_nanosleep (7 samples, 0.23%)</title><rect x="99.6127%" y="309" width="0.2260%" height="15" fill="rgb(207,120,37)" fg:x="3086" fg:w="7"/><text x="99.8627%" y="319.50"></text></g><g><title>common_nsleep (7 samples, 0.23%)</title><rect x="99.6127%" y="293" width="0.2260%" height="15" fill="rgb(227,98,0)" fg:x="3086" fg:w="7"/><text x="99.8627%" y="303.50"></text></g><g><title>hrtimer_nanosleep (7 samples, 0.23%)</title><rect x="99.6127%" y="277" width="0.2260%" height="15" fill="rgb(207,7,3)" fg:x="3086" fg:w="7"/><text x="99.8627%" y="287.50"></text></g><g><title>do_nanosleep (7 samples, 0.23%)</title><rect x="99.6127%" y="261" width="0.2260%" height="15" fill="rgb(206,98,19)" fg:x="3086" fg:w="7"/><text x="99.8627%" y="271.50"></text></g><g><title>schedule (7 samples, 0.23%)</title><rect x="99.6127%" y="245" width="0.2260%" height="15" fill="rgb(217,5,26)" fg:x="3086" fg:w="7"/><text x="99.8627%" y="255.50"></text></g><g><title>__schedule (7 samples, 0.23%)</title><rect x="99.6127%" y="229" width="0.2260%" height="15" fill="rgb(235,190,38)" fg:x="3086" fg:w="7"/><text x="99.8627%" y="239.50"></text></g><g><title>finish_task_switch.isra.0 (7 samples, 0.23%)</title><rect x="99.6127%" y="213" width="0.2260%" height="15" fill="rgb(247,86,24)" fg:x="3086" fg:w="7"/><text x="99.8627%" y="223.50"></text></g><g><title>__perf_event_task_sched_in (7 samples, 0.23%)</title><rect x="99.6127%" y="197" width="0.2260%" height="15" fill="rgb(205,101,16)" fg:x="3086" fg:w="7"/><text x="99.8627%" y="207.50"></text></g><g><title>perf_ctx_enable (1 samples, 0.03%)</title><rect x="99.8063%" y="181" width="0.0323%" height="15" fill="rgb(246,168,33)" fg:x="3092" fg:w="1"/><text x="100.0563%" y="191.50"></text></g><g><title>memset (3 samples, 0.10%)</title><rect x="99.8386%" y="373" width="0.0968%" height="15" fill="rgb(231,114,1)" fg:x="3093" fg:w="3"/><text x="100.0886%" y="383.50"></text></g><g><title>asm_exc_page_fault (2 samples, 0.06%)</title><rect x="99.8709%" y="357" width="0.0646%" height="15" fill="rgb(207,184,53)" fg:x="3094" fg:w="2"/><text x="100.1209%" y="367.50"></text></g><g><title>exc_page_fault (2 samples, 0.06%)</title><rect x="99.8709%" y="341" width="0.0646%" height="15" fill="rgb(224,95,51)" fg:x="3094" fg:w="2"/><text x="100.1209%" y="351.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.06%)</title><rect x="99.8709%" y="325" width="0.0646%" height="15" fill="rgb(212,188,45)" fg:x="3094" fg:w="2"/><text x="100.1209%" y="335.50"></text></g><g><title>handle_mm_fault (2 samples, 0.06%)</title><rect x="99.8709%" y="309" width="0.0646%" height="15" fill="rgb(223,154,38)" fg:x="3094" fg:w="2"/><text x="100.1209%" y="319.50"></text></g><g><title>__handle_mm_fault (2 samples, 0.06%)</title><rect x="99.8709%" y="293" width="0.0646%" height="15" fill="rgb(251,22,52)" fg:x="3094" fg:w="2"/><text x="100.1209%" y="303.50"></text></g><g><title>handle_pte_fault (2 samples, 0.06%)</title><rect x="99.8709%" y="277" width="0.0646%" height="15" fill="rgb(229,209,22)" fg:x="3094" fg:w="2"/><text x="100.1209%" y="287.50"></text></g><g><title>do_anonymous_page (2 samples, 0.06%)</title><rect x="99.8709%" y="261" width="0.0646%" height="15" fill="rgb(234,138,34)" fg:x="3094" fg:w="2"/><text x="100.1209%" y="271.50"></text></g><g><title>alloc_anon_folio (2 samples, 0.06%)</title><rect x="99.8709%" y="245" width="0.0646%" height="15" fill="rgb(212,95,11)" fg:x="3094" fg:w="2"/><text x="100.1209%" y="255.50"></text></g><g><title>vma_alloc_folio (2 samples, 0.06%)</title><rect x="99.8709%" y="229" width="0.0646%" height="15" fill="rgb(240,179,47)" fg:x="3094" fg:w="2"/><text x="100.1209%" y="239.50"></text></g><g><title>alloc_pages_mpol (2 samples, 0.06%)</title><rect x="99.8709%" y="213" width="0.0646%" height="15" fill="rgb(240,163,11)" fg:x="3094" fg:w="2"/><text x="100.1209%" y="223.50"></text></g><g><title>__alloc_pages (2 samples, 0.06%)</title><rect x="99.8709%" y="197" width="0.0646%" height="15" fill="rgb(236,37,12)" fg:x="3094" fg:w="2"/><text x="100.1209%" y="207.50"></text></g><g><title>get_page_from_freelist (2 samples, 0.06%)</title><rect x="99.8709%" y="181" width="0.0646%" height="15" fill="rgb(232,164,16)" fg:x="3094" fg:w="2"/><text x="100.1209%" y="191.50"></text></g><g><title>rmqueue (2 samples, 0.06%)</title><rect x="99.8709%" y="165" width="0.0646%" height="15" fill="rgb(244,205,15)" fg:x="3094" fg:w="2"/><text x="100.1209%" y="175.50"></text></g><g><title>__rmqueue_pcplist (2 samples, 0.06%)</title><rect x="99.8709%" y="149" width="0.0646%" height="15" fill="rgb(223,117,47)" fg:x="3094" fg:w="2"/><text x="100.1209%" y="159.50"></text></g><g><title>rmqueue_bulk (2 samples, 0.06%)</title><rect x="99.8709%" y="133" width="0.0646%" height="15" fill="rgb(244,107,35)" fg:x="3094" fg:w="2"/><text x="100.1209%" y="143.50"></text></g><g><title>multi_array_list.MultiArrayList (1 samples, 0.03%)</title><rect x="99.9354%" y="373" width="0.0323%" height="15" fill="rgb(205,140,8)" fg:x="3096" fg:w="1"/><text x="100.1854%" y="383.50"></text></g><g><title>accountsdb.index.AccountIndex.indexRefIfNotDuplicateSlot (1 samples, 0.03%)</title><rect x="99.9354%" y="357" width="0.0323%" height="15" fill="rgb(228,84,46)" fg:x="3096" fg:w="1"/><text x="100.1854%" y="367.50"></text></g><g><title>all (3,098 samples, 100%)</title><rect x="0.0000%" y="405" width="100.0000%" height="15" fill="rgb(254,188,9)" fg:x="0" fg:w="3098"/><text x="0.2500%" y="415.50"></text></g><g><title>benchmark (3,098 samples, 100.00%)</title><rect x="0.0000%" y="389" width="100.0000%" height="15" fill="rgb(206,112,54)" fg:x="0" fg:w="3098"/><text x="0.2500%" y="399.50">benchmark</text></g><g><title>time.Timer.start (1 samples, 0.03%)</title><rect x="99.9677%" y="373" width="0.0323%" height="15" fill="rgb(216,84,49)" fg:x="3097" fg:w="1"/><text x="100.2177%" y="383.50"></text></g></svg></svg>