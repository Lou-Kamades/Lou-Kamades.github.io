<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="470" onload="init(evt)" viewBox="0 0 1200 470" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="470" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="453.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="453.00"> </text><svg id="frames" x="10" width="1180" total_samples="10201"><g><title>Thread.RwLock.DefaultRwLock.lock (283 samples, 2.77%)</title><rect x="0.0000%" y="373" width="2.7742%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="283"/><text x="0.2500%" y="383.50">Th..</text></g><g><title>asm_exc_page_fault (3 samples, 0.03%)</title><rect x="2.7742%" y="357" width="0.0294%" height="15" fill="rgb(217,0,24)" fg:x="283" fg:w="3"/><text x="3.0242%" y="367.50"></text></g><g><title>mas_empty_area_rev (4 samples, 0.04%)</title><rect x="2.9213%" y="181" width="0.0392%" height="15" fill="rgb(221,193,54)" fg:x="298" fg:w="4"/><text x="3.1713%" y="191.50"></text></g><g><title>arch_get_unmapped_area_topdown (11 samples, 0.11%)</title><rect x="2.8723%" y="213" width="0.1078%" height="15" fill="rgb(248,212,6)" fg:x="293" fg:w="11"/><text x="3.1223%" y="223.50"></text></g><g><title>vm_unmapped_area (8 samples, 0.08%)</title><rect x="2.9017%" y="197" width="0.0784%" height="15" fill="rgb(208,68,35)" fg:x="296" fg:w="8"/><text x="3.1517%" y="207.50"></text></g><g><title>mas_next (2 samples, 0.02%)</title><rect x="2.9605%" y="181" width="0.0196%" height="15" fill="rgb(232,128,0)" fg:x="302" fg:w="2"/><text x="3.2105%" y="191.50"></text></g><g><title>get_unmapped_area (13 samples, 0.13%)</title><rect x="2.8625%" y="245" width="0.1274%" height="15" fill="rgb(207,160,47)" fg:x="292" fg:w="13"/><text x="3.1125%" y="255.50"></text></g><g><title>thp_get_unmapped_area (13 samples, 0.13%)</title><rect x="2.8625%" y="229" width="0.1274%" height="15" fill="rgb(228,23,34)" fg:x="292" fg:w="13"/><text x="3.1125%" y="239.50"></text></g><g><title>cap_vm_enough_memory (2 samples, 0.02%)</title><rect x="3.0487%" y="229" width="0.0196%" height="15" fill="rgb(218,30,26)" fg:x="311" fg:w="2"/><text x="3.2987%" y="239.50"></text></g><g><title>perf_event_mmap_event (5 samples, 0.05%)</title><rect x="3.0879%" y="213" width="0.0490%" height="15" fill="rgb(220,122,19)" fg:x="315" fg:w="5"/><text x="3.3379%" y="223.50"></text></g><g><title>perf_iterate_sb (3 samples, 0.03%)</title><rect x="3.1075%" y="197" width="0.0294%" height="15" fill="rgb(250,228,42)" fg:x="317" fg:w="3"/><text x="3.3575%" y="207.50"></text></g><g><title>perf_iterate_ctx (3 samples, 0.03%)</title><rect x="3.1075%" y="181" width="0.0294%" height="15" fill="rgb(240,193,28)" fg:x="317" fg:w="3"/><text x="3.3575%" y="191.50"></text></g><g><title>perf_event_mmap (8 samples, 0.08%)</title><rect x="3.0879%" y="229" width="0.0784%" height="15" fill="rgb(216,20,37)" fg:x="315" fg:w="8"/><text x="3.3379%" y="239.50"></text></g><g><title>mas_wr_end_piv (2 samples, 0.02%)</title><rect x="3.2448%" y="197" width="0.0196%" height="15" fill="rgb(206,188,39)" fg:x="331" fg:w="2"/><text x="3.4948%" y="207.50"></text></g><g><title>mas_store_prealloc (9 samples, 0.09%)</title><rect x="3.2154%" y="213" width="0.0882%" height="15" fill="rgb(217,207,13)" fg:x="328" fg:w="9"/><text x="3.4654%" y="223.50"></text></g><g><title>mas_wr_store_entry.isra.0 (4 samples, 0.04%)</title><rect x="3.2644%" y="197" width="0.0392%" height="15" fill="rgb(231,73,38)" fg:x="333" fg:w="4"/><text x="3.5144%" y="207.50"></text></g><g><title>mas_wr_modify (4 samples, 0.04%)</title><rect x="3.2644%" y="181" width="0.0392%" height="15" fill="rgb(225,20,46)" fg:x="333" fg:w="4"/><text x="3.5144%" y="191.50"></text></g><g><title>mas_wr_slot_store (3 samples, 0.03%)</title><rect x="3.2742%" y="165" width="0.0294%" height="15" fill="rgb(210,31,41)" fg:x="334" fg:w="3"/><text x="3.5242%" y="175.50"></text></g><g><title>mas_update_gap.part.0 (2 samples, 0.02%)</title><rect x="3.2840%" y="149" width="0.0196%" height="15" fill="rgb(221,200,47)" fg:x="335" fg:w="2"/><text x="3.5340%" y="159.50"></text></g><g><title>vma_expand (17 samples, 0.17%)</title><rect x="3.1860%" y="229" width="0.1667%" height="15" fill="rgb(226,26,5)" fg:x="325" fg:w="17"/><text x="3.4360%" y="239.50"></text></g><g><title>vma_prepare (3 samples, 0.03%)</title><rect x="3.3232%" y="213" width="0.0294%" height="15" fill="rgb(249,33,26)" fg:x="339" fg:w="3"/><text x="3.5732%" y="223.50"></text></g><g><title>mmap_region (39 samples, 0.38%)</title><rect x="2.9899%" y="245" width="0.3823%" height="15" fill="rgb(235,183,28)" fg:x="305" fg:w="39"/><text x="3.2399%" y="255.50"></text></g><g><title>vma_set_page_prot (2 samples, 0.02%)</title><rect x="3.3526%" y="229" width="0.0196%" height="15" fill="rgb(221,5,38)" fg:x="342" fg:w="2"/><text x="3.6026%" y="239.50"></text></g><g><title>do_mmap (54 samples, 0.53%)</title><rect x="2.8527%" y="261" width="0.5294%" height="15" fill="rgb(247,18,42)" fg:x="291" fg:w="54"/><text x="3.1027%" y="271.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (61 samples, 0.60%)</title><rect x="2.8036%" y="357" width="0.5980%" height="15" fill="rgb(241,131,45)" fg:x="286" fg:w="61"/><text x="3.0536%" y="367.50"></text></g><g><title>do_syscall_64 (61 samples, 0.60%)</title><rect x="2.8036%" y="341" width="0.5980%" height="15" fill="rgb(249,31,29)" fg:x="286" fg:w="61"/><text x="3.0536%" y="351.50"></text></g><g><title>x64_sys_call (59 samples, 0.58%)</title><rect x="2.8233%" y="325" width="0.5784%" height="15" fill="rgb(225,111,53)" fg:x="288" fg:w="59"/><text x="3.0733%" y="335.50"></text></g><g><title>__x64_sys_mmap (59 samples, 0.58%)</title><rect x="2.8233%" y="309" width="0.5784%" height="15" fill="rgb(238,160,17)" fg:x="288" fg:w="59"/><text x="3.0733%" y="319.50"></text></g><g><title>ksys_mmap_pgoff (59 samples, 0.58%)</title><rect x="2.8233%" y="293" width="0.5784%" height="15" fill="rgb(214,148,48)" fg:x="288" fg:w="59"/><text x="3.0733%" y="303.50"></text></g><g><title>vm_mmap_pgoff (57 samples, 0.56%)</title><rect x="2.8429%" y="277" width="0.5588%" height="15" fill="rgb(232,36,49)" fg:x="290" fg:w="57"/><text x="3.0929%" y="287.50"></text></g><g><title>__mmap (66 samples, 0.65%)</title><rect x="2.7742%" y="373" width="0.6470%" height="15" fill="rgb(209,103,24)" fg:x="283" fg:w="66"/><text x="3.0242%" y="383.50"></text></g><g><title>sync_regs (2 samples, 0.02%)</title><rect x="3.4016%" y="357" width="0.0196%" height="15" fill="rgb(229,88,8)" fg:x="347" fg:w="2"/><text x="3.6516%" y="367.50"></text></g><g><title>accountsdb.db.AccountsDB.putAccountFile (5 samples, 0.05%)</title><rect x="3.4310%" y="373" width="0.0490%" height="15" fill="rgb(213,181,19)" fg:x="350" fg:w="5"/><text x="3.6810%" y="383.50"></text></g><g><title>tick_sched_do_timer (3 samples, 0.03%)</title><rect x="59.3471%" y="261" width="0.0294%" height="15" fill="rgb(254,191,54)" fg:x="6054" fg:w="3"/><text x="59.5971%" y="271.50"></text></g><g><title>tick_do_update_jiffies64 (3 samples, 0.03%)</title><rect x="59.3471%" y="245" width="0.0294%" height="15" fill="rgb(241,83,37)" fg:x="6054" fg:w="3"/><text x="59.5971%" y="255.50"></text></g><g><title>update_wall_time (3 samples, 0.03%)</title><rect x="59.3471%" y="229" width="0.0294%" height="15" fill="rgb(233,36,39)" fg:x="6054" fg:w="3"/><text x="59.5971%" y="239.50"></text></g><g><title>timekeeping_advance (3 samples, 0.03%)</title><rect x="59.3471%" y="213" width="0.0294%" height="15" fill="rgb(226,3,54)" fg:x="6054" fg:w="3"/><text x="59.5971%" y="223.50"></text></g><g><title>timekeeping_update (2 samples, 0.02%)</title><rect x="59.3569%" y="197" width="0.0196%" height="15" fill="rgb(245,192,40)" fg:x="6055" fg:w="2"/><text x="59.6069%" y="207.50"></text></g><g><title>raw_notifier_call_chain (2 samples, 0.02%)</title><rect x="59.3569%" y="181" width="0.0196%" height="15" fill="rgb(238,167,29)" fg:x="6055" fg:w="2"/><text x="59.6069%" y="191.50"></text></g><g><title>__hrtimer_run_queues (11 samples, 0.11%)</title><rect x="59.3373%" y="293" width="0.1078%" height="15" fill="rgb(232,182,51)" fg:x="6053" fg:w="11"/><text x="59.5873%" y="303.50"></text></g><g><title>tick_nohz_highres_handler (11 samples, 0.11%)</title><rect x="59.3373%" y="277" width="0.1078%" height="15" fill="rgb(231,60,39)" fg:x="6053" fg:w="11"/><text x="59.5873%" y="287.50"></text></g><g><title>tick_sched_handle (7 samples, 0.07%)</title><rect x="59.3765%" y="261" width="0.0686%" height="15" fill="rgb(208,69,12)" fg:x="6057" fg:w="7"/><text x="59.6265%" y="271.50"></text></g><g><title>update_process_times (7 samples, 0.07%)</title><rect x="59.3765%" y="245" width="0.0686%" height="15" fill="rgb(235,93,37)" fg:x="6057" fg:w="7"/><text x="59.6265%" y="255.50"></text></g><g><title>scheduler_tick (4 samples, 0.04%)</title><rect x="59.4059%" y="229" width="0.0392%" height="15" fill="rgb(213,116,39)" fg:x="6060" fg:w="4"/><text x="59.6559%" y="239.50"></text></g><g><title>task_tick_fair (3 samples, 0.03%)</title><rect x="59.4157%" y="213" width="0.0294%" height="15" fill="rgb(222,207,29)" fg:x="6061" fg:w="3"/><text x="59.6657%" y="223.50"></text></g><g><title>update_load_avg (2 samples, 0.02%)</title><rect x="59.4255%" y="197" width="0.0196%" height="15" fill="rgb(206,96,30)" fg:x="6062" fg:w="2"/><text x="59.6755%" y="207.50"></text></g><g><title>__sysvec_apic_timer_interrupt (13 samples, 0.13%)</title><rect x="59.3373%" y="325" width="0.1274%" height="15" fill="rgb(218,138,4)" fg:x="6053" fg:w="13"/><text x="59.5873%" y="335.50"></text></g><g><title>hrtimer_interrupt (13 samples, 0.13%)</title><rect x="59.3373%" y="309" width="0.1274%" height="15" fill="rgb(250,191,14)" fg:x="6053" fg:w="13"/><text x="59.5873%" y="319.50"></text></g><g><title>irq_exit_rcu (3 samples, 0.03%)</title><rect x="59.4746%" y="325" width="0.0294%" height="15" fill="rgb(239,60,40)" fg:x="6067" fg:w="3"/><text x="59.7246%" y="335.50"></text></g><g><title>__irq_exit_rcu (3 samples, 0.03%)</title><rect x="59.4746%" y="309" width="0.0294%" height="15" fill="rgb(206,27,48)" fg:x="6067" fg:w="3"/><text x="59.7246%" y="319.50"></text></g><g><title>handle_softirqs (3 samples, 0.03%)</title><rect x="59.4746%" y="293" width="0.0294%" height="15" fill="rgb(225,35,8)" fg:x="6067" fg:w="3"/><text x="59.7246%" y="303.50"></text></g><g><title>run_timer_softirq (2 samples, 0.02%)</title><rect x="59.4844%" y="277" width="0.0196%" height="15" fill="rgb(250,213,24)" fg:x="6068" fg:w="2"/><text x="59.7344%" y="287.50"></text></g><g><title>__run_timers (2 samples, 0.02%)</title><rect x="59.4844%" y="261" width="0.0196%" height="15" fill="rgb(247,123,22)" fg:x="6068" fg:w="2"/><text x="59.7344%" y="271.50"></text></g><g><title>call_timer_fn (2 samples, 0.02%)</title><rect x="59.4844%" y="245" width="0.0196%" height="15" fill="rgb(231,138,38)" fg:x="6068" fg:w="2"/><text x="59.7344%" y="255.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (19 samples, 0.19%)</title><rect x="59.3275%" y="357" width="0.1863%" height="15" fill="rgb(231,145,46)" fg:x="6052" fg:w="19"/><text x="59.5775%" y="367.50"></text></g><g><title>sysvec_apic_timer_interrupt (18 samples, 0.18%)</title><rect x="59.3373%" y="341" width="0.1765%" height="15" fill="rgb(251,118,11)" fg:x="6053" fg:w="18"/><text x="59.5873%" y="351.50"></text></g><g><title>accountsdb.index.AccountIndex.indexRefIfNotDuplicateSlot (5,717 samples, 56.04%)</title><rect x="3.4801%" y="373" width="56.0435%" height="15" fill="rgb(217,147,25)" fg:x="355" fg:w="5717"/><text x="3.7301%" y="383.50">accountsdb.index.AccountIndex.indexRefIfNotDuplicateSlot</text></g><g><title>heap.general_purpose_allocator.GeneralPurposeAllocator (3 samples, 0.03%)</title><rect x="59.5334%" y="373" width="0.0294%" height="15" fill="rgb(247,81,37)" fg:x="6073" fg:w="3"/><text x="59.7834%" y="383.50"></text></g><g><title>__irqentry_text_end (10 samples, 0.10%)</title><rect x="61.0136%" y="357" width="0.0980%" height="15" fill="rgb(209,12,38)" fg:x="6224" fg:w="10"/><text x="61.2636%" y="367.50"></text></g><g><title>do_user_addr_fault (3 samples, 0.03%)</title><rect x="62.1116%" y="341" width="0.0294%" height="15" fill="rgb(227,1,9)" fg:x="6336" fg:w="3"/><text x="62.3616%" y="351.50"></text></g><g><title>__rcu_read_lock (2 samples, 0.02%)</title><rect x="62.3958%" y="325" width="0.0196%" height="15" fill="rgb(248,47,43)" fg:x="6365" fg:w="2"/><text x="62.6458%" y="335.50"></text></g><g><title>__rcu_read_unlock (3 samples, 0.03%)</title><rect x="62.4154%" y="325" width="0.0294%" height="15" fill="rgb(221,10,30)" fg:x="6367" fg:w="3"/><text x="62.6654%" y="335.50"></text></g><g><title>access_error (4 samples, 0.04%)</title><rect x="62.4449%" y="325" width="0.0392%" height="15" fill="rgb(210,229,1)" fg:x="6370" fg:w="4"/><text x="62.6949%" y="335.50"></text></g><g><title>__rcu_read_lock (7 samples, 0.07%)</title><rect x="62.9252%" y="309" width="0.0686%" height="15" fill="rgb(222,148,37)" fg:x="6419" fg:w="7"/><text x="63.1752%" y="319.50"></text></g><g><title>__rcu_read_unlock (7 samples, 0.07%)</title><rect x="62.9938%" y="309" width="0.0686%" height="15" fill="rgb(234,67,33)" fg:x="6426" fg:w="7"/><text x="63.2438%" y="319.50"></text></g><g><title>count_memcg_events.constprop.0 (2 samples, 0.02%)</title><rect x="63.0624%" y="309" width="0.0196%" height="15" fill="rgb(247,98,35)" fg:x="6433" fg:w="2"/><text x="63.3124%" y="319.50"></text></g><g><title>down_read_trylock (2 samples, 0.02%)</title><rect x="63.0821%" y="309" width="0.0196%" height="15" fill="rgb(247,138,52)" fg:x="6435" fg:w="2"/><text x="63.3321%" y="319.50"></text></g><g><title>__rcu_read_unlock (5 samples, 0.05%)</title><rect x="64.0035%" y="277" width="0.0490%" height="15" fill="rgb(213,79,30)" fg:x="6529" fg:w="5"/><text x="64.2535%" y="287.50"></text></g><g><title>__folio_throttle_swaprate (2 samples, 0.02%)</title><rect x="64.2192%" y="261" width="0.0196%" height="15" fill="rgb(246,177,23)" fg:x="6551" fg:w="2"/><text x="64.4692%" y="271.50"></text></g><g><title>__rcu_read_unlock (5 samples, 0.05%)</title><rect x="64.2486%" y="261" width="0.0490%" height="15" fill="rgb(230,62,27)" fg:x="6554" fg:w="5"/><text x="64.4986%" y="271.50"></text></g><g><title>_raw_spin_unlock (4 samples, 0.04%)</title><rect x="64.2976%" y="261" width="0.0392%" height="15" fill="rgb(216,154,8)" fg:x="6559" fg:w="4"/><text x="64.5476%" y="271.50"></text></g><g><title>blk_cgroup_congested (16 samples, 0.16%)</title><rect x="64.8466%" y="229" width="0.1568%" height="15" fill="rgb(244,35,45)" fg:x="6615" fg:w="16"/><text x="65.0966%" y="239.50"></text></g><g><title>__folio_throttle_swaprate (29 samples, 0.28%)</title><rect x="64.7780%" y="245" width="0.2843%" height="15" fill="rgb(251,115,12)" fg:x="6608" fg:w="29"/><text x="65.0280%" y="255.50"></text></g><g><title>kthread_blkcg (6 samples, 0.06%)</title><rect x="65.0034%" y="229" width="0.0588%" height="15" fill="rgb(240,54,50)" fg:x="6631" fg:w="6"/><text x="65.2534%" y="239.50"></text></g><g><title>__rcu_read_lock (3 samples, 0.03%)</title><rect x="65.1799%" y="229" width="0.0294%" height="15" fill="rgb(233,84,52)" fg:x="6649" fg:w="3"/><text x="65.4299%" y="239.50"></text></g><g><title>__rcu_read_unlock (9 samples, 0.09%)</title><rect x="65.2093%" y="229" width="0.0882%" height="15" fill="rgb(207,117,47)" fg:x="6652" fg:w="9"/><text x="65.4593%" y="239.50"></text></g><g><title>consume_stock (2 samples, 0.02%)</title><rect x="65.2975%" y="229" width="0.0196%" height="15" fill="rgb(249,43,39)" fg:x="6661" fg:w="2"/><text x="65.5475%" y="239.50"></text></g><g><title>get_mem_cgroup_from_mm (15 samples, 0.15%)</title><rect x="65.3171%" y="229" width="0.1470%" height="15" fill="rgb(209,38,44)" fg:x="6663" fg:w="15"/><text x="65.5671%" y="239.50"></text></g><g><title>mem_cgroup_commit_charge (31 samples, 0.30%)</title><rect x="65.4642%" y="229" width="0.3039%" height="15" fill="rgb(236,212,23)" fg:x="6678" fg:w="31"/><text x="65.7142%" y="239.50"></text></g><g><title>__count_memcg_events (14 samples, 0.14%)</title><rect x="65.6308%" y="213" width="0.1372%" height="15" fill="rgb(242,79,21)" fg:x="6695" fg:w="14"/><text x="65.8808%" y="223.50"></text></g><g><title>memcg_check_events (2 samples, 0.02%)</title><rect x="65.7681%" y="229" width="0.0196%" height="15" fill="rgb(211,96,35)" fg:x="6709" fg:w="2"/><text x="66.0181%" y="239.50"></text></g><g><title>srso_safe_ret (2 samples, 0.02%)</title><rect x="65.7975%" y="229" width="0.0196%" height="15" fill="rgb(253,215,40)" fg:x="6712" fg:w="2"/><text x="66.0475%" y="239.50"></text></g><g><title>consume_stock (8 samples, 0.08%)</title><rect x="65.9151%" y="213" width="0.0784%" height="15" fill="rgb(211,81,21)" fg:x="6724" fg:w="8"/><text x="66.1651%" y="223.50"></text></g><g><title>__mem_cgroup_charge (95 samples, 0.93%)</title><rect x="65.0721%" y="245" width="0.9313%" height="15" fill="rgb(208,190,38)" fg:x="6638" fg:w="95"/><text x="65.3221%" y="255.50"></text></g><g><title>try_charge_memcg (19 samples, 0.19%)</title><rect x="65.8171%" y="229" width="0.1863%" height="15" fill="rgb(235,213,38)" fg:x="6714" fg:w="19"/><text x="66.0671%" y="239.50"></text></g><g><title>__pte_offset_map (2 samples, 0.02%)</title><rect x="66.0131%" y="245" width="0.0196%" height="15" fill="rgb(237,122,38)" fg:x="6734" fg:w="2"/><text x="66.2631%" y="255.50"></text></g><g><title>__pte_offset_map (7 samples, 0.07%)</title><rect x="66.1602%" y="229" width="0.0686%" height="15" fill="rgb(244,218,35)" fg:x="6749" fg:w="7"/><text x="66.4102%" y="239.50"></text></g><g><title>__pte_offset_map_lock (23 samples, 0.23%)</title><rect x="66.0327%" y="245" width="0.2255%" height="15" fill="rgb(240,68,47)" fg:x="6736" fg:w="23"/><text x="66.2827%" y="255.50"></text></g><g><title>__rcu_read_lock (3 samples, 0.03%)</title><rect x="66.2288%" y="229" width="0.0294%" height="15" fill="rgb(210,16,53)" fg:x="6756" fg:w="3"/><text x="66.4788%" y="239.50"></text></g><g><title>_raw_spin_lock (3 samples, 0.03%)</title><rect x="66.2582%" y="245" width="0.0294%" height="15" fill="rgb(235,124,12)" fg:x="6759" fg:w="3"/><text x="66.5082%" y="255.50"></text></g><g><title>__next_zones_zonelist (4 samples, 0.04%)</title><rect x="66.6111%" y="181" width="0.0392%" height="15" fill="rgb(224,169,11)" fg:x="6795" fg:w="4"/><text x="66.8611%" y="191.50"></text></g><g><title>clear_page_rep (158 samples, 1.55%)</title><rect x="66.7778%" y="165" width="1.5489%" height="15" fill="rgb(250,166,2)" fg:x="6812" fg:w="158"/><text x="67.0278%" y="175.50"></text></g><g><title>post_alloc_hook (4 samples, 0.04%)</title><rect x="68.3266%" y="165" width="0.0392%" height="15" fill="rgb(242,216,29)" fg:x="6970" fg:w="4"/><text x="68.5766%" y="175.50"></text></g><g><title>__rmqueue_pcplist (17 samples, 0.17%)</title><rect x="68.5129%" y="149" width="0.1667%" height="15" fill="rgb(230,116,27)" fg:x="6989" fg:w="17"/><text x="68.7629%" y="159.50"></text></g><g><title>rmqueue_bulk (12 samples, 0.12%)</title><rect x="68.5619%" y="133" width="0.1176%" height="15" fill="rgb(228,99,48)" fg:x="6994" fg:w="12"/><text x="68.8119%" y="143.50"></text></g><g><title>get_page_from_freelist (208 samples, 2.04%)</title><rect x="66.6503%" y="181" width="2.0390%" height="15" fill="rgb(253,11,6)" fg:x="6799" fg:w="208"/><text x="66.9003%" y="191.50">g..</text></g><g><title>rmqueue (33 samples, 0.32%)</title><rect x="68.3658%" y="165" width="0.3235%" height="15" fill="rgb(247,143,39)" fg:x="6974" fg:w="33"/><text x="68.6158%" y="175.50"></text></g><g><title>__alloc_pages (225 samples, 2.21%)</title><rect x="66.5033%" y="197" width="2.2057%" height="15" fill="rgb(236,97,10)" fg:x="6784" fg:w="225"/><text x="66.7533%" y="207.50">_..</text></g><g><title>__cond_resched (2 samples, 0.02%)</title><rect x="68.7090%" y="197" width="0.0196%" height="15" fill="rgb(233,208,19)" fg:x="7009" fg:w="2"/><text x="68.9590%" y="207.50"></text></g><g><title>_find_first_bit (6 samples, 0.06%)</title><rect x="68.7384%" y="197" width="0.0588%" height="15" fill="rgb(216,164,2)" fg:x="7012" fg:w="6"/><text x="68.9884%" y="207.50"></text></g><g><title>policy_nodemask (3 samples, 0.03%)</title><rect x="68.8070%" y="197" width="0.0294%" height="15" fill="rgb(220,129,5)" fg:x="7019" fg:w="3"/><text x="69.0570%" y="207.50"></text></g><g><title>alloc_pages_mpol (251 samples, 2.46%)</title><rect x="66.4249%" y="213" width="2.4605%" height="15" fill="rgb(242,17,10)" fg:x="6776" fg:w="251"/><text x="66.6749%" y="223.50">al..</text></g><g><title>should_fail_alloc_page (5 samples, 0.05%)</title><rect x="68.8364%" y="197" width="0.0490%" height="15" fill="rgb(242,107,0)" fg:x="7022" fg:w="5"/><text x="69.0864%" y="207.50"></text></g><g><title>get_vma_policy (7 samples, 0.07%)</title><rect x="68.8854%" y="213" width="0.0686%" height="15" fill="rgb(251,28,31)" fg:x="7027" fg:w="7"/><text x="69.1354%" y="223.50"></text></g><g><title>alloc_anon_folio (275 samples, 2.70%)</title><rect x="66.2876%" y="245" width="2.6958%" height="15" fill="rgb(233,223,10)" fg:x="6762" fg:w="275"/><text x="66.5376%" y="255.50">al..</text></g><g><title>vma_alloc_folio (268 samples, 2.63%)</title><rect x="66.3562%" y="229" width="2.6272%" height="15" fill="rgb(215,21,27)" fg:x="6769" fg:w="268"/><text x="66.6062%" y="239.50">vm..</text></g><g><title>srso_safe_ret (2 samples, 0.02%)</title><rect x="68.9638%" y="213" width="0.0196%" height="15" fill="rgb(232,23,21)" fg:x="7035" fg:w="2"/><text x="69.2138%" y="223.50"></text></g><g><title>folio_mapping (3 samples, 0.03%)</title><rect x="69.1893%" y="197" width="0.0294%" height="15" fill="rgb(244,5,23)" fg:x="7058" fg:w="3"/><text x="69.4393%" y="207.50"></text></g><g><title>__mod_memcg_lruvec_state (15 samples, 0.15%)</title><rect x="69.6892%" y="149" width="0.1470%" height="15" fill="rgb(226,81,46)" fg:x="7109" fg:w="15"/><text x="69.9392%" y="159.50"></text></g><g><title>__mod_lruvec_state (21 samples, 0.21%)</title><rect x="69.6500%" y="165" width="0.2059%" height="15" fill="rgb(247,70,30)" fg:x="7105" fg:w="21"/><text x="69.9000%" y="175.50"></text></g><g><title>srso_safe_ret (2 samples, 0.02%)</title><rect x="69.8363%" y="149" width="0.0196%" height="15" fill="rgb(212,68,19)" fg:x="7124" fg:w="2"/><text x="70.0863%" y="159.50"></text></g><g><title>__mod_memcg_lruvec_state (2 samples, 0.02%)</title><rect x="69.8559%" y="165" width="0.0196%" height="15" fill="rgb(240,187,13)" fg:x="7126" fg:w="2"/><text x="70.1059%" y="175.50"></text></g><g><title>lru_add_fn (71 samples, 0.70%)</title><rect x="69.2187%" y="197" width="0.6960%" height="15" fill="rgb(223,113,26)" fg:x="7061" fg:w="71"/><text x="69.4687%" y="207.50"></text></g><g><title>lru_gen_add_folio (49 samples, 0.48%)</title><rect x="69.4344%" y="181" width="0.4803%" height="15" fill="rgb(206,192,2)" fg:x="7083" fg:w="49"/><text x="69.6844%" y="191.50"></text></g><g><title>__mod_zone_page_state (4 samples, 0.04%)</title><rect x="69.8755%" y="165" width="0.0392%" height="15" fill="rgb(241,108,4)" fg:x="7128" fg:w="4"/><text x="70.1255%" y="175.50"></text></g><g><title>folio_batch_move_lru (91 samples, 0.89%)</title><rect x="69.0815%" y="213" width="0.8921%" height="15" fill="rgb(247,173,49)" fg:x="7047" fg:w="91"/><text x="69.3315%" y="223.50"></text></g><g><title>release_pages (5 samples, 0.05%)</title><rect x="69.9245%" y="197" width="0.0490%" height="15" fill="rgb(224,114,35)" fg:x="7133" fg:w="5"/><text x="70.1745%" y="207.50"></text></g><g><title>lru_add_fn (4 samples, 0.04%)</title><rect x="69.9735%" y="213" width="0.0392%" height="15" fill="rgb(245,159,27)" fg:x="7138" fg:w="4"/><text x="70.2235%" y="223.50"></text></g><g><title>srso_return_thunk (2 samples, 0.02%)</title><rect x="70.0127%" y="213" width="0.0196%" height="15" fill="rgb(245,172,44)" fg:x="7142" fg:w="2"/><text x="70.2627%" y="223.50"></text></g><g><title>folio_add_lru_vma (106 samples, 1.04%)</title><rect x="69.0030%" y="245" width="1.0391%" height="15" fill="rgb(236,23,11)" fg:x="7039" fg:w="106"/><text x="69.2530%" y="255.50"></text></g><g><title>folio_add_lru (106 samples, 1.04%)</title><rect x="69.0030%" y="229" width="1.0391%" height="15" fill="rgb(205,117,38)" fg:x="7039" fg:w="106"/><text x="69.2530%" y="239.50"></text></g><g><title>__mod_memcg_lruvec_state (12 samples, 0.12%)</title><rect x="70.2774%" y="197" width="0.1176%" height="15" fill="rgb(237,72,25)" fg:x="7169" fg:w="12"/><text x="70.5274%" y="207.50"></text></g><g><title>cgroup_rstat_updated (2 samples, 0.02%)</title><rect x="70.3755%" y="181" width="0.0196%" height="15" fill="rgb(244,70,9)" fg:x="7179" fg:w="2"/><text x="70.6255%" y="191.50"></text></g><g><title>__mod_node_page_state (2 samples, 0.02%)</title><rect x="70.3951%" y="197" width="0.0196%" height="15" fill="rgb(217,125,39)" fg:x="7181" fg:w="2"/><text x="70.6451%" y="207.50"></text></g><g><title>__lruvec_stat_mod_folio (33 samples, 0.32%)</title><rect x="70.1010%" y="229" width="0.3235%" height="15" fill="rgb(235,36,10)" fg:x="7151" fg:w="33"/><text x="70.3510%" y="239.50"></text></g><g><title>__mod_lruvec_state (19 samples, 0.19%)</title><rect x="70.2382%" y="213" width="0.1863%" height="15" fill="rgb(251,123,47)" fg:x="7165" fg:w="19"/><text x="70.4882%" y="223.50"></text></g><g><title>__rcu_read_unlock (7 samples, 0.07%)</title><rect x="70.4245%" y="229" width="0.0686%" height="15" fill="rgb(221,13,13)" fg:x="7184" fg:w="7"/><text x="70.6745%" y="239.50"></text></g><g><title>folio_add_new_anon_rmap (49 samples, 0.48%)</title><rect x="70.0422%" y="245" width="0.4803%" height="15" fill="rgb(238,131,9)" fg:x="7145" fg:w="49"/><text x="70.2922%" y="255.50"></text></g><g><title>srso_safe_ret (3 samples, 0.03%)</title><rect x="70.4931%" y="229" width="0.0294%" height="15" fill="rgb(211,50,8)" fg:x="7191" fg:w="3"/><text x="70.7431%" y="239.50"></text></g><g><title>mem_cgroup_commit_charge (4 samples, 0.04%)</title><rect x="70.5225%" y="245" width="0.0392%" height="15" fill="rgb(245,182,24)" fg:x="7194" fg:w="4"/><text x="70.7725%" y="255.50"></text></g><g><title>percpu_counter_add_batch (6 samples, 0.06%)</title><rect x="70.5617%" y="245" width="0.0588%" height="15" fill="rgb(242,14,37)" fg:x="7198" fg:w="6"/><text x="70.8117%" y="255.50"></text></g><g><title>pfn_pte (2 samples, 0.02%)</title><rect x="70.6205%" y="245" width="0.0196%" height="15" fill="rgb(246,228,12)" fg:x="7204" fg:w="2"/><text x="70.8705%" y="255.50"></text></g><g><title>set_ptes.constprop.0 (11 samples, 0.11%)</title><rect x="70.6401%" y="245" width="0.1078%" height="15" fill="rgb(213,55,15)" fg:x="7206" fg:w="11"/><text x="70.8901%" y="255.50"></text></g><g><title>srso_safe_ret (7 samples, 0.07%)</title><rect x="70.7480%" y="245" width="0.0686%" height="15" fill="rgb(209,9,3)" fg:x="7217" fg:w="7"/><text x="70.9980%" y="255.50"></text></g><g><title>try_charge_memcg (2 samples, 0.02%)</title><rect x="70.8166%" y="245" width="0.0196%" height="15" fill="rgb(230,59,30)" fg:x="7224" fg:w="2"/><text x="71.0666%" y="255.50"></text></g><g><title>do_anonymous_page (664 samples, 6.51%)</title><rect x="64.3368%" y="261" width="6.5092%" height="15" fill="rgb(209,121,21)" fg:x="6563" fg:w="664"/><text x="64.5868%" y="271.50">do_anonym..</text></g><g><title>filemap_get_entry (24 samples, 0.24%)</title><rect x="71.3067%" y="197" width="0.2353%" height="15" fill="rgb(220,109,13)" fg:x="7274" fg:w="24"/><text x="71.5567%" y="207.50"></text></g><g><title>xas_load (9 samples, 0.09%)</title><rect x="71.4538%" y="181" width="0.0882%" height="15" fill="rgb(232,18,1)" fg:x="7289" fg:w="9"/><text x="71.7038%" y="191.50"></text></g><g><title>xas_descend (4 samples, 0.04%)</title><rect x="71.5028%" y="165" width="0.0392%" height="15" fill="rgb(215,41,42)" fg:x="7294" fg:w="4"/><text x="71.7528%" y="175.50"></text></g><g><title>__filemap_get_folio (34 samples, 0.33%)</title><rect x="71.2283%" y="213" width="0.3333%" height="15" fill="rgb(224,123,36)" fg:x="7266" fg:w="34"/><text x="71.4783%" y="223.50"></text></g><g><title>xas_load (2 samples, 0.02%)</title><rect x="71.5420%" y="197" width="0.0196%" height="15" fill="rgb(240,125,3)" fg:x="7298" fg:w="2"/><text x="71.7920%" y="207.50"></text></g><g><title>filemap_alloc_folio (5 samples, 0.05%)</title><rect x="71.5812%" y="165" width="0.0490%" height="15" fill="rgb(205,98,50)" fg:x="7302" fg:w="5"/><text x="71.8312%" y="175.50"></text></g><g><title>__mod_memcg_lruvec_state (4 samples, 0.04%)</title><rect x="71.9929%" y="85" width="0.0392%" height="15" fill="rgb(205,185,37)" fg:x="7344" fg:w="4"/><text x="72.2429%" y="95.50"></text></g><g><title>__mod_lruvec_state (6 samples, 0.06%)</title><rect x="71.9831%" y="101" width="0.0588%" height="15" fill="rgb(238,207,15)" fg:x="7343" fg:w="6"/><text x="72.2331%" y="111.50"></text></g><g><title>__lruvec_stat_mod_folio (14 samples, 0.14%)</title><rect x="71.9243%" y="117" width="0.1372%" height="15" fill="rgb(213,199,42)" fg:x="7337" fg:w="14"/><text x="72.1743%" y="127.50"></text></g><g><title>__mod_memcg_lruvec_state (2 samples, 0.02%)</title><rect x="72.0420%" y="101" width="0.0196%" height="15" fill="rgb(235,201,11)" fg:x="7349" fg:w="2"/><text x="72.2920%" y="111.50"></text></g><g><title>__rcu_read_lock (3 samples, 0.03%)</title><rect x="72.1694%" y="101" width="0.0294%" height="15" fill="rgb(207,46,11)" fg:x="7362" fg:w="3"/><text x="72.4194%" y="111.50"></text></g><g><title>__rcu_read_unlock (3 samples, 0.03%)</title><rect x="72.1988%" y="101" width="0.0294%" height="15" fill="rgb(241,35,35)" fg:x="7365" fg:w="3"/><text x="72.4488%" y="111.50"></text></g><g><title>get_mem_cgroup_from_mm (14 samples, 0.14%)</title><rect x="72.2282%" y="101" width="0.1372%" height="15" fill="rgb(243,32,47)" fg:x="7368" fg:w="14"/><text x="72.4782%" y="111.50"></text></g><g><title>mem_cgroup_commit_charge (17 samples, 0.17%)</title><rect x="72.3655%" y="101" width="0.1667%" height="15" fill="rgb(247,202,23)" fg:x="7382" fg:w="17"/><text x="72.6155%" y="111.50"></text></g><g><title>__count_memcg_events (7 samples, 0.07%)</title><rect x="72.4635%" y="85" width="0.0686%" height="15" fill="rgb(219,102,11)" fg:x="7392" fg:w="7"/><text x="72.7135%" y="95.50"></text></g><g><title>__mem_cgroup_charge (52 samples, 0.51%)</title><rect x="72.0616%" y="117" width="0.5098%" height="15" fill="rgb(243,110,44)" fg:x="7351" fg:w="52"/><text x="72.3116%" y="127.50"></text></g><g><title>try_charge_memcg (2 samples, 0.02%)</title><rect x="72.5517%" y="101" width="0.0196%" height="15" fill="rgb(222,74,54)" fg:x="7401" fg:w="2"/><text x="72.8017%" y="111.50"></text></g><g><title>__rcu_read_lock (4 samples, 0.04%)</title><rect x="72.5713%" y="117" width="0.0392%" height="15" fill="rgb(216,99,12)" fg:x="7403" fg:w="4"/><text x="72.8213%" y="127.50"></text></g><g><title>__rcu_read_unlock (3 samples, 0.03%)</title><rect x="72.6105%" y="117" width="0.0294%" height="15" fill="rgb(226,22,26)" fg:x="7407" fg:w="3"/><text x="72.8605%" y="127.50"></text></g><g><title>_raw_spin_lock_irq (2 samples, 0.02%)</title><rect x="72.6399%" y="117" width="0.0196%" height="15" fill="rgb(217,163,10)" fg:x="7410" fg:w="2"/><text x="72.8899%" y="127.50"></text></g><g><title>mem_cgroup_commit_charge (3 samples, 0.03%)</title><rect x="72.6595%" y="117" width="0.0294%" height="15" fill="rgb(213,25,53)" fg:x="7412" fg:w="3"/><text x="72.9095%" y="127.50"></text></g><g><title>srso_safe_ret (4 samples, 0.04%)</title><rect x="72.6890%" y="117" width="0.0392%" height="15" fill="rgb(252,105,26)" fg:x="7415" fg:w="4"/><text x="72.9390%" y="127.50"></text></g><g><title>workingset_update_node (3 samples, 0.03%)</title><rect x="72.7282%" y="117" width="0.0294%" height="15" fill="rgb(220,39,43)" fg:x="7419" fg:w="3"/><text x="72.9782%" y="127.50"></text></g><g><title>xas_load (11 samples, 0.11%)</title><rect x="72.8262%" y="101" width="0.1078%" height="15" fill="rgb(229,68,48)" fg:x="7429" fg:w="11"/><text x="73.0762%" y="111.50"></text></g><g><title>xa_get_order (19 samples, 0.19%)</title><rect x="72.7576%" y="117" width="0.1863%" height="15" fill="rgb(252,8,32)" fg:x="7422" fg:w="19"/><text x="73.0076%" y="127.50"></text></g><g><title>xas_find_conflict (14 samples, 0.14%)</title><rect x="72.9438%" y="117" width="0.1372%" height="15" fill="rgb(223,20,43)" fg:x="7441" fg:w="14"/><text x="73.1938%" y="127.50"></text></g><g><title>xas_descend (5 samples, 0.05%)</title><rect x="73.0321%" y="101" width="0.0490%" height="15" fill="rgb(229,81,49)" fg:x="7450" fg:w="5"/><text x="73.2821%" y="111.50"></text></g><g><title>xas_load (2 samples, 0.02%)</title><rect x="73.0811%" y="117" width="0.0196%" height="15" fill="rgb(236,28,36)" fg:x="7455" fg:w="2"/><text x="73.3311%" y="127.50"></text></g><g><title>__filemap_add_folio (149 samples, 1.46%)</title><rect x="71.7185%" y="133" width="1.4606%" height="15" fill="rgb(249,185,26)" fg:x="7316" fg:w="149"/><text x="71.9685%" y="143.50"></text></g><g><title>xas_store (7 samples, 0.07%)</title><rect x="73.1105%" y="117" width="0.0686%" height="15" fill="rgb(249,174,33)" fg:x="7458" fg:w="7"/><text x="73.3605%" y="127.50"></text></g><g><title>xas_create (3 samples, 0.03%)</title><rect x="73.1497%" y="101" width="0.0294%" height="15" fill="rgb(233,201,37)" fg:x="7462" fg:w="3"/><text x="73.3997%" y="111.50"></text></g><g><title>folio_mapping (5 samples, 0.05%)</title><rect x="73.2673%" y="101" width="0.0490%" height="15" fill="rgb(221,78,26)" fg:x="7474" fg:w="5"/><text x="73.5173%" y="111.50"></text></g><g><title>__mod_zone_page_state (2 samples, 0.02%)</title><rect x="73.3948%" y="85" width="0.0196%" height="15" fill="rgb(250,127,30)" fg:x="7487" fg:w="2"/><text x="73.6448%" y="95.50"></text></g><g><title>__mod_memcg_lruvec_state (8 samples, 0.08%)</title><rect x="73.6006%" y="53" width="0.0784%" height="15" fill="rgb(230,49,44)" fg:x="7508" fg:w="8"/><text x="73.8506%" y="63.50"></text></g><g><title>__mod_lruvec_state (17 samples, 0.17%)</title><rect x="73.5222%" y="69" width="0.1667%" height="15" fill="rgb(229,67,23)" fg:x="7500" fg:w="17"/><text x="73.7722%" y="79.50"></text></g><g><title>lru_add_fn (39 samples, 0.38%)</title><rect x="73.3163%" y="101" width="0.3823%" height="15" fill="rgb(249,83,47)" fg:x="7479" fg:w="39"/><text x="73.5663%" y="111.50"></text></g><g><title>lru_gen_add_folio (29 samples, 0.28%)</title><rect x="73.4144%" y="85" width="0.2843%" height="15" fill="rgb(215,43,3)" fg:x="7489" fg:w="29"/><text x="73.6644%" y="95.50"></text></g><g><title>folio_batch_move_lru (50 samples, 0.49%)</title><rect x="73.2183%" y="117" width="0.4901%" height="15" fill="rgb(238,154,13)" fg:x="7469" fg:w="50"/><text x="73.4683%" y="127.50"></text></g><g><title>lru_add_fn (2 samples, 0.02%)</title><rect x="73.7085%" y="117" width="0.0196%" height="15" fill="rgb(219,56,2)" fg:x="7519" fg:w="2"/><text x="73.9585%" y="127.50"></text></g><g><title>folio_add_lru (55 samples, 0.54%)</title><rect x="73.1987%" y="133" width="0.5392%" height="15" fill="rgb(233,0,4)" fg:x="7467" fg:w="55"/><text x="73.4487%" y="143.50"></text></g><g><title>xas_find_conflict (2 samples, 0.02%)</title><rect x="73.7477%" y="133" width="0.0196%" height="15" fill="rgb(235,30,7)" fg:x="7523" fg:w="2"/><text x="73.9977%" y="143.50"></text></g><g><title>filemap_add_folio (213 samples, 2.09%)</title><rect x="71.6891%" y="149" width="2.0880%" height="15" fill="rgb(250,79,13)" fg:x="7313" fg:w="213"/><text x="71.9391%" y="159.50">f..</text></g><g><title>_raw_spin_trylock (3 samples, 0.03%)</title><rect x="73.9633%" y="69" width="0.0294%" height="15" fill="rgb(211,146,34)" fg:x="7545" fg:w="3"/><text x="74.2133%" y="79.50"></text></g><g><title>clear_page_rep (98 samples, 0.96%)</title><rect x="74.0025%" y="69" width="0.9607%" height="15" fill="rgb(228,22,38)" fg:x="7549" fg:w="98"/><text x="74.2525%" y="79.50"></text></g><g><title>post_alloc_hook (2 samples, 0.02%)</title><rect x="74.9632%" y="69" width="0.0196%" height="15" fill="rgb(235,168,5)" fg:x="7647" fg:w="2"/><text x="75.2132%" y="79.50"></text></g><g><title>__rmqueue_pcplist (6 samples, 0.06%)</title><rect x="75.1103%" y="53" width="0.0588%" height="15" fill="rgb(221,155,16)" fg:x="7662" fg:w="6"/><text x="75.3603%" y="63.50"></text></g><g><title>rmqueue_bulk (4 samples, 0.04%)</title><rect x="75.1299%" y="37" width="0.0392%" height="15" fill="rgb(215,215,53)" fg:x="7664" fg:w="4"/><text x="75.3799%" y="47.50"></text></g><g><title>get_page_from_freelist (132 samples, 1.29%)</title><rect x="73.8849%" y="85" width="1.2940%" height="15" fill="rgb(223,4,10)" fg:x="7537" fg:w="132"/><text x="74.1349%" y="95.50"></text></g><g><title>rmqueue (20 samples, 0.20%)</title><rect x="74.9828%" y="69" width="0.1961%" height="15" fill="rgb(234,103,6)" fg:x="7649" fg:w="20"/><text x="75.2328%" y="79.50"></text></g><g><title>__alloc_pages (141 samples, 1.38%)</title><rect x="73.8163%" y="101" width="1.3822%" height="15" fill="rgb(227,97,0)" fg:x="7530" fg:w="141"/><text x="74.0663%" y="111.50"></text></g><g><title>post_alloc_hook (2 samples, 0.02%)</title><rect x="75.1789%" y="85" width="0.0196%" height="15" fill="rgb(234,150,53)" fg:x="7669" fg:w="2"/><text x="75.4289%" y="95.50"></text></g><g><title>alloc_pages_mpol (145 samples, 1.42%)</title><rect x="73.7967%" y="117" width="1.4214%" height="15" fill="rgb(228,201,54)" fg:x="7528" fg:w="145"/><text x="74.0467%" y="127.50"></text></g><g><title>policy_nodemask (2 samples, 0.02%)</title><rect x="75.1985%" y="101" width="0.0196%" height="15" fill="rgb(222,22,37)" fg:x="7671" fg:w="2"/><text x="75.4485%" y="111.50"></text></g><g><title>filemap_alloc_folio (149 samples, 1.46%)</title><rect x="73.7771%" y="149" width="1.4606%" height="15" fill="rgb(237,53,32)" fg:x="7526" fg:w="149"/><text x="74.0271%" y="159.50"></text></g><g><title>folio_alloc (148 samples, 1.45%)</title><rect x="73.7869%" y="133" width="1.4508%" height="15" fill="rgb(233,25,53)" fg:x="7527" fg:w="148"/><text x="74.0369%" y="143.50"></text></g><g><title>srso_safe_ret (2 samples, 0.02%)</title><rect x="75.2181%" y="117" width="0.0196%" height="15" fill="rgb(210,40,34)" fg:x="7673" fg:w="2"/><text x="75.4681%" y="127.50"></text></g><g><title>folio_add_lru (2 samples, 0.02%)</title><rect x="75.2377%" y="149" width="0.0196%" height="15" fill="rgb(241,220,44)" fg:x="7675" fg:w="2"/><text x="75.4877%" y="159.50"></text></g><g><title>__rcu_read_unlock (2 samples, 0.02%)</title><rect x="75.3358%" y="101" width="0.0196%" height="15" fill="rgb(235,28,35)" fg:x="7685" fg:w="2"/><text x="75.5858%" y="111.50"></text></g><g><title>ext4_map_blocks (14 samples, 0.14%)</title><rect x="75.3554%" y="101" width="0.1372%" height="15" fill="rgb(210,56,17)" fg:x="7687" fg:w="14"/><text x="75.6054%" y="111.50"></text></g><g><title>ext4_es_lookup_extent (8 samples, 0.08%)</title><rect x="75.4142%" y="85" width="0.0784%" height="15" fill="rgb(224,130,29)" fg:x="7693" fg:w="8"/><text x="75.6642%" y="95.50"></text></g><g><title>percpu_counter_add_batch (3 samples, 0.03%)</title><rect x="75.4632%" y="69" width="0.0294%" height="15" fill="rgb(235,212,8)" fg:x="7698" fg:w="3"/><text x="75.7132%" y="79.50"></text></g><g><title>memset_orig (53 samples, 0.52%)</title><rect x="75.4926%" y="101" width="0.5196%" height="15" fill="rgb(223,33,50)" fg:x="7701" fg:w="53"/><text x="75.7426%" y="111.50"></text></g><g><title>xas_descend (2 samples, 0.02%)</title><rect x="76.1102%" y="85" width="0.0196%" height="15" fill="rgb(219,149,13)" fg:x="7764" fg:w="2"/><text x="76.3602%" y="95.50"></text></g><g><title>xa_load (13 samples, 0.13%)</title><rect x="76.0122%" y="101" width="0.1274%" height="15" fill="rgb(250,156,29)" fg:x="7754" fg:w="13"/><text x="76.2622%" y="111.50"></text></g><g><title>xas_descend (4 samples, 0.04%)</title><rect x="76.1396%" y="101" width="0.0392%" height="15" fill="rgb(216,193,19)" fg:x="7767" fg:w="4"/><text x="76.3896%" y="111.50"></text></g><g><title>ext4_mpage_readpages (98 samples, 0.96%)</title><rect x="75.2671%" y="117" width="0.9607%" height="15" fill="rgb(216,135,14)" fg:x="7678" fg:w="98"/><text x="75.5171%" y="127.50"></text></g><g><title>zero_user_segments.constprop.0 (5 samples, 0.05%)</title><rect x="76.1788%" y="101" width="0.0490%" height="15" fill="rgb(241,47,5)" fg:x="7771" fg:w="5"/><text x="76.4288%" y="111.50"></text></g><g><title>folio_end_read (2 samples, 0.02%)</title><rect x="76.2278%" y="117" width="0.0196%" height="15" fill="rgb(233,42,35)" fg:x="7776" fg:w="2"/><text x="76.4778%" y="127.50"></text></g><g><title>read_pages (102 samples, 1.00%)</title><rect x="75.2671%" y="149" width="0.9999%" height="15" fill="rgb(231,13,6)" fg:x="7678" fg:w="102"/><text x="75.5171%" y="159.50"></text></g><g><title>ext4_readahead (102 samples, 1.00%)</title><rect x="75.2671%" y="133" width="0.9999%" height="15" fill="rgb(207,181,40)" fg:x="7678" fg:w="102"/><text x="75.5171%" y="143.50"></text></g><g><title>page_cache_ra_unbounded (484 samples, 4.74%)</title><rect x="71.6302%" y="165" width="4.7446%" height="15" fill="rgb(254,173,49)" fg:x="7307" fg:w="484"/><text x="71.8802%" y="175.50">page_c..</text></g><g><title>xa_load (10 samples, 0.10%)</title><rect x="76.2768%" y="149" width="0.0980%" height="15" fill="rgb(221,1,38)" fg:x="7781" fg:w="10"/><text x="76.5268%" y="159.50"></text></g><g><title>xas_descend (3 samples, 0.03%)</title><rect x="76.3455%" y="133" width="0.0294%" height="15" fill="rgb(206,124,46)" fg:x="7788" fg:w="3"/><text x="76.5955%" y="143.50"></text></g><g><title>filemap_fault (542 samples, 5.31%)</title><rect x="71.0715%" y="229" width="5.3132%" height="15" fill="rgb(249,21,11)" fg:x="7250" fg:w="542"/><text x="71.3215%" y="239.50">filemap..</text></g><g><title>page_cache_async_ra (492 samples, 4.82%)</title><rect x="71.5616%" y="213" width="4.8231%" height="15" fill="rgb(222,201,40)" fg:x="7300" fg:w="492"/><text x="71.8116%" y="223.50">page_c..</text></g><g><title>ondemand_readahead (492 samples, 4.82%)</title><rect x="71.5616%" y="197" width="4.8231%" height="15" fill="rgb(235,61,29)" fg:x="7300" fg:w="492"/><text x="71.8116%" y="207.50">ondema..</text></g><g><title>page_cache_ra_order (490 samples, 4.80%)</title><rect x="71.5812%" y="181" width="4.8035%" height="15" fill="rgb(219,207,3)" fg:x="7302" fg:w="490"/><text x="71.8312%" y="191.50">page_c..</text></g><g><title>__do_fault (549 samples, 5.38%)</title><rect x="71.0126%" y="245" width="5.3818%" height="15" fill="rgb(222,56,46)" fg:x="7244" fg:w="549"/><text x="71.2626%" y="255.50">__do_fa..</text></g><g><title>__rcu_read_unlock (7 samples, 0.07%)</title><rect x="76.3945%" y="245" width="0.0686%" height="15" fill="rgb(239,76,54)" fg:x="7793" fg:w="7"/><text x="76.6445%" y="255.50"></text></g><g><title>_compound_head (2 samples, 0.02%)</title><rect x="76.4631%" y="245" width="0.0196%" height="15" fill="rgb(231,124,27)" fg:x="7800" fg:w="2"/><text x="76.7131%" y="255.50"></text></g><g><title>_raw_spin_unlock (4 samples, 0.04%)</title><rect x="76.4827%" y="245" width="0.0392%" height="15" fill="rgb(249,195,6)" fg:x="7802" fg:w="4"/><text x="76.7327%" y="255.50"></text></g><g><title>balance_dirty_pages_ratelimited (3 samples, 0.03%)</title><rect x="76.5219%" y="245" width="0.0294%" height="15" fill="rgb(237,174,47)" fg:x="7806" fg:w="3"/><text x="76.7719%" y="255.50"></text></g><g><title>__cond_resched (2 samples, 0.02%)</title><rect x="76.5709%" y="229" width="0.0196%" height="15" fill="rgb(206,201,31)" fg:x="7811" fg:w="2"/><text x="76.8209%" y="239.50"></text></g><g><title>block_page_mkwrite (2 samples, 0.02%)</title><rect x="76.5905%" y="229" width="0.0196%" height="15" fill="rgb(231,57,52)" fg:x="7813" fg:w="2"/><text x="76.8405%" y="239.50"></text></g><g><title>ext4_convert_inline_data (3 samples, 0.03%)</title><rect x="76.6199%" y="229" width="0.0294%" height="15" fill="rgb(248,177,22)" fg:x="7816" fg:w="3"/><text x="76.8699%" y="239.50"></text></g><g><title>__block_commit_write (7 samples, 0.07%)</title><rect x="76.8454%" y="197" width="0.0686%" height="15" fill="rgb(215,211,37)" fg:x="7839" fg:w="7"/><text x="77.0954%" y="207.50"></text></g><g><title>mark_buffer_dirty (2 samples, 0.02%)</title><rect x="76.8944%" y="181" width="0.0196%" height="15" fill="rgb(241,128,51)" fg:x="7844" fg:w="2"/><text x="77.1444%" y="191.50"></text></g><g><title>clean_bdev_aliases (27 samples, 0.26%)</title><rect x="77.0807%" y="181" width="0.2647%" height="15" fill="rgb(227,165,31)" fg:x="7863" fg:w="27"/><text x="77.3307%" y="191.50"></text></g><g><title>filemap_get_folios (18 samples, 0.18%)</title><rect x="77.1689%" y="165" width="0.1765%" height="15" fill="rgb(228,167,24)" fg:x="7872" fg:w="18"/><text x="77.4189%" y="175.50"></text></g><g><title>filemap_get_folios_tag (16 samples, 0.16%)</title><rect x="77.1885%" y="149" width="0.1568%" height="15" fill="rgb(228,143,12)" fg:x="7874" fg:w="16"/><text x="77.4385%" y="159.50"></text></g><g><title>xas_find (8 samples, 0.08%)</title><rect x="77.2669%" y="133" width="0.0784%" height="15" fill="rgb(249,149,8)" fg:x="7882" fg:w="8"/><text x="77.5169%" y="143.50"></text></g><g><title>_raw_read_lock (2 samples, 0.02%)</title><rect x="77.5414%" y="149" width="0.0196%" height="15" fill="rgb(243,35,44)" fg:x="7910" fg:w="2"/><text x="77.7914%" y="159.50"></text></g><g><title>_raw_read_unlock (3 samples, 0.03%)</title><rect x="77.5610%" y="149" width="0.0294%" height="15" fill="rgb(246,89,9)" fg:x="7912" fg:w="3"/><text x="77.8110%" y="159.50"></text></g><g><title>_raw_spin_lock (2 samples, 0.02%)</title><rect x="77.5904%" y="149" width="0.0196%" height="15" fill="rgb(233,213,13)" fg:x="7915" fg:w="2"/><text x="77.8404%" y="159.50"></text></g><g><title>_raw_write_unlock (2 samples, 0.02%)</title><rect x="77.6198%" y="149" width="0.0196%" height="15" fill="rgb(233,141,41)" fg:x="7918" fg:w="2"/><text x="77.8698%" y="159.50"></text></g><g><title>down_write (5 samples, 0.05%)</title><rect x="77.6394%" y="149" width="0.0490%" height="15" fill="rgb(239,167,4)" fg:x="7920" fg:w="5"/><text x="77.8894%" y="159.50"></text></g><g><title>ext4_claim_free_clusters (2 samples, 0.02%)</title><rect x="77.6885%" y="149" width="0.0196%" height="15" fill="rgb(209,217,16)" fg:x="7925" fg:w="2"/><text x="77.9385%" y="159.50"></text></g><g><title>__dquot_alloc_space (9 samples, 0.09%)</title><rect x="77.7865%" y="133" width="0.0882%" height="15" fill="rgb(219,88,35)" fg:x="7935" fg:w="9"/><text x="78.0365%" y="143.50"></text></g><g><title>ext4_claim_free_clusters (4 samples, 0.04%)</title><rect x="77.8943%" y="133" width="0.0392%" height="15" fill="rgb(220,193,23)" fg:x="7946" fg:w="4"/><text x="78.1443%" y="143.50"></text></g><g><title>percpu_counter_add_batch (2 samples, 0.02%)</title><rect x="77.9139%" y="117" width="0.0196%" height="15" fill="rgb(230,90,52)" fg:x="7948" fg:w="2"/><text x="78.1639%" y="127.50"></text></g><g><title>ext4_get_reserved_space (5 samples, 0.05%)</title><rect x="77.9335%" y="133" width="0.0490%" height="15" fill="rgb(252,106,19)" fg:x="7950" fg:w="5"/><text x="78.1835%" y="143.50"></text></g><g><title>ext4_da_reserve_space (31 samples, 0.30%)</title><rect x="77.7081%" y="149" width="0.3039%" height="15" fill="rgb(206,74,20)" fg:x="7927" fg:w="31"/><text x="77.9581%" y="159.50"></text></g><g><title>__es_insert_extent (14 samples, 0.14%)</title><rect x="78.0904%" y="133" width="0.1372%" height="15" fill="rgb(230,138,44)" fg:x="7966" fg:w="14"/><text x="78.3404%" y="143.50"></text></g><g><title>__es_remove_extent (6 samples, 0.06%)</title><rect x="78.2276%" y="133" width="0.0588%" height="15" fill="rgb(235,182,43)" fg:x="7980" fg:w="6"/><text x="78.4776%" y="143.50"></text></g><g><title>ext4_es_can_be_merged.isra.0 (4 samples, 0.04%)</title><rect x="78.2962%" y="133" width="0.0392%" height="15" fill="rgb(242,16,51)" fg:x="7987" fg:w="4"/><text x="78.5462%" y="143.50"></text></g><g><title>ext4_es_insert_delayed_block (38 samples, 0.37%)</title><rect x="78.0120%" y="149" width="0.3725%" height="15" fill="rgb(248,9,4)" fg:x="7958" fg:w="38"/><text x="78.2620%" y="159.50"></text></g><g><title>srso_safe_ret (4 samples, 0.04%)</title><rect x="78.3453%" y="133" width="0.0392%" height="15" fill="rgb(210,31,22)" fg:x="7992" fg:w="4"/><text x="78.5953%" y="143.50"></text></g><g><title>ext4_es_lookup_extent (11 samples, 0.11%)</title><rect x="78.3845%" y="149" width="0.1078%" height="15" fill="rgb(239,54,39)" fg:x="7996" fg:w="11"/><text x="78.6345%" y="159.50"></text></g><g><title>percpu_counter_add_batch (2 samples, 0.02%)</title><rect x="78.4727%" y="133" width="0.0196%" height="15" fill="rgb(230,99,41)" fg:x="8005" fg:w="2"/><text x="78.7227%" y="143.50"></text></g><g><title>srso_safe_ret (3 samples, 0.03%)</title><rect x="78.4923%" y="149" width="0.0294%" height="15" fill="rgb(253,106,12)" fg:x="8007" fg:w="3"/><text x="78.7423%" y="159.50"></text></g><g><title>ext4_da_map_blocks.constprop.0 (121 samples, 1.19%)</title><rect x="77.3748%" y="165" width="1.1862%" height="15" fill="rgb(213,46,41)" fg:x="7893" fg:w="121"/><text x="77.6248%" y="175.50"></text></g><g><title>up_write (4 samples, 0.04%)</title><rect x="78.5217%" y="149" width="0.0392%" height="15" fill="rgb(215,133,35)" fg:x="8010" fg:w="4"/><text x="78.7717%" y="159.50"></text></g><g><title>ext4_da_reserve_space (2 samples, 0.02%)</title><rect x="78.5609%" y="165" width="0.0196%" height="15" fill="rgb(213,28,5)" fg:x="8014" fg:w="2"/><text x="78.8109%" y="175.50"></text></g><g><title>ext4_da_get_block_prep (130 samples, 1.27%)</title><rect x="77.3454%" y="181" width="1.2744%" height="15" fill="rgb(215,77,49)" fg:x="7890" fg:w="130"/><text x="77.5954%" y="191.50"></text></g><g><title>up_write (2 samples, 0.02%)</title><rect x="78.6001%" y="165" width="0.0196%" height="15" fill="rgb(248,100,22)" fg:x="8018" fg:w="2"/><text x="78.8501%" y="175.50"></text></g><g><title>filemap_get_folios (2 samples, 0.02%)</title><rect x="78.6197%" y="181" width="0.0196%" height="15" fill="rgb(208,67,9)" fg:x="8020" fg:w="2"/><text x="78.8697%" y="191.50"></text></g><g><title>_raw_spin_lock (2 samples, 0.02%)</title><rect x="78.6492%" y="165" width="0.0196%" height="15" fill="rgb(219,133,21)" fg:x="8023" fg:w="2"/><text x="78.8992%" y="175.50"></text></g><g><title>__memcg_slab_post_alloc_hook (2 samples, 0.02%)</title><rect x="78.8256%" y="117" width="0.0196%" height="15" fill="rgb(246,46,29)" fg:x="8041" fg:w="2"/><text x="79.0756%" y="127.50"></text></g><g><title>current_obj_cgroup (4 samples, 0.04%)</title><rect x="78.8452%" y="117" width="0.0392%" height="15" fill="rgb(246,185,52)" fg:x="8043" fg:w="4"/><text x="79.0952%" y="127.50"></text></g><g><title>__alloc_pages (2 samples, 0.02%)</title><rect x="79.0119%" y="53" width="0.0196%" height="15" fill="rgb(252,136,11)" fg:x="8060" fg:w="2"/><text x="79.2619%" y="63.50"></text></g><g><title>get_page_from_freelist (2 samples, 0.02%)</title><rect x="79.0119%" y="37" width="0.0196%" height="15" fill="rgb(219,138,53)" fg:x="8060" fg:w="2"/><text x="79.2619%" y="47.50"></text></g><g><title>___slab_alloc (4 samples, 0.04%)</title><rect x="79.0119%" y="101" width="0.0392%" height="15" fill="rgb(211,51,23)" fg:x="8060" fg:w="4"/><text x="79.2619%" y="111.50"></text></g><g><title>new_slab (4 samples, 0.04%)</title><rect x="79.0119%" y="85" width="0.0392%" height="15" fill="rgb(247,221,28)" fg:x="8060" fg:w="4"/><text x="79.2619%" y="95.50"></text></g><g><title>allocate_slab (4 samples, 0.04%)</title><rect x="79.0119%" y="69" width="0.0392%" height="15" fill="rgb(251,222,45)" fg:x="8060" fg:w="4"/><text x="79.2619%" y="79.50"></text></g><g><title>shuffle_freelist (2 samples, 0.02%)</title><rect x="79.0315%" y="53" width="0.0196%" height="15" fill="rgb(217,162,53)" fg:x="8062" fg:w="2"/><text x="79.2815%" y="63.50"></text></g><g><title>__memcg_slab_post_alloc_hook (20 samples, 0.20%)</title><rect x="79.0511%" y="101" width="0.1961%" height="15" fill="rgb(229,93,14)" fg:x="8064" fg:w="20"/><text x="79.3011%" y="111.50"></text></g><g><title>mod_objcg_state (6 samples, 0.06%)</title><rect x="79.1883%" y="85" width="0.0588%" height="15" fill="rgb(209,67,49)" fg:x="8078" fg:w="6"/><text x="79.4383%" y="95.50"></text></g><g><title>consume_obj_stock (3 samples, 0.03%)</title><rect x="79.3060%" y="85" width="0.0294%" height="15" fill="rgb(213,87,29)" fg:x="8090" fg:w="3"/><text x="79.5560%" y="95.50"></text></g><g><title>kmem_cache_alloc (48 samples, 0.47%)</title><rect x="78.8844%" y="117" width="0.4705%" height="15" fill="rgb(205,151,52)" fg:x="8047" fg:w="48"/><text x="79.1344%" y="127.50"></text></g><g><title>obj_cgroup_charge (9 samples, 0.09%)</title><rect x="79.2667%" y="101" width="0.0882%" height="15" fill="rgb(253,215,39)" fg:x="8086" fg:w="9"/><text x="79.5167%" y="111.50"></text></g><g><title>obj_cgroup_charge (2 samples, 0.02%)</title><rect x="79.3550%" y="117" width="0.0196%" height="15" fill="rgb(221,220,41)" fg:x="8095" fg:w="2"/><text x="79.6050%" y="127.50"></text></g><g><title>alloc_buffer_head (60 samples, 0.59%)</title><rect x="78.8060%" y="133" width="0.5882%" height="15" fill="rgb(218,133,21)" fg:x="8039" fg:w="60"/><text x="79.0560%" y="143.50"></text></g><g><title>should_failslab.constprop.0 (2 samples, 0.02%)</title><rect x="79.3746%" y="117" width="0.0196%" height="15" fill="rgb(221,193,43)" fg:x="8097" fg:w="2"/><text x="79.6246%" y="127.50"></text></g><g><title>create_empty_buffers (77 samples, 0.75%)</title><rect x="78.6688%" y="165" width="0.7548%" height="15" fill="rgb(240,128,52)" fg:x="8025" fg:w="77"/><text x="78.9188%" y="175.50"></text></g><g><title>folio_alloc_buffers (71 samples, 0.70%)</title><rect x="78.7276%" y="149" width="0.6960%" height="15" fill="rgb(253,114,12)" fg:x="8031" fg:w="71"/><text x="78.9776%" y="159.50"></text></g><g><title>kmem_cache_alloc (3 samples, 0.03%)</title><rect x="79.3942%" y="133" width="0.0294%" height="15" fill="rgb(215,223,47)" fg:x="8099" fg:w="3"/><text x="79.6442%" y="143.50"></text></g><g><title>folio_create_buffers (81 samples, 0.79%)</title><rect x="78.6393%" y="181" width="0.7940%" height="15" fill="rgb(248,225,23)" fg:x="8022" fg:w="81"/><text x="78.8893%" y="191.50"></text></g><g><title>__mod_zone_page_state (3 samples, 0.03%)</title><rect x="79.6098%" y="149" width="0.0294%" height="15" fill="rgb(250,108,0)" fg:x="8121" fg:w="3"/><text x="79.8598%" y="159.50"></text></g><g><title>xas_load (11 samples, 0.11%)</title><rect x="79.6981%" y="133" width="0.1078%" height="15" fill="rgb(228,208,7)" fg:x="8130" fg:w="11"/><text x="79.9481%" y="143.50"></text></g><g><title>__xa_set_mark (22 samples, 0.22%)</title><rect x="79.6393%" y="149" width="0.2157%" height="15" fill="rgb(244,45,10)" fg:x="8124" fg:w="22"/><text x="79.8893%" y="159.50"></text></g><g><title>xas_set_mark (5 samples, 0.05%)</title><rect x="79.8059%" y="133" width="0.0490%" height="15" fill="rgb(207,125,25)" fg:x="8141" fg:w="5"/><text x="80.0559%" y="143.50"></text></g><g><title>__mod_memcg_lruvec_state (3 samples, 0.03%)</title><rect x="80.0706%" y="101" width="0.0294%" height="15" fill="rgb(210,195,18)" fg:x="8168" fg:w="3"/><text x="80.3206%" y="111.50"></text></g><g><title>__mod_node_page_state (2 samples, 0.02%)</title><rect x="80.1000%" y="101" width="0.0196%" height="15" fill="rgb(249,80,12)" fg:x="8171" fg:w="2"/><text x="80.3500%" y="111.50"></text></g><g><title>__mod_lruvec_state (8 samples, 0.08%)</title><rect x="80.0510%" y="117" width="0.0784%" height="15" fill="rgb(221,65,9)" fg:x="8166" fg:w="8"/><text x="80.3010%" y="127.50"></text></g><g><title>__lruvec_stat_mod_folio (15 samples, 0.15%)</title><rect x="80.0020%" y="133" width="0.1470%" height="15" fill="rgb(235,49,36)" fg:x="8161" fg:w="15"/><text x="80.2520%" y="143.50"></text></g><g><title>__mod_memcg_lruvec_state (2 samples, 0.02%)</title><rect x="80.1294%" y="117" width="0.0196%" height="15" fill="rgb(225,32,20)" fg:x="8174" fg:w="2"/><text x="80.3794%" y="127.50"></text></g><g><title>__mod_node_page_state (2 samples, 0.02%)</title><rect x="80.1490%" y="133" width="0.0196%" height="15" fill="rgb(215,141,46)" fg:x="8176" fg:w="2"/><text x="80.3990%" y="143.50"></text></g><g><title>__mod_zone_page_state (2 samples, 0.02%)</title><rect x="80.1686%" y="133" width="0.0196%" height="15" fill="rgb(250,160,47)" fg:x="8178" fg:w="2"/><text x="80.4186%" y="143.50"></text></g><g><title>__rcu_read_lock (2 samples, 0.02%)</title><rect x="80.1882%" y="133" width="0.0196%" height="15" fill="rgb(216,222,40)" fg:x="8180" fg:w="2"/><text x="80.4382%" y="143.50"></text></g><g><title>percpu_counter_add_batch (4 samples, 0.04%)</title><rect x="80.2078%" y="133" width="0.0392%" height="15" fill="rgb(234,217,39)" fg:x="8182" fg:w="4"/><text x="80.4578%" y="143.50"></text></g><g><title>folio_account_dirtied (40 samples, 0.39%)</title><rect x="79.8647%" y="149" width="0.3921%" height="15" fill="rgb(207,178,40)" fg:x="8147" fg:w="40"/><text x="80.1147%" y="159.50"></text></g><g><title>inode_to_bdi (2 samples, 0.02%)</title><rect x="80.2568%" y="149" width="0.0196%" height="15" fill="rgb(221,136,13)" fg:x="8187" fg:w="2"/><text x="80.5068%" y="159.50"></text></g><g><title>__folio_mark_dirty (78 samples, 0.76%)</title><rect x="79.5412%" y="165" width="0.7646%" height="15" fill="rgb(249,199,10)" fg:x="8114" fg:w="78"/><text x="79.7912%" y="175.50"></text></g><g><title>xas_set_mark (2 samples, 0.02%)</title><rect x="80.2862%" y="149" width="0.0196%" height="15" fill="rgb(249,222,13)" fg:x="8190" fg:w="2"/><text x="80.5362%" y="159.50"></text></g><g><title>__mark_inode_dirty (3 samples, 0.03%)</title><rect x="80.3059%" y="165" width="0.0294%" height="15" fill="rgb(244,185,38)" fg:x="8192" fg:w="3"/><text x="80.5559%" y="175.50"></text></g><g><title>__rcu_read_lock (2 samples, 0.02%)</title><rect x="80.3353%" y="165" width="0.0196%" height="15" fill="rgb(236,202,9)" fg:x="8195" fg:w="2"/><text x="80.5853%" y="175.50"></text></g><g><title>folio_memcg_lock (2 samples, 0.02%)</title><rect x="80.3941%" y="165" width="0.0196%" height="15" fill="rgb(250,229,37)" fg:x="8201" fg:w="2"/><text x="80.6441%" y="175.50"></text></g><g><title>mark_buffer_dirty (101 samples, 0.99%)</title><rect x="79.4334%" y="181" width="0.9901%" height="15" fill="rgb(206,174,23)" fg:x="8103" fg:w="101"/><text x="79.6834%" y="191.50"></text></g><g><title>__block_write_begin_int (360 samples, 3.53%)</title><rect x="76.9140%" y="197" width="3.5291%" height="15" fill="rgb(211,33,43)" fg:x="7846" fg:w="360"/><text x="77.1640%" y="207.50">__b..</text></g><g><title>srso_safe_ret (2 samples, 0.02%)</title><rect x="80.4235%" y="181" width="0.0196%" height="15" fill="rgb(245,58,50)" fg:x="8204" fg:w="2"/><text x="80.6735%" y="191.50"></text></g><g><title>ext4_da_get_block_prep (3 samples, 0.03%)</title><rect x="80.4431%" y="197" width="0.0294%" height="15" fill="rgb(244,68,36)" fg:x="8206" fg:w="3"/><text x="80.6931%" y="207.50"></text></g><g><title>ext4_dirty_folio (5 samples, 0.05%)</title><rect x="80.4725%" y="197" width="0.0490%" height="15" fill="rgb(232,229,15)" fg:x="8209" fg:w="5"/><text x="80.7225%" y="207.50"></text></g><g><title>folio_create_buffers (2 samples, 0.02%)</title><rect x="80.5215%" y="197" width="0.0196%" height="15" fill="rgb(254,30,23)" fg:x="8214" fg:w="2"/><text x="80.7715%" y="207.50"></text></g><g><title>block_dirty_folio (3 samples, 0.03%)</title><rect x="80.6097%" y="181" width="0.0294%" height="15" fill="rgb(235,160,14)" fg:x="8223" fg:w="3"/><text x="80.8597%" y="191.50"></text></g><g><title>_raw_spin_lock (2 samples, 0.02%)</title><rect x="80.6490%" y="165" width="0.0196%" height="15" fill="rgb(212,155,44)" fg:x="8227" fg:w="2"/><text x="80.8990%" y="175.50"></text></g><g><title>block_dirty_folio (13 samples, 0.13%)</title><rect x="80.6686%" y="165" width="0.1274%" height="15" fill="rgb(226,2,50)" fg:x="8229" fg:w="13"/><text x="80.9186%" y="175.50"></text></g><g><title>folio_memcg_lock (2 samples, 0.02%)</title><rect x="80.7764%" y="149" width="0.0196%" height="15" fill="rgb(234,177,6)" fg:x="8240" fg:w="2"/><text x="81.0264%" y="159.50"></text></g><g><title>folio_mark_dirty (28 samples, 0.27%)</title><rect x="80.5509%" y="197" width="0.2745%" height="15" fill="rgb(217,24,9)" fg:x="8217" fg:w="28"/><text x="80.8009%" y="207.50"></text></g><g><title>ext4_dirty_folio (19 samples, 0.19%)</title><rect x="80.6392%" y="181" width="0.1863%" height="15" fill="rgb(220,13,46)" fg:x="8226" fg:w="19"/><text x="80.8892%" y="191.50"></text></g><g><title>folio_memcg_unlock (3 samples, 0.03%)</title><rect x="80.7960%" y="165" width="0.0294%" height="15" fill="rgb(239,221,27)" fg:x="8242" fg:w="3"/><text x="81.0460%" y="175.50"></text></g><g><title>folio_wait_stable (2 samples, 0.02%)</title><rect x="80.8254%" y="197" width="0.0196%" height="15" fill="rgb(222,198,25)" fg:x="8245" fg:w="2"/><text x="81.0754%" y="207.50"></text></g><g><title>block_page_mkwrite (420 samples, 4.12%)</title><rect x="76.7474%" y="213" width="4.1172%" height="15" fill="rgb(211,99,13)" fg:x="7829" fg:w="420"/><text x="76.9974%" y="223.50">bloc..</text></g><g><title>down_read (2 samples, 0.02%)</title><rect x="80.8646%" y="213" width="0.0196%" height="15" fill="rgb(232,111,31)" fg:x="8249" fg:w="2"/><text x="81.1146%" y="223.50"></text></g><g><title>ext4_convert_inline_data (2 samples, 0.02%)</title><rect x="80.8842%" y="213" width="0.0196%" height="15" fill="rgb(245,82,37)" fg:x="8251" fg:w="2"/><text x="81.1342%" y="223.50"></text></g><g><title>inode_needs_update_time (9 samples, 0.09%)</title><rect x="80.9430%" y="197" width="0.0882%" height="15" fill="rgb(227,149,46)" fg:x="8257" fg:w="9"/><text x="81.1930%" y="207.50"></text></g><g><title>file_update_time (14 samples, 0.14%)</title><rect x="80.9136%" y="213" width="0.1372%" height="15" fill="rgb(218,36,50)" fg:x="8254" fg:w="14"/><text x="81.1636%" y="223.50"></text></g><g><title>timestamp_truncate (2 samples, 0.02%)</title><rect x="81.0313%" y="197" width="0.0196%" height="15" fill="rgb(226,80,48)" fg:x="8266" fg:w="2"/><text x="81.2813%" y="207.50"></text></g><g><title>folio_wait_stable (5 samples, 0.05%)</title><rect x="81.0607%" y="213" width="0.0490%" height="15" fill="rgb(238,224,15)" fg:x="8269" fg:w="5"/><text x="81.3107%" y="223.50"></text></g><g><title>ext4_page_mkwrite (457 samples, 4.48%)</title><rect x="76.6592%" y="229" width="4.4800%" height="15" fill="rgb(241,136,10)" fg:x="7820" fg:w="457"/><text x="76.9092%" y="239.50">ext4_..</text></g><g><title>srso_safe_ret (2 samples, 0.02%)</title><rect x="81.1195%" y="213" width="0.0196%" height="15" fill="rgb(208,32,45)" fg:x="8275" fg:w="2"/><text x="81.3695%" y="223.50"></text></g><g><title>file_update_time (2 samples, 0.02%)</title><rect x="81.1391%" y="229" width="0.0196%" height="15" fill="rgb(207,135,9)" fg:x="8277" fg:w="2"/><text x="81.3891%" y="239.50"></text></g><g><title>do_page_mkwrite (471 samples, 4.62%)</title><rect x="76.5513%" y="245" width="4.6172%" height="15" fill="rgb(206,86,44)" fg:x="7809" fg:w="471"/><text x="76.8013%" y="255.50">do_pa..</text></g><g><title>ext4_page_mkwrite (6 samples, 0.06%)</title><rect x="81.1685%" y="245" width="0.0588%" height="15" fill="rgb(245,177,15)" fg:x="8280" fg:w="6"/><text x="81.4185%" y="255.50"></text></g><g><title>__rcu_read_lock (4 samples, 0.04%)</title><rect x="81.3744%" y="213" width="0.0392%" height="15" fill="rgb(206,64,50)" fg:x="8301" fg:w="4"/><text x="81.6244%" y="223.50"></text></g><g><title>__rcu_read_unlock (4 samples, 0.04%)</title><rect x="81.4136%" y="213" width="0.0392%" height="15" fill="rgb(234,36,40)" fg:x="8305" fg:w="4"/><text x="81.6636%" y="223.50"></text></g><g><title>balance_dirty_pages_ratelimited_flags (30 samples, 0.29%)</title><rect x="81.4528%" y="213" width="0.2941%" height="15" fill="rgb(213,64,8)" fg:x="8309" fg:w="30"/><text x="81.7028%" y="223.50"></text></g><g><title>inode_to_bdi (2 samples, 0.02%)</title><rect x="81.7469%" y="213" width="0.0196%" height="15" fill="rgb(210,75,36)" fg:x="8339" fg:w="2"/><text x="81.9969%" y="223.50"></text></g><g><title>radix_tree_lookup (2 samples, 0.02%)</title><rect x="81.7665%" y="213" width="0.0196%" height="15" fill="rgb(229,88,21)" fg:x="8341" fg:w="2"/><text x="82.0165%" y="223.50"></text></g><g><title>balance_dirty_pages_ratelimited (45 samples, 0.44%)</title><rect x="81.3548%" y="229" width="0.4411%" height="15" fill="rgb(252,204,47)" fg:x="8299" fg:w="45"/><text x="81.6048%" y="239.50"></text></g><g><title>ext4_dirty_folio (3 samples, 0.03%)</title><rect x="81.8057%" y="229" width="0.0294%" height="15" fill="rgb(208,77,27)" fg:x="8345" fg:w="3"/><text x="82.0557%" y="239.50"></text></g><g><title>_raw_spin_lock (3 samples, 0.03%)</title><rect x="81.8841%" y="197" width="0.0294%" height="15" fill="rgb(221,76,26)" fg:x="8353" fg:w="3"/><text x="82.1341%" y="207.50"></text></g><g><title>folio_memcg_lock (3 samples, 0.03%)</title><rect x="81.9626%" y="181" width="0.0294%" height="15" fill="rgb(225,139,18)" fg:x="8361" fg:w="3"/><text x="82.2126%" y="191.50"></text></g><g><title>block_dirty_folio (11 samples, 0.11%)</title><rect x="81.9135%" y="197" width="0.1078%" height="15" fill="rgb(230,137,11)" fg:x="8356" fg:w="11"/><text x="82.1635%" y="207.50"></text></g><g><title>srso_safe_ret (2 samples, 0.02%)</title><rect x="82.0018%" y="181" width="0.0196%" height="15" fill="rgb(212,28,1)" fg:x="8365" fg:w="2"/><text x="82.2518%" y="191.50"></text></g><g><title>ext4_dirty_folio (15 samples, 0.15%)</title><rect x="81.8841%" y="213" width="0.1470%" height="15" fill="rgb(248,164,17)" fg:x="8353" fg:w="15"/><text x="82.1341%" y="223.50"></text></g><g><title>folio_mark_dirty (21 samples, 0.21%)</title><rect x="81.8351%" y="229" width="0.2059%" height="15" fill="rgb(222,171,42)" fg:x="8348" fg:w="21"/><text x="82.0851%" y="239.50"></text></g><g><title>srso_safe_ret (2 samples, 0.02%)</title><rect x="82.0410%" y="229" width="0.0196%" height="15" fill="rgb(243,84,45)" fg:x="8369" fg:w="2"/><text x="82.2910%" y="239.50"></text></g><g><title>fault_dirty_shared_page (88 samples, 0.86%)</title><rect x="81.2273%" y="245" width="0.8627%" height="15" fill="rgb(252,49,23)" fg:x="8286" fg:w="88"/><text x="81.4773%" y="255.50"></text></g><g><title>up_read (3 samples, 0.03%)</title><rect x="82.0606%" y="229" width="0.0294%" height="15" fill="rgb(215,19,7)" fg:x="8371" fg:w="3"/><text x="82.3106%" y="239.50"></text></g><g><title>filemap_fault (3 samples, 0.03%)</title><rect x="82.0900%" y="245" width="0.0294%" height="15" fill="rgb(238,81,41)" fg:x="8374" fg:w="3"/><text x="82.3400%" y="255.50"></text></g><g><title>__pte_offset_map (7 samples, 0.07%)</title><rect x="82.2370%" y="213" width="0.0686%" height="15" fill="rgb(210,199,37)" fg:x="8389" fg:w="7"/><text x="82.4870%" y="223.50"></text></g><g><title>__pte_offset_map_lock (13 samples, 0.13%)</title><rect x="82.1978%" y="229" width="0.1274%" height="15" fill="rgb(244,192,49)" fg:x="8385" fg:w="13"/><text x="82.4478%" y="239.50"></text></g><g><title>folio_add_file_rmap_ptes (2 samples, 0.02%)</title><rect x="82.3351%" y="229" width="0.0196%" height="15" fill="rgb(226,211,11)" fg:x="8399" fg:w="2"/><text x="82.5851%" y="239.50"></text></g><g><title>pte_mkwrite (4 samples, 0.04%)</title><rect x="82.3547%" y="229" width="0.0392%" height="15" fill="rgb(236,162,54)" fg:x="8401" fg:w="4"/><text x="82.6047%" y="239.50"></text></g><g><title>__mod_memcg_lruvec_state (7 samples, 0.07%)</title><rect x="82.6586%" y="165" width="0.0686%" height="15" fill="rgb(220,229,9)" fg:x="8432" fg:w="7"/><text x="82.9086%" y="175.50"></text></g><g><title>cgroup_rstat_updated (2 samples, 0.02%)</title><rect x="82.7076%" y="149" width="0.0196%" height="15" fill="rgb(250,87,22)" fg:x="8437" fg:w="2"/><text x="82.9576%" y="159.50"></text></g><g><title>__mod_lruvec_state (12 samples, 0.12%)</title><rect x="82.6194%" y="181" width="0.1176%" height="15" fill="rgb(239,43,17)" fg:x="8428" fg:w="12"/><text x="82.8694%" y="191.50"></text></g><g><title>__lruvec_stat_mod_folio (21 samples, 0.21%)</title><rect x="82.5409%" y="197" width="0.2059%" height="15" fill="rgb(231,177,25)" fg:x="8420" fg:w="21"/><text x="82.7909%" y="207.50"></text></g><g><title>folio_add_file_rmap_ptes (25 samples, 0.25%)</title><rect x="82.5311%" y="213" width="0.2451%" height="15" fill="rgb(219,179,1)" fg:x="8419" fg:w="25"/><text x="82.7811%" y="223.50"></text></g><g><title>__rcu_read_unlock (3 samples, 0.03%)</title><rect x="82.7468%" y="197" width="0.0294%" height="15" fill="rgb(238,219,53)" fg:x="8441" fg:w="3"/><text x="82.9968%" y="207.50"></text></g><g><title>percpu_counter_add_batch (8 samples, 0.08%)</title><rect x="82.7762%" y="213" width="0.0784%" height="15" fill="rgb(232,167,36)" fg:x="8444" fg:w="8"/><text x="83.0262%" y="223.50"></text></g><g><title>set_ptes.constprop.0 (5 samples, 0.05%)</title><rect x="82.8546%" y="213" width="0.0490%" height="15" fill="rgb(244,19,51)" fg:x="8452" fg:w="5"/><text x="83.1046%" y="223.50"></text></g><g><title>set_pte_range (53 samples, 0.52%)</title><rect x="82.3939%" y="229" width="0.5196%" height="15" fill="rgb(224,6,22)" fg:x="8405" fg:w="53"/><text x="82.6439%" y="239.50"></text></g><g><title>finish_fault (82 samples, 0.80%)</title><rect x="82.1194%" y="245" width="0.8038%" height="15" fill="rgb(224,145,5)" fg:x="8377" fg:w="82"/><text x="82.3694%" y="255.50"></text></g><g><title>srso_safe_ret (3 samples, 0.03%)</title><rect x="82.9527%" y="245" width="0.0294%" height="15" fill="rgb(234,130,49)" fg:x="8462" fg:w="3"/><text x="83.2027%" y="255.50"></text></g><g><title>do_fault (1,240 samples, 12.16%)</title><rect x="70.8460%" y="261" width="12.1557%" height="15" fill="rgb(254,6,2)" fg:x="7227" fg:w="1240"/><text x="71.0960%" y="271.50">do_fault</text></g><g><title>up_read (2 samples, 0.02%)</title><rect x="82.9821%" y="245" width="0.0196%" height="15" fill="rgb(208,96,46)" fg:x="8465" fg:w="2"/><text x="83.2321%" y="255.50"></text></g><g><title>fault_dirty_shared_page (3 samples, 0.03%)</title><rect x="83.0115%" y="261" width="0.0294%" height="15" fill="rgb(239,3,39)" fg:x="8468" fg:w="3"/><text x="83.2615%" y="271.50"></text></g><g><title>finish_fault (3 samples, 0.03%)</title><rect x="83.0409%" y="261" width="0.0294%" height="15" fill="rgb(233,210,1)" fg:x="8471" fg:w="3"/><text x="83.2909%" y="271.50"></text></g><g><title>folio_add_lru_vma (6 samples, 0.06%)</title><rect x="83.0703%" y="261" width="0.0588%" height="15" fill="rgb(244,137,37)" fg:x="8474" fg:w="6"/><text x="83.3203%" y="271.50"></text></g><g><title>folio_add_new_anon_rmap (5 samples, 0.05%)</title><rect x="83.1291%" y="261" width="0.0490%" height="15" fill="rgb(240,136,2)" fg:x="8480" fg:w="5"/><text x="83.3791%" y="271.50"></text></g><g><title>mksaveddirty_shift (2 samples, 0.02%)</title><rect x="83.1879%" y="261" width="0.0196%" height="15" fill="rgb(239,18,37)" fg:x="8486" fg:w="2"/><text x="83.4379%" y="271.50"></text></g><g><title>pte_mkwrite (5 samples, 0.05%)</title><rect x="83.2075%" y="261" width="0.0490%" height="15" fill="rgb(218,185,22)" fg:x="8488" fg:w="5"/><text x="83.4575%" y="271.50"></text></g><g><title>__pte_offset_map (8 samples, 0.08%)</title><rect x="83.3252%" y="245" width="0.0784%" height="15" fill="rgb(225,218,4)" fg:x="8500" fg:w="8"/><text x="83.5752%" y="255.50"></text></g><g><title>__rcu_read_lock (2 samples, 0.02%)</title><rect x="83.4036%" y="245" width="0.0196%" height="15" fill="rgb(230,182,32)" fg:x="8508" fg:w="2"/><text x="83.6536%" y="255.50"></text></g><g><title>pte_offset_map_nolock (18 samples, 0.18%)</title><rect x="83.2565%" y="261" width="0.1765%" height="15" fill="rgb(242,56,43)" fg:x="8493" fg:w="18"/><text x="83.5065%" y="271.50"></text></g><g><title>srso_return_thunk (3 samples, 0.03%)</title><rect x="83.4330%" y="261" width="0.0294%" height="15" fill="rgb(233,99,24)" fg:x="8511" fg:w="3"/><text x="83.6830%" y="271.50"></text></g><g><title>srso_safe_ret (8 samples, 0.08%)</title><rect x="83.4624%" y="261" width="0.0784%" height="15" fill="rgb(234,209,42)" fg:x="8514" fg:w="8"/><text x="83.7124%" y="271.50"></text></g><g><title>handle_pte_fault (1,989 samples, 19.50%)</title><rect x="64.0525%" y="277" width="19.4981%" height="15" fill="rgb(227,7,12)" fg:x="6534" fg:w="1989"/><text x="64.3025%" y="287.50">handle_pte_fault</text></g><g><title>__handle_mm_fault (2,059 samples, 20.18%)</title><rect x="63.3761%" y="293" width="20.1843%" height="15" fill="rgb(245,203,43)" fg:x="6465" fg:w="2059"/><text x="63.6261%" y="303.50">__handle_mm_fault</text></g><g><title>__count_memcg_events (7 samples, 0.07%)</title><rect x="83.6487%" y="277" width="0.0686%" height="15" fill="rgb(238,205,33)" fg:x="8533" fg:w="7"/><text x="83.8987%" y="287.50"></text></g><g><title>cgroup_rstat_updated (2 samples, 0.02%)</title><rect x="83.6977%" y="261" width="0.0196%" height="15" fill="rgb(231,56,7)" fg:x="8538" fg:w="2"/><text x="83.9477%" y="271.50"></text></g><g><title>count_memcg_events.constprop.0 (18 samples, 0.18%)</title><rect x="83.5604%" y="293" width="0.1765%" height="15" fill="rgb(244,186,29)" fg:x="8524" fg:w="18"/><text x="83.8104%" y="303.50"></text></g><g><title>handle_pte_fault (6 samples, 0.06%)</title><rect x="83.7369%" y="293" width="0.0588%" height="15" fill="rgb(234,111,31)" fg:x="8542" fg:w="6"/><text x="83.9869%" y="303.50"></text></g><g><title>pmd_val (8 samples, 0.08%)</title><rect x="83.8055%" y="293" width="0.0784%" height="15" fill="rgb(241,149,10)" fg:x="8549" fg:w="8"/><text x="84.0555%" y="303.50"></text></g><g><title>pud_val (7 samples, 0.07%)</title><rect x="83.8839%" y="293" width="0.0686%" height="15" fill="rgb(249,206,44)" fg:x="8557" fg:w="7"/><text x="84.1339%" y="303.50"></text></g><g><title>handle_mm_fault (2,133 samples, 20.91%)</title><rect x="63.1017%" y="309" width="20.9097%" height="15" fill="rgb(251,153,30)" fg:x="6437" fg:w="2133"/><text x="63.3517%" y="319.50">handle_mm_fault</text></g><g><title>srso_safe_ret (6 samples, 0.06%)</title><rect x="83.9526%" y="293" width="0.0588%" height="15" fill="rgb(239,152,38)" fg:x="8564" fg:w="6"/><text x="84.2026%" y="303.50"></text></g><g><title>lock_vma_under_rcu (33 samples, 0.32%)</title><rect x="84.0212%" y="309" width="0.3235%" height="15" fill="rgb(249,139,47)" fg:x="8571" fg:w="33"/><text x="84.2712%" y="319.50"></text></g><g><title>mas_walk (11 samples, 0.11%)</title><rect x="84.2368%" y="293" width="0.1078%" height="15" fill="rgb(244,64,35)" fg:x="8593" fg:w="11"/><text x="84.4868%" y="303.50"></text></g><g><title>mas_walk (7 samples, 0.07%)</title><rect x="84.3447%" y="309" width="0.0686%" height="15" fill="rgb(216,46,15)" fg:x="8604" fg:w="7"/><text x="84.5947%" y="319.50"></text></g><g><title>mem_cgroup_from_task (3 samples, 0.03%)</title><rect x="84.4133%" y="309" width="0.0294%" height="15" fill="rgb(250,74,19)" fg:x="8611" fg:w="3"/><text x="84.6633%" y="319.50"></text></g><g><title>srso_safe_ret (2 samples, 0.02%)</title><rect x="84.4525%" y="309" width="0.0196%" height="15" fill="rgb(249,42,33)" fg:x="8615" fg:w="2"/><text x="84.7025%" y="319.50"></text></g><g><title>do_user_addr_fault (2,247 samples, 22.03%)</title><rect x="62.4841%" y="325" width="22.0273%" height="15" fill="rgb(242,149,17)" fg:x="6374" fg:w="2247"/><text x="62.7341%" y="335.50">do_user_addr_fault</text></g><g><title>up_read (4 samples, 0.04%)</title><rect x="84.4721%" y="309" width="0.0392%" height="15" fill="rgb(244,29,21)" fg:x="8617" fg:w="4"/><text x="84.7221%" y="319.50"></text></g><g><title>handle_mm_fault (3 samples, 0.03%)</title><rect x="84.5113%" y="325" width="0.0294%" height="15" fill="rgb(220,130,37)" fg:x="8621" fg:w="3"/><text x="84.7613%" y="335.50"></text></g><g><title>irqentry_enter (3 samples, 0.03%)</title><rect x="84.5407%" y="325" width="0.0294%" height="15" fill="rgb(211,67,2)" fg:x="8624" fg:w="3"/><text x="84.7907%" y="335.50"></text></g><g><title>irqentry_exit_to_user_mode (31 samples, 0.30%)</title><rect x="84.6094%" y="309" width="0.3039%" height="15" fill="rgb(235,68,52)" fg:x="8631" fg:w="31"/><text x="84.8594%" y="319.50"></text></g><g><title>fpregs_assert_state_consistent (2 samples, 0.02%)</title><rect x="84.8936%" y="293" width="0.0196%" height="15" fill="rgb(246,142,3)" fg:x="8660" fg:w="2"/><text x="85.1436%" y="303.50"></text></g><g><title>irqentry_exit (36 samples, 0.35%)</title><rect x="84.5701%" y="325" width="0.3529%" height="15" fill="rgb(241,25,7)" fg:x="8627" fg:w="36"/><text x="84.8201%" y="335.50"></text></g><g><title>exc_page_fault (2,329 samples, 22.83%)</title><rect x="62.1410%" y="341" width="22.8311%" height="15" fill="rgb(242,119,39)" fg:x="6339" fg:w="2329"/><text x="62.3910%" y="351.50">exc_page_fault</text></g><g><title>srso_safe_ret (2 samples, 0.02%)</title><rect x="84.9525%" y="325" width="0.0196%" height="15" fill="rgb(241,98,45)" fg:x="8666" fg:w="2"/><text x="85.2025%" y="335.50"></text></g><g><title>irqentry_enter (7 samples, 0.07%)</title><rect x="84.9721%" y="341" width="0.0686%" height="15" fill="rgb(254,28,30)" fg:x="8668" fg:w="7"/><text x="85.2221%" y="351.50"></text></g><g><title>irqentry_exit (6 samples, 0.06%)</title><rect x="85.0407%" y="341" width="0.0588%" height="15" fill="rgb(241,142,54)" fg:x="8675" fg:w="6"/><text x="85.2907%" y="351.50"></text></g><g><title>asm_exc_page_fault (2,450 samples, 24.02%)</title><rect x="61.1117%" y="357" width="24.0173%" height="15" fill="rgb(222,85,15)" fg:x="6234" fg:w="2450"/><text x="61.3617%" y="367.50">asm_exc_page_fault</text></g><g><title>srso_safe_ret (3 samples, 0.03%)</title><rect x="85.0995%" y="341" width="0.0294%" height="15" fill="rgb(210,85,47)" fg:x="8681" fg:w="3"/><text x="85.3495%" y="351.50"></text></g><g><title>error_entry (12 samples, 0.12%)</title><rect x="85.1289%" y="357" width="0.1176%" height="15" fill="rgb(224,206,25)" fg:x="8684" fg:w="12"/><text x="85.3789%" y="367.50"></text></g><g><title>error_return (13 samples, 0.13%)</title><rect x="85.2465%" y="357" width="0.1274%" height="15" fill="rgb(243,201,19)" fg:x="8696" fg:w="13"/><text x="85.4965%" y="367.50"></text></g><g><title>exc_page_fault (2 samples, 0.02%)</title><rect x="85.3740%" y="357" width="0.0196%" height="15" fill="rgb(236,59,4)" fg:x="8709" fg:w="2"/><text x="85.6240%" y="367.50"></text></g><g><title>srso_safe_ret (14 samples, 0.14%)</title><rect x="85.3936%" y="357" width="0.1372%" height="15" fill="rgb(254,179,45)" fg:x="8711" fg:w="14"/><text x="85.6436%" y="367.50"></text></g><g><title>memset (2,652 samples, 26.00%)</title><rect x="59.5628%" y="373" width="25.9975%" height="15" fill="rgb(226,14,10)" fg:x="6076" fg:w="2652"/><text x="59.8128%" y="383.50">memset</text></g><g><title>sync_regs (3 samples, 0.03%)</title><rect x="85.5308%" y="357" width="0.0294%" height="15" fill="rgb(244,27,41)" fg:x="8725" fg:w="3"/><text x="85.7808%" y="367.50"></text></g><g><title>[unknown] (8,729 samples, 85.57%)</title><rect x="0.0000%" y="389" width="85.5700%" height="15" fill="rgb(235,35,32)" fg:x="0" fg:w="8729"/><text x="0.2500%" y="399.50">[unknown]</text></g><g><title>ext4_da_write_begin (3 samples, 0.03%)</title><rect x="85.5700%" y="229" width="0.0294%" height="15" fill="rgb(218,68,31)" fg:x="8729" fg:w="3"/><text x="85.8200%" y="239.50"></text></g><g><title>ext4_block_write_begin (3 samples, 0.03%)</title><rect x="85.5700%" y="213" width="0.0294%" height="15" fill="rgb(207,120,37)" fg:x="8729" fg:w="3"/><text x="85.8200%" y="223.50"></text></g><g><title>ext4_da_get_block_prep (3 samples, 0.03%)</title><rect x="85.5700%" y="197" width="0.0294%" height="15" fill="rgb(227,98,0)" fg:x="8729" fg:w="3"/><text x="85.8200%" y="207.50"></text></g><g><title>ext4_da_map_blocks.constprop.0 (3 samples, 0.03%)</title><rect x="85.5700%" y="181" width="0.0294%" height="15" fill="rgb(207,7,3)" fg:x="8729" fg:w="3"/><text x="85.8200%" y="191.50"></text></g><g><title>ext4_ext_map_blocks (2 samples, 0.02%)</title><rect x="85.5798%" y="165" width="0.0196%" height="15" fill="rgb(206,98,19)" fg:x="8730" fg:w="2"/><text x="85.8298%" y="175.50"></text></g><g><title>__GI___libc_write (4 samples, 0.04%)</title><rect x="85.5700%" y="389" width="0.0392%" height="15" fill="rgb(217,5,26)" fg:x="8729" fg:w="4"/><text x="85.8200%" y="399.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4 samples, 0.04%)</title><rect x="85.5700%" y="373" width="0.0392%" height="15" fill="rgb(235,190,38)" fg:x="8729" fg:w="4"/><text x="85.8200%" y="383.50"></text></g><g><title>do_syscall_64 (4 samples, 0.04%)</title><rect x="85.5700%" y="357" width="0.0392%" height="15" fill="rgb(247,86,24)" fg:x="8729" fg:w="4"/><text x="85.8200%" y="367.50"></text></g><g><title>x64_sys_call (4 samples, 0.04%)</title><rect x="85.5700%" y="341" width="0.0392%" height="15" fill="rgb(205,101,16)" fg:x="8729" fg:w="4"/><text x="85.8200%" y="351.50"></text></g><g><title>__x64_sys_write (4 samples, 0.04%)</title><rect x="85.5700%" y="325" width="0.0392%" height="15" fill="rgb(246,168,33)" fg:x="8729" fg:w="4"/><text x="85.8200%" y="335.50"></text></g><g><title>ksys_write (4 samples, 0.04%)</title><rect x="85.5700%" y="309" width="0.0392%" height="15" fill="rgb(231,114,1)" fg:x="8729" fg:w="4"/><text x="85.8200%" y="319.50"></text></g><g><title>vfs_write (4 samples, 0.04%)</title><rect x="85.5700%" y="293" width="0.0392%" height="15" fill="rgb(207,184,53)" fg:x="8729" fg:w="4"/><text x="85.8200%" y="303.50"></text></g><g><title>ext4_file_write_iter (4 samples, 0.04%)</title><rect x="85.5700%" y="277" width="0.0392%" height="15" fill="rgb(224,95,51)" fg:x="8729" fg:w="4"/><text x="85.8200%" y="287.50"></text></g><g><title>ext4_buffered_write_iter (4 samples, 0.04%)</title><rect x="85.5700%" y="261" width="0.0392%" height="15" fill="rgb(212,188,45)" fg:x="8729" fg:w="4"/><text x="85.8200%" y="271.50"></text></g><g><title>generic_perform_write (4 samples, 0.04%)</title><rect x="85.5700%" y="245" width="0.0392%" height="15" fill="rgb(223,154,38)" fg:x="8729" fg:w="4"/><text x="85.8200%" y="255.50"></text></g><g><title>__irqentry_text_end (2 samples, 0.02%)</title><rect x="90.1284%" y="373" width="0.0196%" height="15" fill="rgb(251,22,52)" fg:x="9194" fg:w="2"/><text x="90.3784%" y="383.50"></text></g><g><title>__rcu_read_unlock (2 samples, 0.02%)</title><rect x="90.3343%" y="341" width="0.0196%" height="15" fill="rgb(229,209,22)" fg:x="9215" fg:w="2"/><text x="90.5843%" y="351.50"></text></g><g><title>__pte_offset_map_lock (2 samples, 0.02%)</title><rect x="91.3244%" y="229" width="0.0196%" height="15" fill="rgb(234,138,34)" fg:x="9316" fg:w="2"/><text x="91.5744%" y="239.50"></text></g><g><title>folio_add_file_rmap_ptes (3 samples, 0.03%)</title><rect x="91.3636%" y="229" width="0.0294%" height="15" fill="rgb(212,95,11)" fg:x="9320" fg:w="3"/><text x="91.6136%" y="239.50"></text></g><g><title>xas_find (15 samples, 0.15%)</title><rect x="91.8047%" y="213" width="0.1470%" height="15" fill="rgb(240,179,47)" fg:x="9365" fg:w="15"/><text x="92.0547%" y="223.50"></text></g><g><title>xas_load (13 samples, 0.13%)</title><rect x="91.8243%" y="197" width="0.1274%" height="15" fill="rgb(240,163,11)" fg:x="9367" fg:w="13"/><text x="92.0743%" y="207.50"></text></g><g><title>xas_start (2 samples, 0.02%)</title><rect x="91.9322%" y="181" width="0.0196%" height="15" fill="rgb(236,37,12)" fg:x="9378" fg:w="2"/><text x="92.1822%" y="191.50"></text></g><g><title>next_uptodate_folio (58 samples, 0.57%)</title><rect x="91.3930%" y="229" width="0.5686%" height="15" fill="rgb(232,164,16)" fg:x="9323" fg:w="58"/><text x="91.6430%" y="239.50"></text></g><g><title>_raw_spin_unlock (2 samples, 0.02%)</title><rect x="92.5498%" y="213" width="0.0196%" height="15" fill="rgb(244,205,15)" fg:x="9441" fg:w="2"/><text x="92.7998%" y="223.50"></text></g><g><title>folio_add_file_rmap_ptes (7 samples, 0.07%)</title><rect x="92.5694%" y="213" width="0.0686%" height="15" fill="rgb(223,117,47)" fg:x="9443" fg:w="7"/><text x="92.8194%" y="223.50"></text></g><g><title>native_set_pte (3 samples, 0.03%)</title><rect x="92.6380%" y="213" width="0.0294%" height="15" fill="rgb(244,107,35)" fg:x="9450" fg:w="3"/><text x="92.8880%" y="223.50"></text></g><g><title>percpu_counter_add_batch (19 samples, 0.19%)</title><rect x="92.6674%" y="213" width="0.1863%" height="15" fill="rgb(205,140,8)" fg:x="9453" fg:w="19"/><text x="92.9174%" y="223.50"></text></g><g><title>set_ptes.constprop.0 (27 samples, 0.26%)</title><rect x="92.8536%" y="213" width="0.2647%" height="15" fill="rgb(228,84,46)" fg:x="9472" fg:w="27"/><text x="93.1036%" y="223.50"></text></g><g><title>set_pte_range (121 samples, 1.19%)</title><rect x="91.9616%" y="229" width="1.1862%" height="15" fill="rgb(254,188,9)" fg:x="9381" fg:w="121"/><text x="92.2116%" y="239.50"></text></g><g><title>srso_safe_ret (3 samples, 0.03%)</title><rect x="93.1183%" y="213" width="0.0294%" height="15" fill="rgb(206,112,54)" fg:x="9499" fg:w="3"/><text x="93.3683%" y="223.50"></text></g><g><title>set_ptes.constprop.0 (6 samples, 0.06%)</title><rect x="93.1477%" y="229" width="0.0588%" height="15" fill="rgb(216,84,49)" fg:x="9502" fg:w="6"/><text x="93.3977%" y="239.50"></text></g><g><title>filemap_map_pages (259 samples, 2.54%)</title><rect x="90.8146%" y="245" width="2.5390%" height="15" fill="rgb(214,194,35)" fg:x="9264" fg:w="259"/><text x="91.0646%" y="255.50">fi..</text></g><g><title>srso_safe_ret (15 samples, 0.15%)</title><rect x="93.2065%" y="229" width="0.1470%" height="15" fill="rgb(249,28,3)" fg:x="9508" fg:w="15"/><text x="93.4565%" y="239.50"></text></g><g><title>filemap_map_pmd (2 samples, 0.02%)</title><rect x="93.3536%" y="245" width="0.0196%" height="15" fill="rgb(222,56,52)" fg:x="9523" fg:w="2"/><text x="93.6036%" y="255.50"></text></g><g><title>alloc_pages (2 samples, 0.02%)</title><rect x="93.3732%" y="229" width="0.0196%" height="15" fill="rgb(245,217,50)" fg:x="9525" fg:w="2"/><text x="93.6232%" y="239.50"></text></g><g><title>alloc_pages_mpol (2 samples, 0.02%)</title><rect x="93.3732%" y="213" width="0.0196%" height="15" fill="rgb(213,201,24)" fg:x="9525" fg:w="2"/><text x="93.6232%" y="223.50"></text></g><g><title>__alloc_pages (2 samples, 0.02%)</title><rect x="93.3732%" y="197" width="0.0196%" height="15" fill="rgb(248,116,28)" fg:x="9525" fg:w="2"/><text x="93.6232%" y="207.50"></text></g><g><title>__memcg_kmem_charge_page (2 samples, 0.02%)</title><rect x="93.3732%" y="181" width="0.0196%" height="15" fill="rgb(219,72,43)" fg:x="9525" fg:w="2"/><text x="93.6232%" y="191.50"></text></g><g><title>pte_alloc_one (3 samples, 0.03%)</title><rect x="93.3732%" y="245" width="0.0294%" height="15" fill="rgb(209,138,14)" fg:x="9525" fg:w="3"/><text x="93.6232%" y="255.50"></text></g><g><title>set_pte_range (3 samples, 0.03%)</title><rect x="93.4026%" y="245" width="0.0294%" height="15" fill="rgb(222,18,33)" fg:x="9528" fg:w="3"/><text x="93.6526%" y="255.50"></text></g><g><title>do_read_fault (271 samples, 2.66%)</title><rect x="90.7852%" y="261" width="2.6566%" height="15" fill="rgb(213,199,7)" fg:x="9261" fg:w="271"/><text x="91.0352%" y="271.50">do..</text></g><g><title>filemap_map_pages (2 samples, 0.02%)</title><rect x="93.4418%" y="261" width="0.0196%" height="15" fill="rgb(250,110,10)" fg:x="9532" fg:w="2"/><text x="93.6918%" y="271.50"></text></g><g><title>do_fault (274 samples, 2.69%)</title><rect x="90.7852%" y="277" width="2.6860%" height="15" fill="rgb(248,123,6)" fg:x="9261" fg:w="274"/><text x="91.0352%" y="287.50">do..</text></g><g><title>handle_pte_fault (284 samples, 2.78%)</title><rect x="90.7264%" y="293" width="2.7840%" height="15" fill="rgb(206,91,31)" fg:x="9255" fg:w="284"/><text x="90.9764%" y="303.50">ha..</text></g><g><title>pte_offset_map_nolock (4 samples, 0.04%)</title><rect x="93.4712%" y="277" width="0.0392%" height="15" fill="rgb(211,154,13)" fg:x="9535" fg:w="4"/><text x="93.7212%" y="287.50"></text></g><g><title>__handle_mm_fault (307 samples, 3.01%)</title><rect x="90.5205%" y="309" width="3.0095%" height="15" fill="rgb(225,148,7)" fg:x="9234" fg:w="307"/><text x="90.7705%" y="319.50">__h..</text></g><g><title>count_memcg_events.constprop.0 (6 samples, 0.06%)</title><rect x="93.5300%" y="309" width="0.0588%" height="15" fill="rgb(220,160,43)" fg:x="9541" fg:w="6"/><text x="93.7800%" y="319.50"></text></g><g><title>__count_memcg_events (3 samples, 0.03%)</title><rect x="93.5595%" y="293" width="0.0294%" height="15" fill="rgb(213,52,39)" fg:x="9544" fg:w="3"/><text x="93.8095%" y="303.50"></text></g><g><title>handle_mm_fault (320 samples, 3.14%)</title><rect x="90.4617%" y="325" width="3.1369%" height="15" fill="rgb(243,137,7)" fg:x="9228" fg:w="320"/><text x="90.7117%" y="335.50">han..</text></g><g><title>lock_vma_under_rcu (7 samples, 0.07%)</title><rect x="93.5987%" y="325" width="0.0686%" height="15" fill="rgb(230,79,13)" fg:x="9548" fg:w="7"/><text x="93.8487%" y="335.50"></text></g><g><title>mem_cgroup_from_task (2 samples, 0.02%)</title><rect x="93.6771%" y="325" width="0.0196%" height="15" fill="rgb(247,105,23)" fg:x="9556" fg:w="2"/><text x="93.9271%" y="335.50"></text></g><g><title>do_user_addr_fault (343 samples, 3.36%)</title><rect x="90.3539%" y="341" width="3.3624%" height="15" fill="rgb(223,179,41)" fg:x="9217" fg:w="343"/><text x="90.6039%" y="351.50">do_..</text></g><g><title>irqentry_exit (4 samples, 0.04%)</title><rect x="93.7261%" y="341" width="0.0392%" height="15" fill="rgb(218,9,34)" fg:x="9561" fg:w="4"/><text x="93.9761%" y="351.50"></text></g><g><title>irqentry_exit_to_user_mode (4 samples, 0.04%)</title><rect x="93.7261%" y="325" width="0.0392%" height="15" fill="rgb(222,106,8)" fg:x="9561" fg:w="4"/><text x="93.9761%" y="335.50"></text></g><g><title>asm_exc_page_fault (370 samples, 3.63%)</title><rect x="90.1480%" y="373" width="3.6271%" height="15" fill="rgb(211,220,0)" fg:x="9196" fg:w="370"/><text x="90.3980%" y="383.50">asm_..</text></g><g><title>exc_page_fault (353 samples, 3.46%)</title><rect x="90.3147%" y="357" width="3.4604%" height="15" fill="rgb(229,52,16)" fg:x="9213" fg:w="353"/><text x="90.5647%" y="367.50">exc..</text></g><g><title>error_return (2 samples, 0.02%)</title><rect x="93.7849%" y="373" width="0.0196%" height="15" fill="rgb(212,155,18)" fg:x="9567" fg:w="2"/><text x="94.0349%" y="383.50"></text></g><g><title>srso_safe_ret (3 samples, 0.03%)</title><rect x="93.8143%" y="373" width="0.0294%" height="15" fill="rgb(242,21,14)" fg:x="9570" fg:w="3"/><text x="94.0643%" y="383.50"></text></g><g><title>accountsdb.accounts_file.AccountFile.readAccount (839 samples, 8.22%)</title><rect x="85.6289%" y="389" width="8.2247%" height="15" fill="rgb(222,19,48)" fg:x="8735" fg:w="839"/><text x="85.8789%" y="399.50">accountsdb...</text></g><g><title>next_uptodate_folio (7 samples, 0.07%)</title><rect x="99.5883%" y="229" width="0.0686%" height="15" fill="rgb(232,45,27)" fg:x="10159" fg:w="7"/><text x="99.8383%" y="239.50"></text></g><g><title>xas_find (4 samples, 0.04%)</title><rect x="99.6177%" y="213" width="0.0392%" height="15" fill="rgb(249,103,42)" fg:x="10162" fg:w="4"/><text x="99.8677%" y="223.50"></text></g><g><title>xas_load (4 samples, 0.04%)</title><rect x="99.6177%" y="197" width="0.0392%" height="15" fill="rgb(246,81,33)" fg:x="10162" fg:w="4"/><text x="99.8677%" y="207.50"></text></g><g><title>xas_descend (2 samples, 0.02%)</title><rect x="99.6373%" y="181" width="0.0196%" height="15" fill="rgb(252,33,42)" fg:x="10164" fg:w="2"/><text x="99.8873%" y="191.50"></text></g><g><title>folio_add_file_rmap_ptes (3 samples, 0.03%)</title><rect x="99.7549%" y="213" width="0.0294%" height="15" fill="rgb(209,212,41)" fg:x="10176" fg:w="3"/><text x="100.0049%" y="223.50"></text></g><g><title>percpu_counter_add_batch (2 samples, 0.02%)</title><rect x="99.7843%" y="213" width="0.0196%" height="15" fill="rgb(207,154,6)" fg:x="10179" fg:w="2"/><text x="100.0343%" y="223.50"></text></g><g><title>set_pte_range (19 samples, 0.19%)</title><rect x="99.6569%" y="229" width="0.1863%" height="15" fill="rgb(223,64,47)" fg:x="10166" fg:w="19"/><text x="99.9069%" y="239.50"></text></g><g><title>set_ptes.constprop.0 (4 samples, 0.04%)</title><rect x="99.8039%" y="213" width="0.0392%" height="15" fill="rgb(211,161,38)" fg:x="10181" fg:w="4"/><text x="100.0539%" y="223.50"></text></g><g><title>filemap_map_pages (35 samples, 0.34%)</title><rect x="99.5197%" y="245" width="0.3431%" height="15" fill="rgb(219,138,40)" fg:x="10152" fg:w="35"/><text x="99.7697%" y="255.50"></text></g><g><title>do_read_fault (36 samples, 0.35%)</title><rect x="99.5197%" y="261" width="0.3529%" height="15" fill="rgb(241,228,46)" fg:x="10152" fg:w="36"/><text x="99.7697%" y="271.50"></text></g><g><title>__handle_mm_fault (40 samples, 0.39%)</title><rect x="99.4902%" y="309" width="0.3921%" height="15" fill="rgb(223,209,38)" fg:x="10149" fg:w="40"/><text x="99.7402%" y="319.50"></text></g><g><title>handle_pte_fault (37 samples, 0.36%)</title><rect x="99.5197%" y="293" width="0.3627%" height="15" fill="rgb(236,164,45)" fg:x="10152" fg:w="37"/><text x="99.7697%" y="303.50"></text></g><g><title>do_fault (37 samples, 0.36%)</title><rect x="99.5197%" y="277" width="0.3627%" height="15" fill="rgb(231,15,5)" fg:x="10152" fg:w="37"/><text x="99.7697%" y="287.50"></text></g><g><title>handle_mm_fault (42 samples, 0.41%)</title><rect x="99.4902%" y="325" width="0.4117%" height="15" fill="rgb(252,35,15)" fg:x="10149" fg:w="42"/><text x="99.7402%" y="335.50"></text></g><g><title>count_memcg_events.constprop.0 (2 samples, 0.02%)</title><rect x="99.8824%" y="309" width="0.0196%" height="15" fill="rgb(248,181,18)" fg:x="10189" fg:w="2"/><text x="100.1324%" y="319.50"></text></g><g><title>__count_memcg_events (2 samples, 0.02%)</title><rect x="99.8824%" y="293" width="0.0196%" height="15" fill="rgb(233,39,42)" fg:x="10189" fg:w="2"/><text x="100.1324%" y="303.50"></text></g><g><title>do_user_addr_fault (45 samples, 0.44%)</title><rect x="99.4706%" y="341" width="0.4411%" height="15" fill="rgb(238,110,33)" fg:x="10147" fg:w="45"/><text x="99.7206%" y="351.50"></text></g><g><title>asm_exc_page_fault (47 samples, 0.46%)</title><rect x="99.4608%" y="373" width="0.4607%" height="15" fill="rgb(233,195,10)" fg:x="10146" fg:w="47"/><text x="99.7108%" y="383.50"></text></g><g><title>exc_page_fault (46 samples, 0.45%)</title><rect x="99.4706%" y="357" width="0.4509%" height="15" fill="rgb(254,105,3)" fg:x="10147" fg:w="46"/><text x="99.7206%" y="367.50"></text></g><g><title>accountsdb.index.AccountIndex.validateAccountFile (620 samples, 6.08%)</title><rect x="93.8633%" y="389" width="6.0778%" height="15" fill="rgb(221,225,9)" fg:x="9575" fg:w="620"/><text x="94.1133%" y="399.50">accounts..</text></g><g><title>__x64_sys_clock_nanosleep (4 samples, 0.04%)</title><rect x="99.9412%" y="325" width="0.0392%" height="15" fill="rgb(224,227,45)" fg:x="10195" fg:w="4"/><text x="100.1912%" y="335.50"></text></g><g><title>common_nsleep (4 samples, 0.04%)</title><rect x="99.9412%" y="309" width="0.0392%" height="15" fill="rgb(229,198,43)" fg:x="10195" fg:w="4"/><text x="100.1912%" y="319.50"></text></g><g><title>hrtimer_nanosleep (4 samples, 0.04%)</title><rect x="99.9412%" y="293" width="0.0392%" height="15" fill="rgb(206,209,35)" fg:x="10195" fg:w="4"/><text x="100.1912%" y="303.50"></text></g><g><title>do_nanosleep (4 samples, 0.04%)</title><rect x="99.9412%" y="277" width="0.0392%" height="15" fill="rgb(245,195,53)" fg:x="10195" fg:w="4"/><text x="100.1912%" y="287.50"></text></g><g><title>schedule (2 samples, 0.02%)</title><rect x="99.9608%" y="261" width="0.0196%" height="15" fill="rgb(240,92,26)" fg:x="10197" fg:w="2"/><text x="100.2108%" y="271.50"></text></g><g><title>__schedule (2 samples, 0.02%)</title><rect x="99.9608%" y="245" width="0.0196%" height="15" fill="rgb(207,40,23)" fg:x="10197" fg:w="2"/><text x="100.2108%" y="255.50"></text></g><g><title>finish_task_switch.isra.0 (2 samples, 0.02%)</title><rect x="99.9608%" y="229" width="0.0196%" height="15" fill="rgb(223,111,35)" fg:x="10197" fg:w="2"/><text x="100.2108%" y="239.50"></text></g><g><title>__perf_event_task_sched_in (2 samples, 0.02%)</title><rect x="99.9608%" y="213" width="0.0196%" height="15" fill="rgb(229,147,28)" fg:x="10197" fg:w="2"/><text x="100.2108%" y="223.50"></text></g><g><title>ctx_sched_in (2 samples, 0.02%)</title><rect x="99.9608%" y="197" width="0.0196%" height="15" fill="rgb(211,29,28)" fg:x="10197" fg:w="2"/><text x="100.2108%" y="207.50"></text></g><g><title>ctx_groups_sched_in (2 samples, 0.02%)</title><rect x="99.9608%" y="181" width="0.0196%" height="15" fill="rgb(228,72,33)" fg:x="10197" fg:w="2"/><text x="100.2108%" y="191.50"></text></g><g><title>visit_groups_merge.constprop.0.isra.0 (2 samples, 0.02%)</title><rect x="99.9608%" y="165" width="0.0196%" height="15" fill="rgb(205,214,31)" fg:x="10197" fg:w="2"/><text x="100.2108%" y="175.50"></text></g><g><title>merge_sched_in (2 samples, 0.02%)</title><rect x="99.9608%" y="149" width="0.0196%" height="15" fill="rgb(224,111,15)" fg:x="10197" fg:w="2"/><text x="100.2108%" y="159.50"></text></g><g><title>event_sched_in (2 samples, 0.02%)</title><rect x="99.9608%" y="133" width="0.0196%" height="15" fill="rgb(253,21,26)" fg:x="10197" fg:w="2"/><text x="100.2108%" y="143.50"></text></g><g><title>clock_nanosleep@GLIBC_2.2.5 (5 samples, 0.05%)</title><rect x="99.9412%" y="389" width="0.0490%" height="15" fill="rgb(245,139,43)" fg:x="10195" fg:w="5"/><text x="100.1912%" y="399.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.05%)</title><rect x="99.9412%" y="373" width="0.0490%" height="15" fill="rgb(252,170,7)" fg:x="10195" fg:w="5"/><text x="100.1912%" y="383.50"></text></g><g><title>do_syscall_64 (5 samples, 0.05%)</title><rect x="99.9412%" y="357" width="0.0490%" height="15" fill="rgb(231,118,14)" fg:x="10195" fg:w="5"/><text x="100.1912%" y="367.50"></text></g><g><title>x64_sys_call (5 samples, 0.05%)</title><rect x="99.9412%" y="341" width="0.0490%" height="15" fill="rgb(238,83,0)" fg:x="10195" fg:w="5"/><text x="100.1912%" y="351.50"></text></g><g><title>all (10,201 samples, 100%)</title><rect x="0.0000%" y="421" width="100.0000%" height="15" fill="rgb(221,39,39)" fg:x="0" fg:w="10201"/><text x="0.2500%" y="431.50"></text></g><g><title>benchmark (10,201 samples, 100.00%)</title><rect x="0.0000%" y="405" width="100.0000%" height="15" fill="rgb(222,119,46)" fg:x="0" fg:w="10201"/><text x="0.2500%" y="415.50">benchmark</text></g></svg></svg>